{"version":3,"file":"auth-components-iWqtXpfe.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../src/Shared/Loading/Loading.tsx","../../src/Redux/Slices/AuthSlice/AuthSlice.ts","../../src/utils/quizDataNormalizer.ts","../../src/services/api.ts","../../src/Shared/ErrorMessage/ErrorMessage.tsx","../../src/Shared/AuthButton/AuthButton.tsx","../../src/Components/ChangePassword/ChangePassword.tsx","../../src/hooks/useAuth.ts","../../src/Components/Login/Login.tsx","../../src/Components/Register/Register.tsx","../../src/ApiUtils/AuthApiUtils.ts","../../src/Components/RequestResetPass/RequestResetPass.tsx","../../src/Components/RestPassword/RestPassword.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","\r\nexport default function Loading() {\r\n  return (\r\n    <i className=\"fa-solid fa-spin fa-circle-notch\"></i>\r\n  )\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { AuthState } from \"./Interfaces\";\r\nimport { Cookies } from \"typescript-cookie\";\r\n\r\n\r\nconst initialState: AuthState = {\r\n  userData: Cookies.get(\"userData\")\r\n    ? JSON.parse(String(Cookies.get(\"userData\")))\r\n    : null,\r\n  headers: {\r\n    headers: {\r\n      Authorization: Cookies.get(\"userData\")\r\n        ? `Bearer ${JSON.parse(String(Cookies.get(\"userData\"))).accessToken}`\r\n        : null,\r\n    },\r\n  },\r\n  isAuthed: false,\r\n};\r\n\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    setUserData: (state, action) => {\r\n      state.userData = action.payload;\r\n      if (state.userData?.accessToken) {\r\n        state.isAuthed = true;\r\n        Cookies.set(\"userData\", JSON.stringify(action.payload));\r\n        state.headers= {\r\n          headers: {\r\n            Authorization: Cookies.get(\"userData\")\r\n              ? `Bearer ${JSON.parse(String(Cookies.get(\"userData\"))).accessToken}`\r\n              : null,\r\n          },\r\n        }\r\n      }\r\n    },\r\n    logOut: (state) => {\r\n      state.userData = null;\r\n      state.isAuthed = false;\r\n\r\n      state.headers = { headers: { Authorization: \"\" } };\r\n      Cookies.remove(\"userData\", {});\r\n    },\r\n  },\r\n});\r\n\r\nexport const authReducer = authSlice.reducer;\r\nexport const { setUserData, logOut } = authSlice.actions;\r\n","import { Quiz } from '../types';\r\n\r\n/**\r\n * Normalizes quiz data to handle field name mismatches between frontend and backend\r\n * The backend uses 'schadule' (with typo) while frontend expects 'schedule'\r\n */\r\nexport const normalizeQuizData = (quiz: any): Quiz => {\r\n  // Handle the schedule/schadule field name mismatch\r\n  const normalizedQuiz = { ...quiz };\r\n  \r\n  // If the quiz has 'schadule' field (backend typo), copy it to 'schedule'\r\n  if (quiz.schadule !== undefined && quiz.schedule === undefined) {\r\n    normalizedQuiz.schedule = quiz.schadule;\r\n  }\r\n  \r\n  // If the quiz has 'schedule' field (correct), use it\r\n  if (quiz.schedule !== undefined) {\r\n    normalizedQuiz.schedule = quiz.schedule;\r\n  }\r\n  \r\n  return normalizedQuiz as Quiz;\r\n};\r\n\r\n/**\r\n * Normalizes an array of quiz data\r\n */\r\nexport const normalizeQuizArray = (quizzes: any[]): Quiz[] => {\r\n  return quizzes.map(normalizeQuizData);\r\n}; ","import axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { Cookies } from 'typescript-cookie';\r\nimport { ApiResponse, ApiError, Quiz } from '../types';\r\nimport { normalizeQuizArray } from '../utils/quizDataNormalizer';\r\n\r\n// Base API configuration\r\nconst BASE_URL = 'https://upskilling-egypt.com:3005/api';\r\n\r\n// Create axios instance with default configuration\r\nconst apiClient = axios.create({\r\n  baseURL: BASE_URL,\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    console.log('üîç [Axios Interceptor] Request interceptor called');\r\n    console.log('üìä [Axios Interceptor] Request URL:', config.url);\r\n    console.log('üìä [Axios Interceptor] Request method:', config.method);\r\n    console.log('üìä [Axios Interceptor] Request headers:', config.headers);\r\n    \r\n    const userData = Cookies.get('userData');\r\n    console.log('üìä [Axios Interceptor] User data from cookies:', userData ? 'Present' : 'Not present');\r\n    \r\n    if (userData) {\r\n      try {\r\n        const parsedData = JSON.parse(userData as string);\r\n        console.log('üìä [Axios Interceptor] Parsed user data:', parsedData);\r\n        if (parsedData.accessToken) {\r\n          config.headers.Authorization = `Bearer ${parsedData.accessToken}`;\r\n          console.log('‚úÖ [Axios Interceptor] Authorization header added');\r\n        } else {\r\n          console.log('‚ö†Ô∏è [Axios Interceptor] No access token found in user data');\r\n        }\r\n      } catch (error) {\r\n        console.error('‚ùå [Axios Interceptor] Error parsing user data from cookies:', error);\r\n      }\r\n    } else {\r\n      console.log('‚ö†Ô∏è [Axios Interceptor] No user data found in cookies');\r\n    }\r\n    \r\n    console.log('üìä [Axios Interceptor] Final request config:', config);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('‚ùå [Axios Interceptor] Request interceptor error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napiClient.interceptors.response.use(\r\n  (response: AxiosResponse) => {\r\n    console.log('‚úÖ [Axios Interceptor] Response interceptor - Success');\r\n    console.log('üìä [Axios Interceptor] Response URL:', response.config.url);\r\n    console.log('üìä [Axios Interceptor] Response status:', response.status);\r\n    console.log('üìä [Axios Interceptor] Response headers:', response.headers);\r\n    console.log('üìä [Axios Interceptor] Response data:', response.data);\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    console.error('‚ùå [Axios Interceptor] Response interceptor - Error');\r\n    console.error('üìä [Axios Interceptor] Error URL:', error.config?.url);\r\n    console.error('üìä [Axios Interceptor] Error status:', error.response?.status);\r\n    console.error('üìä [Axios Interceptor] Error data:', error.response?.data);\r\n    console.error('üìä [Axios Interceptor] Error message:', error.message);\r\n    \r\n    const apiError: ApiError = {\r\n      message: 'An unexpected error occurred',\r\n      status: error.response?.status || 500,\r\n      data: error.response?.data,\r\n    };\r\n\r\n    if (error.response?.data && typeof error.response.data === 'object') {\r\n      const errorData = error.response.data as any;\r\n      apiError.message = errorData.message || apiError.message;\r\n    }\r\n\r\n    // Handle specific error cases\r\n    switch (error.response?.status) {\r\n      case 401:\r\n        console.log('üîç [Axios Interceptor] 401 Unauthorized - redirecting to login');\r\n        // Handle unauthorized - redirect to login\r\n        Cookies.remove('userData');\r\n        window.location.href = '/login';\r\n        break;\r\n      case 403:\r\n        console.log('üîç [Axios Interceptor] 403 Forbidden');\r\n        apiError.message = 'You do not have permission to perform this action';\r\n        break;\r\n      case 404:\r\n        console.log('üîç [Axios Interceptor] 404 Not Found');\r\n        apiError.message = 'Resource not found';\r\n        break;\r\n      case 500:\r\n        console.log('üîç [Axios Interceptor] 500 Internal Server Error');\r\n        apiError.message = 'Internal server error. Please try again later.';\r\n        break;\r\n    }\r\n\r\n    console.error('üìä [Axios Interceptor] Final API error:', apiError);\r\n    return Promise.reject(apiError);\r\n  }\r\n);\r\n\r\n// Generic API service class\r\nclass ApiService {\r\n  // GET request\r\n  async get<T>(endpoint: string, config?: AxiosRequestConfig): Promise<T> {\r\n    console.log('üîç [ApiService] GET request to:', endpoint);\r\n    console.log('üîç [ApiService] Full URL:', `${BASE_URL}${endpoint}`);\r\n    console.log('üîç [ApiService] Config:', config);\r\n    \r\n    try {\r\n      console.log('üîç [ApiService] Making HTTP request...');\r\n      const response = await apiClient.get<ApiResponse<T>>(endpoint, config);\r\n      console.log('‚úÖ [ApiService] HTTP request successful');\r\n      console.log('üìä [ApiService] Response status:', response.status);\r\n      console.log('üìä [ApiService] Response headers:', response.headers);\r\n      console.log('üìä [ApiService] Full response data:', response.data);\r\n      console.log('üìä [ApiService] Response data type:', typeof response.data);\r\n      console.log('üìä [ApiService] Response data keys:', Object.keys(response.data));\r\n      console.log('üìä [ApiService] Extracted data:', response.data.data);\r\n      console.log('üìä [ApiService] Data type:', typeof response.data.data);\r\n      console.log('üìä [ApiService] Is array:', Array.isArray(response.data.data));\r\n      console.log('üìä [ApiService] Data constructor:', response.data.data?.constructor?.name);\r\n      console.log('üìä [ApiService] Data stringified:', JSON.stringify(response.data.data, null, 2));\r\n      \r\n      // Handle different possible response structures\r\n      let finalData: any = response.data.data;\r\n      \r\n      // If data.data is not an array, check if response.data itself is an array\r\n      if (!Array.isArray(finalData)) {\r\n        console.log('‚ö†Ô∏è [ApiService] response.data.data is not an array, checking response.data');\r\n        if (Array.isArray(response.data)) {\r\n          console.log('‚úÖ [ApiService] response.data is an array, using it directly');\r\n          finalData = response.data;\r\n        } else {\r\n          console.log('‚ùå [ApiService] Neither response.data.data nor response.data is an array');\r\n          console.log('üìä [ApiService] response.data structure:', response.data);\r\n        }\r\n      }\r\n      \r\n      console.log('üìä [ApiService] Final data to return:', finalData);\r\n      console.log('üìä [ApiService] Final data type:', typeof finalData);\r\n      console.log('üìä [ApiService] Final data is array:', Array.isArray(finalData));\r\n      \r\n      return finalData as T;\r\n    } catch (error) {\r\n      console.error('‚ùå [ApiService] HTTP request failed:', error);\r\n      this.handleError(error as ApiError);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // POST request\r\n  async post<T>(endpoint: string, data?: any, config?: AxiosRequestConfig): Promise<T> {\r\n    try {\r\n      const response = await apiClient.post<ApiResponse<T>>(endpoint, data, config);\r\n      return response.data.data;\r\n    } catch (error) {\r\n      this.handleError(error as ApiError);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // PUT request\r\n  async put<T>(endpoint: string, data?: any, config?: AxiosRequestConfig): Promise<T> {\r\n    try {\r\n      const response = await apiClient.put<ApiResponse<T>>(endpoint, data, config);\r\n      return response.data.data;\r\n    } catch (error) {\r\n      this.handleError(error as ApiError);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // DELETE request\r\n  async delete<T>(endpoint: string, config?: AxiosRequestConfig): Promise<T> {\r\n    try {\r\n      const response = await apiClient.delete<ApiResponse<T>>(endpoint, config);\r\n      return response.data.data;\r\n    } catch (error) {\r\n      this.handleError(error as ApiError);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Centralized error handling\r\n  private handleError(error: ApiError): void {\r\n    // Only show toast for user-facing errors\r\n    if (error.status !== 401) {\r\n      toast.error(error.message);\r\n    }\r\n    \r\n    // Log error for debugging\r\n    console.error('API Error:', error);\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const apiService = new ApiService();\r\n\r\n// Specific API service classes\r\nexport class AuthService {\r\n  async login(credentials: { email: string; password: string }) {\r\n    return apiService.post('/auth/login', credentials);\r\n  }\r\n\r\n  async register(userData: { first_name: string; last_name: string; email: string; password: string; role: string }) {\r\n    return apiService.post('/auth/register', userData);\r\n  }\r\n\r\n  async forgotPassword(email: { email: string }) {\r\n    return apiService.post('/auth/forgot-password', email);\r\n  }\r\n\r\n  async resetPassword(data: { email: string; seed: string; password: string }) {\r\n    return apiService.post('/auth/reset-password', data);\r\n  }\r\n\r\n  async changePassword(data: { oldPassword: string; newPassword: string }) {\r\n    return apiService.post('/auth/change-password', data);\r\n  }\r\n}\r\n\r\nexport class QuizService {\r\n  // Role-based quiz fetching methods - using the correct endpoint\r\n  async getIncomingQuizzes(): Promise<Quiz[]> {\r\n    console.log('üîç [QuizService] getIncomingQuizzes() called');\r\n    const endpoint = '/quiz/incomming'; // This is the only endpoint you have\r\n    console.log('üîç [QuizService] Using endpoint:', endpoint);\r\n    \r\n    try {\r\n      console.log('üîç [QuizService] Making API request to:', `${BASE_URL}${endpoint}`);\r\n      const data = await apiService.get<Quiz[]>(endpoint);\r\n      console.log('‚úÖ [QuizService] getIncomingQuizzes() successful');\r\n      console.log('üìä [QuizService] Received data:', data);\r\n      console.log('üìä [QuizService] Data type:', typeof data);\r\n      console.log('üìä [QuizService] Data length:', Array.isArray(data) ? data.length : 'Not an array');\r\n      console.log('üìä [QuizService] Data structure:', JSON.stringify(data, null, 2));\r\n      \r\n      // Ensure we always return an array and normalize the data\r\n      if (!Array.isArray(data)) {\r\n        console.log('‚ö†Ô∏è [QuizService] Data is not an array, converting to empty array');\r\n        return [];\r\n      }\r\n      \r\n      // Normalize the quiz data to handle field name mismatches\r\n      const normalizedData = normalizeQuizArray(data);\r\n      console.log('‚úÖ [QuizService] Data normalized successfully');\r\n      console.log('‚úÖ [QuizService] Returning normalized array with', normalizedData.length, 'items');\r\n      return normalizedData;\r\n    } catch (error: any) {\r\n      console.error('‚ùå [QuizService] getIncomingQuizzes() failed:', error);\r\n      console.error('‚ùå [QuizService] Error details:', {\r\n        message: error.message,\r\n        status: error.status,\r\n        data: error.data\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getCompletedQuizzes(role: 'Student' | 'Instructor'): Promise<Quiz[]> {\r\n    const endpoint = '/quiz/completed';\r\n    try {\r\n      const data = await apiService.get<Quiz[]>(endpoint);\r\n      \r\n      // Ensure we always return an array and normalize the data\r\n      if (!Array.isArray(data)) {\r\n        console.log('‚ö†Ô∏è [QuizService] Completed quizzes data is not an array, converting to empty array');\r\n        return [];\r\n      }\r\n      \r\n      // Normalize the quiz data to handle field name mismatches\r\n      const normalizedData = normalizeQuizArray(data);\r\n      console.log('‚úÖ [QuizService] Completed quizzes data normalized successfully');\r\n      return normalizedData;\r\n    } catch (error: any) {\r\n      console.error('‚ùå [QuizService] getCompletedQuizzes() failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Remove legacy methods - they use wrong endpoints\r\n  // async getUpcomingQuizzes(role: 'Student' | 'Instructor') {\r\n  //   return apiService.get('/quiz');\r\n  // }\r\n\r\n  // async getCompletedQuizzesLegacy() {\r\n  //   return apiService.get('/quiz');\r\n  // }\r\n\r\n  async createQuiz(quizData: any) {\r\n    return apiService.post('/quiz', quizData);\r\n  }\r\n\r\n  async updateQuiz(id: string, quizData: any) {\r\n    return apiService.put(`/quiz/${id}`, quizData);\r\n  }\r\n\r\n  async deleteQuiz(id: string) {\r\n    return apiService.delete(`/quiz/${id}`);\r\n  }\r\n\r\n  async joinQuiz(code: { code: string }) {\r\n    return apiService.post('/quiz/join', code);\r\n  }\r\n\r\n  async getQuizQuestions(quizId: string) {\r\n    return apiService.get(`/quiz/without-answers/${quizId}`);\r\n  }\r\n\r\n  async submitQuiz(quizId: string, answers: { answers: any[] }) {\r\n    return apiService.post(`/quiz/submit/${quizId}`, answers);\r\n  }\r\n\r\n  async getQuizResults() {\r\n    return apiService.get('/quiz/result');\r\n  }\r\n}\r\n\r\nexport class QuestionService {\r\n  async getQuestions() {\r\n    return apiService.get('/question');\r\n  }\r\n\r\n  async createQuestion(questionData: any) {\r\n    return apiService.post('/question', questionData);\r\n  }\r\n\r\n  async updateQuestion(id: string, questionData: any) {\r\n    return apiService.put(`/question/${id}`, questionData);\r\n  }\r\n\r\n  async deleteQuestion(id: string) {\r\n    return apiService.delete(`/question/${id}`);\r\n  }\r\n}\r\n\r\nexport class GroupService {\r\n  async getGroups() {\r\n    return apiService.get('/group');\r\n  }\r\n\r\n  async createGroup(groupData: any) {\r\n    return apiService.post('/group', groupData);\r\n  }\r\n\r\n  async updateGroup(id: string, groupData: any) {\r\n    return apiService.put(`/group/${id}`, groupData);\r\n  }\r\n\r\n  async deleteGroup(id: string) {\r\n    return apiService.delete(`/group/${id}`);\r\n  }\r\n\r\n  async getGroupById(id: string) {\r\n    return apiService.get(`/group/${id}`);\r\n  }\r\n}\r\n\r\nexport class StudentService {\r\n  async getStudents() {\r\n    return apiService.get('/student');\r\n  }\r\n\r\n  async getTopStudents() {\r\n    return apiService.get('/student/top-five');\r\n  }\r\n\r\n  async getStudentById(id: string) {\r\n    return apiService.get(`/student/${id}`);\r\n  }\r\n\r\n  async updateStudent(id: string, groupId: string) {\r\n    return apiService.put(`/student/${id}/${groupId}`, {});\r\n  }\r\n\r\n  async deleteStudent(studentId: string, groupId: string) {\r\n    return apiService.delete(`/student/${studentId}/${groupId}`);\r\n  }\r\n}\r\n\r\n// Export service instances\r\nexport const authService = new AuthService();\r\nexport const quizService = new QuizService();\r\nexport const questionService = new QuestionService();\r\nexport const groupService = new GroupService();\r\nexport const studentService = new StudentService(); \r\n","import { ReactNode } from \"react\";\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n}\r\nexport default function ErrorMessage({children}: Props) {\r\n  return (\r\n    <>\r\n      <div className=\"group\">\r\n        <i className=\"fa-solid fa-circle-exclamation text-red-300 p-2 \"></i>\r\n\r\n        <span className=\"hidden absolute group-hover:block w-auto bg-red-200 text-red-800 border border-red-500 px-2 py-1 rounded z-[1]\">\r\n          {children}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { ReactNode } from \"react\"\r\n\r\ninterface Prop{\r\n  children:ReactNode\r\n  type?: \"submit\" | \"button\" | \"reset\"\r\n  disabled?: boolean\r\n}\r\n\r\nexport default function AuthButton({children, type = \"submit\", disabled = false}:Prop) {\r\n  return (\r\n    <button\r\n    type={type}\r\n    disabled={disabled}\r\n    className=\"bg-slate-50 transition duration-100 hover:bg-gray-800  text-slate-950  hover:text-slate-50  rounded-lg px-4 py-2 mt-2 font-medium disabled:opacity-50 disabled:cursor-not-allowed\"\r\n  >\r\n    {children}\r\n    <i className=\"fa-solid fa-check ms-1 text-white p-1 rounded-full bg-black\"></i>\r\n  </button>\r\n  )\r\n}\r\n","import { useForm } from \"react-hook-form\";\r\nimport ErrorMessage from \"../../Shared/ErrorMessage/ErrorMessage\";\r\nimport AuthButton from \"../../Shared/AuthButton/AuthButton\";\r\n\r\nexport default function ChangePassword() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    getValues,\r\n  } = useForm();\r\n\r\n  function onSubmit(data: object) {\r\n    console.log(data);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"text-2xl  text-secondry\">Change password</h3>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"mt-12\">\r\n        <div className=\"password mt-2\">\r\n          <label htmlFor=\"password\" className=\"w-full ps-1 mb-1\">\r\n            Password\r\n          </label>\r\n          <div\r\n            className={`flex rounded-md border-3 ${\r\n              !errors.password ? \"border-white\" : \"border-red-500\"\r\n            }`}\r\n          >\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white \">\r\n              <i className=\"fa-solid fa-key\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"password\", {\r\n                required: \"field is required\",\r\n                minLength: {\r\n                  value: 8,\r\n                  message: \"Password should be at least 8 characters\",\r\n                },\r\n              })}\r\n              type=\"password\"\r\n              id=\"password\"\r\n              className=\"block px-2  flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Type your password\"\r\n            />\r\n            {errors.password && (\r\n              <ErrorMessage>{String(errors.password.message)}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"Confirm-Password mt-2\">\r\n          <label htmlFor=\"Confirm-Password\" className=\"w-full ps-1 mb-1\">\r\n            Confirm Password\r\n          </label>\r\n          <div\r\n            className={`flex rounded-md border-3 ${\r\n              !errors.password_new ? \"border-white\" : \"border-red-500\"\r\n            }`}\r\n          >\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white \">\r\n              <i className=\"fa-solid fa-key\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"password_new\", {\r\n                required: \"new password is required\",\r\n                minLength: {\r\n                  value: 8,\r\n                  message: \"new password should be greater than 8 digits\",\r\n                },\r\n                validate: (value) =>\r\n                  value == getValues(\"password\") &&\r\n                  \"new password and old password should not match \",\r\n              })}\r\n              type=\"password\"\r\n              id=\"Confirm-Password\"\r\n              className=\"block px-2  flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Type your confirm password\"\r\n            />\r\n            {errors.password_new && (\r\n              <ErrorMessage>{String(errors.password_new.message)}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"Confirm-Password mt-2\">\r\n          <label htmlFor=\"Confirm-Password\" className=\"w-full ps-1 mb-1\">\r\n            Confirm Password\r\n          </label>\r\n          <div\r\n            className={`flex rounded-md border-3 ${\r\n              !errors.confirmNewPassword ? \"border-white\" : \"border-red-500\"\r\n            }`}\r\n          >\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white \">\r\n              <i className=\"fa-solid fa-key\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"confirmNewPassword\", {\r\n                validate: (value) =>\r\n                  value === getValues(\"password_new\") ||\r\n                  \"passwords is mismatch\",\r\n              })}\r\n              type=\"password\"\r\n              id=\"Confirm-Password\"\r\n              className=\"block px-2  flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Type your confirm password\"\r\n            />\r\n            {errors.confirmNewPassword && (\r\n              <ErrorMessage>\r\n                {String(errors.confirmNewPassword.message)}\r\n              </ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <AuthButton>Change</AuthButton>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { authService } from '../services/api';\r\nimport { setUserData } from '../Redux/Slices/AuthSlice/AuthSlice';\r\nimport { LoadingState, ApiError } from '../types';\r\n\r\ninterface LoginCredentials {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\ninterface RegisterData {\r\n  first_name: string;\r\n  last_name: string;\r\n  email: string;\r\n  password: string;\r\n  role: string;\r\n}\r\n\r\ninterface ForgotPasswordData {\r\n  email: string;\r\n}\r\n\r\ninterface ResetPasswordData {\r\n  email: string;\r\n  seed: string;\r\n  password: string;\r\n}\r\n\r\ninterface ChangePasswordData {\r\n  oldPassword: string;\r\n  newPassword: string;\r\n}\r\n\r\nexport const useAuth = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  \r\n  const [loadingState, setLoadingState] = useState<LoadingState>('idle');\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const login = async (credentials: LoginCredentials) => {\r\n    setLoadingState('pending');\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await authService.login(credentials);\r\n      \r\n      dispatch(setUserData(response));\r\n      toast.success('Login successful!');\r\n      \r\n      // Navigate based on user role\r\n      if (response.profile?.role === 'Student') {\r\n        navigate('/student');\r\n      } else {\r\n        navigate('/dashboard');\r\n      }\r\n      \r\n      setLoadingState('succeeded');\r\n      return response;\r\n    } catch (error) {\r\n      const apiError = error as ApiError;\r\n      setError(apiError.message);\r\n      setLoadingState('failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (userData: RegisterData) => {\r\n    setLoadingState('pending');\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await authService.register(userData);\r\n      \r\n      dispatch(setUserData(response));\r\n      toast.success('Registration successful!');\r\n      \r\n      // Navigate based on user role\r\n      if (response.profile?.role === 'Student') {\r\n        navigate('/student');\r\n      } else {\r\n        navigate('/dashboard');\r\n      }\r\n      \r\n      setLoadingState('succeeded');\r\n      return response;\r\n    } catch (error) {\r\n      const apiError = error as ApiError;\r\n      setError(apiError.message);\r\n      setLoadingState('failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const forgotPassword = async (emailData: ForgotPasswordData) => {\r\n    setLoadingState('pending');\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await authService.forgotPassword(emailData);\r\n      \r\n      toast.success('Reset password email sent!');\r\n      navigate('/reset-password');\r\n      \r\n      setLoadingState('succeeded');\r\n      return response;\r\n    } catch (error) {\r\n      const apiError = error as ApiError;\r\n      setError(apiError.message);\r\n      setLoadingState('failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const resetPassword = async (resetData: ResetPasswordData) => {\r\n    setLoadingState('pending');\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await authService.resetPassword(resetData);\r\n      \r\n      toast.success('Password reset successful!');\r\n      navigate('/login');\r\n      \r\n      setLoadingState('succeeded');\r\n      return response;\r\n    } catch (error) {\r\n      const apiError = error as ApiError;\r\n      setError(apiError.message);\r\n      setLoadingState('failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const changePassword = async (passwordData: ChangePasswordData) => {\r\n    setLoadingState('pending');\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await authService.changePassword(passwordData);\r\n      \r\n      toast.success('Password changed successfully!');\r\n      \r\n      setLoadingState('succeeded');\r\n      return response;\r\n    } catch (error) {\r\n      const apiError = error as ApiError;\r\n      setError(apiError.message);\r\n      setLoadingState('failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  return {\r\n    login,\r\n    register,\r\n    forgotPassword,\r\n    resetPassword,\r\n    changePassword,\r\n    loading: loadingState === 'pending',\r\n    error,\r\n    isIdle: loadingState === 'idle',\r\n    isLoading: loadingState === 'pending',\r\n    isSuccess: loadingState === 'succeeded',\r\n    isError: loadingState === 'failed',\r\n  };\r\n}; \r\n","import { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ErrorMessage from \"../../Shared/ErrorMessage/ErrorMessage\";\r\nimport AuthButton from \"../../Shared/AuthButton/AuthButton\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport Loading from \"../../Shared/Loading/Loading\";\r\n\r\ninterface LoginFormData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport default function Login() {\r\n  const { login, isLoading } = useAuth();\r\n  \r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<LoginFormData>();\r\n  \r\n  const onSubmit = async (data: LoginFormData) => {\r\n    try {\r\n      await login(data);\r\n    } catch (error) {\r\n      // Error is handled by useAuth hook\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"text-2xl  text-secondary\">\r\n        Continue your learning journey with QuizWiz!\r\n      </h3>\r\n\r\n      <div className=\"grid grid-cols-2 gap-2 md:grid-cols-3 my-3\">\r\n        <Link to=\"/\" className=\"signin\">\r\n          <div className=\"content text-8xl xl:text-6xl lg:text-6xl py-3 rounded-lg text-center bg-stone-700 border-4 border-secondary\">\r\n            <i className=\"fa-solid fa-user text-secondary\"></i>\r\n            <p className=\"text-base mt-2\">Sign in</p>\r\n          </div>\r\n        </Link>\r\n        <Link to=\"/register\" className=\"signup\">\r\n          <div className=\"content text-8xl xl:text-6xl lg:text-6xl py-3 bg-stone-700 rounded-lg text-center border-4 border-stone-700\">\r\n            <i className=\"fa-solid fa-user-plus  \"></i>\r\n            <p className=\"text-base mt-2\">Sign Up</p>\r\n          </div>\r\n        </Link>\r\n        <div className=\"signup w-1/2\"></div>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"my-12\">\r\n        <div className=\"email mt-2\">\r\n          <label htmlFor=\"email\" className=\"w-full ps-1 mb-1 \">\r\n            Registered email address\r\n          </label>\r\n          <div\r\n            className={`flex rounded-md border-3 ${\r\n              !errors.email ? \"border-white\" : \"border-red-500\"\r\n            }`}\r\n          >\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white \">\r\n              <i className=\"fa-solid fa-envelope\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"email\", {\r\n                required: \"Email is required\",\r\n                pattern: {\r\n                  value: /^[A-Z0-9.]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                  message: \"Invalid email address\",\r\n                },\r\n              })}\r\n              type=\"text\"\r\n              id=\"email\"\r\n              className=\"block px-2  flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Type your email\"\r\n            />\r\n            {errors.email && (\r\n              <ErrorMessage>{String(errors.email.message)}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"password mt-2\">\r\n          <label htmlFor=\"password\" className=\"w-full ps-1 mb-1\">\r\n            Password\r\n          </label>\r\n          <div\r\n            className={`flex rounded-md border-3 ${\r\n              !errors.password ? \"border-white\" : \"border-red-500\"\r\n            }`}\r\n          >\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white \">\r\n              <i className=\"fa-solid fa-key\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"password\", {\r\n                required: \"field is required\",\r\n                minLength: {\r\n                  value: 8,\r\n                  message: \"Password should be at least 8 characters\",\r\n                },\r\n              })}\r\n              type=\"password\"\r\n              id=\"password\"\r\n              className=\"block px-2  flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Type your password\"\r\n            />\r\n            {errors.password && (\r\n              <ErrorMessage>{String(errors.password.message)}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex mt-3 mb-16 justify-between items-end\">\r\n          <AuthButton type=\"submit\" disabled={isLoading}>\r\n            {isLoading ? <Loading /> : \"Sign In\"}\r\n          </AuthButton>\r\n          <p>\r\n            Forgot password?{\" \"}\r\n            <Link className=\"text-secondary hover:underline\" to=\"/request-reset-password\">\r\n              click here\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ErrorMessage from \"../../Shared/ErrorMessage/ErrorMessage\";\r\nimport AuthButton from \"../../Shared/AuthButton/AuthButton\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport Loading from \"../../Shared/Loading/Loading\";\r\n\r\ninterface RegisterFormData {\r\n  first_name: string;\r\n  last_name: string;\r\n  email: string;\r\n  password: string;\r\n  role: string;\r\n}\r\n\r\nexport default function Register() {\r\n  const { register: registerUser, isLoading } = useAuth();\r\n  \r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<RegisterFormData>();\r\n\r\n  const onSubmit = async (data: RegisterFormData) => {\r\n    try {\r\n      await registerUser(data);\r\n    } catch (error) {\r\n      // Error is handled by useAuth hook\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"text-2xl text-secondry\">\r\n        Create your account and start your learning journey with QuizWiz!\r\n      </h3>\r\n\r\n      <div className=\"grid grid-cols-2 gap-2 md:grid-cols-3 my-3\">\r\n        <Link to=\"/login\" className=\"signin\">\r\n          <div className=\"content text-8xl xl:text-6xl lg:text-6xl py-3 bg-stone-700 rounded-lg text-center border-4 border-stone-700\">\r\n            <i className=\"fa-solid fa-user\"></i>\r\n            <p className=\"text-base mt-2\">Sign in</p>\r\n          </div>\r\n        </Link>\r\n        <Link to=\"/register\" className=\"signup\">\r\n          <div className=\"content text-8xl xl:text-6xl lg:text-6xl py-3 rounded-lg text-center bg-stone-700 border-4 border-secondry\">\r\n            <i className=\"fa-solid fa-user-plus text-secondry\"></i>\r\n            <p className=\"text-base mt-2\">Sign Up</p>\r\n          </div>\r\n        </Link>\r\n        <div className=\"signup w-1/2\"></div>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"my-12 space-y-4\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          {/* First Name */}\r\n          <div>\r\n            <label htmlFor=\"first_name\" className=\"w-full ps-1 mb-1\">\r\n              First Name\r\n            </label>\r\n            <div className={`flex rounded-md border-3 ${!errors.first_name ? \"border-white\" : \"border-red-500\"}`}>\r\n              <span className=\"flex select-none items-center me-3 pl-3 text-white\">\r\n                <i className=\"fa-solid fa-user\"></i>\r\n              </span>\r\n              <input\r\n                {...register(\"first_name\", {\r\n                  required: \"First name is required\",\r\n                  minLength: {\r\n                    value: 2,\r\n                    message: \"First name must be at least 2 characters\",\r\n                  },\r\n                })}\r\n                type=\"text\"\r\n                id=\"first_name\"\r\n                className=\"block px-2 flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n                placeholder=\"Enter your first name\"\r\n              />\r\n              {errors.first_name && (\r\n                <ErrorMessage>{errors.first_name.message}</ErrorMessage>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Last Name */}\r\n          <div>\r\n            <label htmlFor=\"last_name\" className=\"w-full ps-1 mb-1\">\r\n              Last Name\r\n            </label>\r\n            <div className={`flex rounded-md border-3 ${!errors.last_name ? \"border-white\" : \"border-red-500\"}`}>\r\n              <span className=\"flex select-none items-center me-3 pl-3 text-white\">\r\n                <i className=\"fa-solid fa-user\"></i>\r\n              </span>\r\n              <input\r\n                {...register(\"last_name\", {\r\n                  required: \"Last name is required\",\r\n                  minLength: {\r\n                    value: 2,\r\n                    message: \"Last name must be at least 2 characters\",\r\n                  },\r\n                })}\r\n                type=\"text\"\r\n                id=\"last_name\"\r\n                className=\"block px-2 flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n                placeholder=\"Enter your last name\"\r\n              />\r\n              {errors.last_name && (\r\n                <ErrorMessage>{errors.last_name.message}</ErrorMessage>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Email */}\r\n        <div>\r\n          <label htmlFor=\"email\" className=\"w-full ps-1 mb-1\">\r\n            Email Address\r\n          </label>\r\n          <div className={`flex rounded-md border-3 ${!errors.email ? \"border-white\" : \"border-red-500\"}`}>\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white\">\r\n              <i className=\"fa-solid fa-envelope\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"email\", {\r\n                required: \"Email is required\",\r\n                pattern: {\r\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                  message: \"Invalid email address\",\r\n                },\r\n              })}\r\n              type=\"email\"\r\n              id=\"email\"\r\n              className=\"block px-2 flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Enter your email\"\r\n            />\r\n            {errors.email && (\r\n              <ErrorMessage>{errors.email.message}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Password */}\r\n        <div>\r\n          <label htmlFor=\"password\" className=\"w-full ps-1 mb-1\">\r\n            Password\r\n          </label>\r\n          <div className={`flex rounded-md border-3 ${!errors.password ? \"border-white\" : \"border-red-500\"}`}>\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white\">\r\n              <i className=\"fa-solid fa-key\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"password\", {\r\n                required: \"Password is required\",\r\n                minLength: {\r\n                  value: 8,\r\n                  message: \"Password must be at least 8 characters\",\r\n                },\r\n                pattern: {\r\n                  value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,\r\n                  message: \"Password must contain at least one uppercase letter, one lowercase letter, and one number\",\r\n                },\r\n              })}\r\n              type=\"password\"\r\n              id=\"password\"\r\n              className=\"block px-2 flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Enter your password\"\r\n            />\r\n            {errors.password && (\r\n              <ErrorMessage>{errors.password.message}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Role */}\r\n        <div>\r\n          <label htmlFor=\"role\" className=\"w-full ps-1 mb-1\">\r\n            Role\r\n          </label>\r\n          <div className={`flex rounded-md border-3 ${!errors.role ? \"border-white\" : \"border-red-500\"}`}>\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white\">\r\n              <i className=\"fa-solid fa-users\"></i>\r\n            </span>\r\n            <select\r\n              {...register(\"role\", {\r\n                required: \"Role is required\",\r\n              })}\r\n              id=\"role\"\r\n              className=\"block px-2 flex-1 border-0 bg-transparent py-1.5 pl-1 text-white focus:ring-0 sm:text-sm sm:leading-6\"\r\n            >\r\n              <option value=\"\" className=\"text-gray-900\">Select your role</option>\r\n              <option value=\"Student\" className=\"text-gray-900\">Student</option>\r\n              <option value=\"Instructor\" className=\"text-gray-900\">Instructor</option>\r\n            </select>\r\n            {errors.role && (\r\n              <ErrorMessage>{errors.role.message}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex mt-6 mb-16 justify-between items-center\">\r\n          <AuthButton type=\"submit\" disabled={isLoading}>\r\n            {isLoading ? <Loading /> : \"Sign Up\"}\r\n          </AuthButton>\r\n          <p>\r\n            Already have an account?{\" \"}\r\n            <Link className=\"text-secondry hover:underline\" to=\"/login\">\r\n              Sign in here\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUserData } from \"../Redux/Slices/AuthSlice/AuthSlice\";\r\n\r\nconst baseAuthUrl = `https://upskilling-egypt.com:3005/api/auth`;\r\n\r\nconst useCustomFetch = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const customFetch = (pathUrl: string, data: object, navigateTo: string) => {\r\n    setLoading(true);\r\n    axios\r\n      .post(`${baseAuthUrl}/${pathUrl}`, data)\r\n      .then((res) => {\r\n        dispatch(setUserData(res.data.data));\r\n        toast.success(res.data.message);\r\n        if (res.data.data?.profile?.role==\"Student\") {\r\n          return navigate(`/student`)\r\n        }\r\n        return navigate(navigateTo);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.response?.data?.message || \"Invalid data\");\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return { customFetch, loading };\r\n};\r\n\r\nexport default useCustomFetch;\r\n","import { Link } from \"react-router-dom\";\r\nimport ErrorMessage from \"../../Shared/ErrorMessage/ErrorMessage\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport AuthButton from \"../../Shared/AuthButton/AuthButton\";\r\nimport useCustomFetch from \"../../ApiUtils/AuthApiUtils\";\r\nimport Loading from \"../../Shared/Loading/Loading\";\r\n\r\nexport default function RequsetResetPass() {\r\n  const {customFetch,loading}=useCustomFetch();\r\n  \r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  function onSubmit(data: object) {\r\n    customFetch(\"/forgot-password\",data,\"/reset-password\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"text-2xl  text-secondry\">Forgot password</h3>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"my-10\">\r\n        <div className=\"email mt-2\">\r\n          <label htmlFor=\"email\" className=\"w-full ps-1 mb-1\">\r\n            Your email address\r\n          </label>\r\n          <div\r\n            className={`flex rounded-md border-3 ${\r\n              !errors.email ? \"border-white\" : \"border-red-500\"\r\n            }`}\r\n          >\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white \">\r\n              <i className=\"fa-solid fa-envelope\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"email\", {\r\n                required: \"Email is required\",\r\n                pattern: {\r\n                  value: /^[A-Z0-9.]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                  message: \"Invalid email address\",\r\n                },\r\n              })}\r\n              type=\"text\"\r\n              id=\"email\"\r\n              className=\"block px-2  flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Type your email\"\r\n            />\r\n            {errors.email && (\r\n              <ErrorMessage>{String(errors.email.message)}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <AuthButton>{loading?<Loading/>:\"Send email\"}</AuthButton>\r\n\r\n        <div className=\"my-12\">\r\n          <p className=\"text-end\">\r\n            Login?\r\n            <Link className=\"text-secondry py-24 \" to=\"/\">\r\n              click here\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { useForm } from \"react-hook-form\";\r\nimport ErrorMessage from \"../../Shared/ErrorMessage/ErrorMessage\";\r\nimport AuthButton from \"../../Shared/AuthButton/AuthButton\";\r\nimport useCustomFetch from \"../../ApiUtils/AuthApiUtils\";\r\nimport Loading from \"../../Shared/Loading/Loading\";\r\nimport {ResetFormInterface} from './ResetInterface.ts'\r\n\r\nexport default function RestPassword() {\r\n  const {customFetch,loading}=useCustomFetch();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    getValues,\r\n  } = useForm();\r\n\r\n  function onSubmit(data: ResetFormInterface) {\r\n    //forget password api do not send email\r\n    delete data.confirm_password;\r\n    customFetch(\"/reset-password\",data,\"/\");\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"text-2xl  text-secondry\">Reset password</h3>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"mt-12\">\r\n        <div className=\"email mt-2\">\r\n          <label htmlFor=\"email\" className=\"w-full ps-1 mb-1\">\r\n            Your email address\r\n          </label>\r\n          <div\r\n            className={`flex rounded-md border-3 ${\r\n              !errors.email ? \"border-white\" : \"border-red-500\"\r\n            }`}\r\n          >\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white \">\r\n              <i className=\"fa-solid fa-envelope\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"email\", {\r\n                required: \"Email is required\",\r\n                pattern: {\r\n                  value: /^[A-Z0-9.]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                  message: \"Invalid email address\",\r\n                },\r\n              })}\r\n              type=\"text\"\r\n              id=\"email\"\r\n              className=\"block px-2  flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Type your email\"\r\n            />\r\n            {errors.email && (\r\n              <ErrorMessage>{String(errors.email.message)}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"OTP mt-2\">\r\n          <label htmlFor=\"OTP\" className=\"w-full ps-1 mb-1\">\r\n            OTP\r\n          </label>\r\n          <div\r\n            className={`flex rounded-md border-3 ${\r\n              !errors.otp ? \"border-white\" : \"border-red-500\"\r\n            }`}\r\n          >\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white \">\r\n              <i className=\"fa-solid fa-envelope\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"otp\", {\r\n                required: \"otp is required\",\r\n                minLength: { value: 6, message: \"otp should be 6 digits\" },\r\n                maxLength: { value: 6, message: \"otp should be 6 digits\" },\r\n              })}\r\n              type=\"text\"\r\n              id=\"OTP\"\r\n              className=\"block px-2  flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Choose your otp\"\r\n            />\r\n            {errors.otp && (\r\n              <ErrorMessage>{String(errors.otp.message)}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"password mt-2\">\r\n          <label htmlFor=\"password\" className=\"w-full ps-1 mb-1\">\r\n            Password\r\n          </label>\r\n          <div\r\n            className={`flex rounded-md border-3 ${\r\n              !errors.password ? \"border-white\" : \"border-red-500\"\r\n            }`}\r\n          >\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white \">\r\n              <i className=\"fa-solid fa-key\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"password\", {\r\n                required: \"field is required\",\r\n                minLength: {\r\n                  value: 8,\r\n                  message: \"Password should be at least 8 characters\",\r\n                },\r\n              })}\r\n              type=\"password\"\r\n              id=\"password\"\r\n              className=\"block px-2  flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Type your password\"\r\n            />\r\n            {errors.password && (\r\n              <ErrorMessage>{String(errors.password.message)}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"Confirm-Password mt-2\">\r\n          <label htmlFor=\"Confirm-Password\" className=\"w-full ps-1 mb-1\">\r\n            Confirm Password\r\n          </label>\r\n          <div\r\n            className={`flex rounded-md border-3 ${\r\n              !errors.confirm_password ? \"border-white\" : \"border-red-500\"\r\n            }`}\r\n          >\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white \">\r\n              <i className=\"fa-solid fa-key\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"confirm_password\", {\r\n                validate: (value) => {\r\n                  return (\r\n                    value == getValues(\"password\") ||\r\n                    \"Confirm Password mismatch password\"\r\n                  );\r\n                },\r\n              })}\r\n              type=\"password\"\r\n              id=\"Confirm-Password\"\r\n              className=\"block px-2  flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Type your confirm password\"\r\n            />\r\n            {errors.confirm_password && (\r\n              <ErrorMessage>{String(errors.confirm_password.message)}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <AuthButton>{loading?<Loading/>:\"Reset\"}</AuthButton>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n"],"names":["f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","Loading","className","authSlice","createSlice","name","initialState","userData","Cookies","get","JSON","parse","String","headers","Authorization","accessToken","isAuthed","reducers","setUserData","state","action","payload","_a","set","stringify","logOut","compat","remove","authReducer","reducer","actions","normalizeQuizData","quiz","normalizedQuiz","schadule","schedule","normalizeQuizArray","quizzes","map","apiClient","axios","create","baseURL","timeout","interceptors","request","use","config","parsedData","error","Promise","reject","response","apiError","message","status","_d","data","_e","_f","errorData","_g","window","location","href","apiService","endpoint","finalData","Array","isArray","this","handleError","post","put","delete","B","authService","login","credentials","register","forgotPassword","email","resetPassword","changePassword","quizService","getIncomingQuizzes","getCompletedQuizzes","role","createQuiz","quizData","updateQuiz","id","deleteQuiz","joinQuiz","code","getQuizQuestions","quizId","submitQuiz","answers","getQuizResults","ErrorMessage","children","jsxRuntimeExports","Fragment","AuthButton","disabled","handleSubmit","formState","errors","getValues","useForm","onSubmit","htmlFor","password","required","minLength","value","placeholder","password_new","validate","confirmNewPassword","useAuth","dispatch","useDispatch","navigate","useNavigate","loadingState","setLoadingState","useState","setError","async","toast","success","profile","emailData","resetData","passwordData","loading","isIdle","isLoading","isSuccess","isError","Link","to","pattern","registerUser","first_name","last_name","useCustomFetch$1","setLoading","customFetch","pathUrl","navigateTo","then","res","_b","catch","finally","useCustomFetch","confirm_password","otp","maxLength"],"mappings":"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","x_google_ignoreList":[0,1]}