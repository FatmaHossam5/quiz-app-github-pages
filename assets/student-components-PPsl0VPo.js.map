{"version":3,"file":"student-components-PPsl0VPo.js","sources":["../../src/Components/Groups/DeleteGroup.tsx","../../src/Components/Groups/AddGroup.tsx","../../src/Components/Groups/UpdateGroup.tsx","../../src/Shared/NoData/NoData.tsx","../../src/assets/Transfer files-amico.png","../../src/Components/Groups/Groups.tsx","../../src/ApiUtils/useFetchData.ts","../../src/assets/user img.png","../../src/Shared/Label/Label.tsx","../../src/Components/StudentComponents/Quiz/Quiz.tsx","../../src/Components/StudentComponents/Student'sQuestion/StudentsQuestion.tsx","../../src/Shared/Input/Input.tsx","../../src/Components/Students/AddStudentToGroup/AddStudentToGroup.tsx","../../src/Components/StudentCard/StudentCard.tsx","../../src/Components/Students/Students.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport Loading from \"../../Shared/Loading/Loading\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { baseUrl } from '../../ApiUtils/ApiUtils';\r\nimport { RootState } from \"../../types\";\r\n\r\ninterface DeleteGroupProps {\r\n  getGroups: () => void;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  id: string | number;\r\n  groupName?: string; // Optional prop for better UX\r\n}\r\n\r\nexport default function DeleteGroup({ getGroups, isOpen, onClose, id, groupName }: DeleteGroupProps) {\r\n  const { headers } = useSelector((state: RootState) => state.userData);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const deleteGroup = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await axios.delete(`${baseUrl}/group/${id}`, headers);\r\n      toast.success(response?.data?.message || \"Group deleted successfully\");\r\n      onClose();\r\n      getGroups();\r\n    } catch (error: unknown) {\r\n      const errorMessage = (error as { response?: { data?: { message?: string } } })?.response?.data?.message || \"Error deleting group\";\r\n      toast.error(errorMessage);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle keyboard navigation\r\n  const handleKeyDown = (event: React.KeyboardEvent) => {\r\n    if (event.key === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div\r\n      className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/50 backdrop-blur-sm\"\r\n      onClick={onClose}\r\n      onKeyDown={handleKeyDown}\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n      aria-labelledby=\"delete-group-title\"\r\n      aria-describedby=\"delete-group-description\"\r\n    >\r\n      <div\r\n        className=\"relative w-full max-w-md bg-white rounded-xl shadow-2xl border border-gray-200 dark:bg-gray-800 dark:border-gray-700\"\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className=\"w-12 h-12 bg-red-100 dark:bg-red-900/30 rounded-full flex items-center justify-center\">\r\n              <i className=\"fa-solid fa-triangle-exclamation text-red-600 dark:text-red-400 text-xl\"></i>\r\n            </div>\r\n            <div>\r\n              <h3\r\n                id=\"delete-group-title\"\r\n                className=\"text-lg font-semibold text-gray-900 dark:text-white\"\r\n              >\r\n                Delete Group\r\n              </h3>\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                This action cannot be undone\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\r\n            aria-label=\"Close dialog\"\r\n          >\r\n            <i className=\"fa-solid fa-xmark text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        {/* Body */}\r\n        <div className=\"p-6\">\r\n          {isLoading ? (\r\n            <div className=\"flex flex-col items-center justify-center py-8\">\r\n              <Loading />\r\n              <p className=\"mt-4 text-sm text-gray-500 dark:text-gray-400\">\r\n                Deleting group...\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <p\r\n                id=\"delete-group-description\"\r\n                className=\"text-gray-700 dark:text-gray-300 mb-2\"\r\n              >\r\n                Are you sure you want to delete{\" \"}\r\n                {groupName ? (\r\n                  <span className=\"font-semibold text-gray-900 dark:text-white\">\r\n                    \"{groupName}\"\r\n                  </span>\r\n                ) : (\r\n                  \"this group\"\r\n                )}\r\n                ?\r\n              </p>\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                All associated data will be permanently removed.\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Footer */}\r\n        {!isLoading && (\r\n          <div className=\"flex items-center justify-end gap-3 p-6 border-t border-gray-200 dark:border-gray-700\">\r\n            <button\r\n              onClick={onClose}\r\n              className=\"px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              onClick={deleteGroup}\r\n              className=\"px-4 py-2 text-sm font-medium text-white bg-red-600 hover:bg-red-700 rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              disabled={isLoading}\r\n            >\r\n              <i className=\"fa-solid fa-trash mr-2\"></i>\r\n              Delete Group\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { baseUrl } from \"../../ApiUtils/ApiUtils\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { RootState } from \"../../types\";\r\nimport Loading from \"../../Shared/Loading/Loading\";\r\nimport ErrorMessage from \"../../Shared/ErrorMessage/ErrorMessage\";\r\nimport Select from \"react-select\";\r\n\r\n// Define interfaces for better type safety\r\ninterface Student {\r\n  _id: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  email: string;\r\n  group?: {\r\n    name: string;\r\n  };\r\n}\r\n\r\ninterface Option {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\ninterface AddGroupProps {\r\n  getGroups: () => void;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\ninterface FormData {\r\n  name: string;\r\n}\r\n\r\n// Add validation state for students\r\ninterface ValidationErrors {\r\n  students?: string;\r\n}\r\n\r\n// React Select style types\r\ninterface SelectStyles {\r\n  control: (provided: React.CSSProperties) => React.CSSProperties;\r\n  menu: (provided: React.CSSProperties) => React.CSSProperties;\r\n  menuPortal: (provided: React.CSSProperties) => React.CSSProperties;\r\n  multiValue: (provided: React.CSSProperties) => React.CSSProperties;\r\n  multiValueLabel: (provided: React.CSSProperties) => React.CSSProperties;\r\n  multiValueRemove: (provided: React.CSSProperties) => React.CSSProperties;\r\n}\r\n\r\nexport default function AddGroup({ getGroups, isOpen, onClose }: AddGroupProps) {\r\n  const { headers } = useSelector((state: RootState) => state.userData);\r\n  const [studentsList, setStudentsList] = useState<Student[]>([]);\r\n  const [selectedStudents, setSelectedStudents] = useState<Option[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [validationErrors, setValidationErrors] = useState<ValidationErrors>({});\r\n  \r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm<FormData>();\r\n\r\n  const getStudents = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      // Use the endpoint that returns only students without groups\r\n      const response = await axios.get(`${baseUrl}/student/without-group`, headers);\r\n      const studentsData = response.data;\r\n      \r\n      console.log(\"Students without groups received:\", studentsData); // Debug log\r\n      \r\n      if (Array.isArray(studentsData) && studentsData.length > 0) {\r\n        setStudentsList(studentsData);\r\n      } else {\r\n        toast.error(\"No students available without groups.\");\r\n        setStudentsList([]);\r\n      }\r\n    } catch (error: unknown) {\r\n      console.error(\"Error fetching students without groups:\", error);\r\n      const errorMessage = (error as { response?: { data?: { message?: string } } })?.response?.data?.message || \"Failed to load students without groups. Please try again.\";\r\n      toast.error(errorMessage);\r\n      setStudentsList([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [headers]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      getStudents();\r\n    }\r\n  }, [isOpen, getStudents]);\r\n\r\n  // Transform students list to select options\r\n  const studentOptions: Option[] = studentsList\r\n    .filter(student => student && student._id && student.first_name && student.last_name)\r\n    .map((student) => ({\r\n      value: student._id,\r\n      label: `${student.first_name} ${student.last_name}`,\r\n    }));\r\n\r\n  console.log(\"Student options:\", studentOptions); // Debug log\r\n\r\n  // Simplified change handler - removed complex types\r\n  const handleStudentChange = (selectedOptions: Option[] | null) => {\r\n    const options = selectedOptions ? [...selectedOptions] : [];\r\n    setSelectedStudents(options);\r\n    \r\n    // Clear validation error when students are selected\r\n    if (options.length > 0 && validationErrors.students) {\r\n      setValidationErrors(prev => ({ ...prev, students: undefined }));\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data: FormData) => {\r\n    // Validate students selection\r\n    if (selectedStudents.length === 0) {\r\n      setValidationErrors({ students: \"Please select at least one student\" });\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    \r\n    // Transform the data to match API expectations\r\n    const submitData = {\r\n      name: data.name,\r\n      students: selectedStudents.map(student => student.value),\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(`${baseUrl}/group`, submitData, headers);\r\n      toast.success(response?.data?.message || \"Group created successfully!\");\r\n      \r\n      // Reset form and close modal\r\n      reset();\r\n      setSelectedStudents([]);\r\n      setValidationErrors({});\r\n      onClose();\r\n      getGroups();\r\n    } catch (error: unknown) {\r\n      console.error(\"Error creating group:\", error);\r\n      toast.error((error as { response?: { data?: { message?: string } } })?.response?.data?.message || \"Failed to create group. Please try again.\");\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Custom styles for react-select to match project design\r\n  const selectStyles: SelectStyles = {\r\n    control: (provided: React.CSSProperties) => ({\r\n      ...provided,\r\n      border: '1px solid #d1d5db',\r\n      borderRadius: '0.375rem 0.75rem 0.75rem 0.375rem',\r\n      borderLeft: 'none',\r\n      minHeight: '42px',\r\n      '&:hover': {\r\n        borderColor: '#6366f1',\r\n      },\r\n      '&:focus': {\r\n        borderColor: '#6366f1',\r\n        boxShadow: '0 0 0 1px #6366f1',\r\n      },\r\n    }),\r\n    menu: (provided: React.CSSProperties) => ({\r\n      ...provided,\r\n      zIndex: 9999,\r\n    }),\r\n    menuPortal: (provided: React.CSSProperties) => ({\r\n      ...provided,\r\n      zIndex: 9999,\r\n    }),\r\n    multiValue: (provided: React.CSSProperties) => ({\r\n      ...provided,\r\n      backgroundColor: '#f3f4f6',\r\n      borderRadius: '0.375rem',\r\n    }),\r\n    multiValueLabel: (provided: React.CSSProperties) => ({\r\n      ...provided,\r\n      color: '#374151',\r\n      fontSize: '0.875rem',\r\n    }),\r\n    multiValueRemove: (provided: React.CSSProperties) => ({\r\n      ...provided,\r\n      color: '#6b7280',\r\n      '&:hover': {\r\n        backgroundColor: '#ef4444',\r\n        color: 'white',\r\n      },\r\n    }),\r\n  };\r\n\r\n  // Handle keyboard navigation\r\n  const handleKeyDown = (event: React.KeyboardEvent) => {\r\n    if (event.key === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div\r\n      className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/50 backdrop-blur-sm\"\r\n      onClick={onClose}\r\n      onKeyDown={handleKeyDown}\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n      aria-labelledby=\"add-group-title\"\r\n    >\r\n      <div\r\n        className=\"relative w-full max-w-2xl bg-white rounded-xl shadow-2xl border border-gray-200 max-h-[90vh] overflow-y-auto\"\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center\">\r\n              <i className=\"fa-solid fa-users text-blue-600 text-xl\"></i>\r\n            </div>\r\n            <div>\r\n              <h3 id=\"add-group-title\" className=\"text-lg font-semibold text-gray-900\">\r\n                Create New Group\r\n              </h3>\r\n              <p className=\"text-sm text-gray-500\">\r\n                Add students to create a new group\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\r\n            aria-label=\"Close dialog\"\r\n          >\r\n            <i className=\"fa-solid fa-xmark text-gray-400 hover:text-gray-600\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        {/* Body */}\r\n        <div className=\"p-6\">\r\n          {isLoading ? (\r\n            <div className=\"flex justify-center items-center h-64\">\r\n              <Loading />\r\n              <span className=\"ml-3 text-gray-600\">Loading students...</span>\r\n            </div>\r\n          ) : (\r\n            <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\r\n              {/* Group Name Field */}\r\n              <div className=\"space-y-2\">\r\n                <label htmlFor=\"groupName\" className=\"block text-sm font-semibold text-gray-700\">\r\n                  Group Name <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <div className=\"flex rounded-lg overflow-hidden border border-gray-300 focus-within:border-indigo-500 focus-within:ring-1 focus-within:ring-indigo-500\">\r\n                  <div className=\"flex items-center px-4 py-2 bg-authImage border-r border-gray-300 min-w-[120px]\">\r\n                    <i className=\"fa-solid fa-users text-gray-600 mr-2\"></i>\r\n                    <span className=\"text-sm font-medium text-gray-700\">Name</span>\r\n                  </div>\r\n                  <input\r\n                    {...register(\"name\", {\r\n                      required: \"Group name is required\",\r\n                      minLength: {\r\n                        value: 2,\r\n                        message: \"Group name must be at least 2 characters\",\r\n                      },\r\n                      maxLength: {\r\n                        value: 50,\r\n                        message: \"Group name cannot exceed 50 characters\",\r\n                      },\r\n                    })}\r\n                    type=\"text\"\r\n                    id=\"groupName\"\r\n                    placeholder=\"Enter group name\"\r\n                    className=\"flex-1 px-3 py-2 text-sm border-0 focus:ring-0 focus:outline-none\"\r\n                  />\r\n                </div>\r\n                {errors.name && (\r\n                  <ErrorMessage>{errors.name.message}</ErrorMessage>\r\n                )}\r\n              </div>\r\n\r\n              {/* Students Selection Field */}\r\n              <div className=\"space-y-2\">\r\n                <label htmlFor=\"students\" className=\"block text-sm font-semibold text-gray-700\">\r\n                  Add Students (Without Groups)\r\n                </label>\r\n                <p className=\"text-xs text-gray-500 mb-2\">\r\n                  Select students who are not assigned to any group yet. You can select multiple students.\r\n                </p>\r\n                <div className=\"flex rounded-lg overflow-hidden border border-gray-300 focus-within:border-indigo-500\">\r\n                  <div className=\"flex items-center px-4 py-2 bg-authImage border-r border-gray-300 min-w-[120px]\">\r\n                    <i className=\"fa-solid fa-user-group text-gray-600 mr-2\"></i>\r\n                    <span className=\"text-sm font-medium text-gray-700\">Students</span>\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    <Select\r\n                      isMulti\r\n                      placeholder={\r\n                        isLoading \r\n                          ? \"Loading students without groups...\" \r\n                          : studentOptions.length === 0 \r\n                            ? \"No students available without groups\" \r\n                            : \"Select students without groups...\"\r\n                      }\r\n                      options={studentOptions}\r\n                      value={selectedStudents}\r\n                      onChange={handleStudentChange}\r\n                      styles={selectStyles}\r\n                      className=\"basic-multi-select\"\r\n                      classNamePrefix=\"select\"\r\n                      isDisabled={isSubmitting || isLoading}\r\n                      isLoading={isLoading}\r\n                      isClearable={true}\r\n                      isSearchable={true}\r\n                      menuPortalTarget={document.body}\r\n                      menuPosition=\"fixed\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {validationErrors.students && (\r\n                  <ErrorMessage>{validationErrors.students}</ErrorMessage>\r\n                )}\r\n              </div>\r\n\r\n              {/* Form Actions */}\r\n              <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={onClose}\r\n                  disabled={isSubmitting}\r\n                  className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                  className=\"px-4 py-2 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center\"\r\n                >\r\n                  {isSubmitting ? (\r\n                    <>\r\n                      <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                      </svg>\r\n                      Creating...\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <i className=\"fa-solid fa-plus mr-2\"></i>\r\n                      Create Group\r\n                    </>\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { baseUrl } from \"../../ApiUtils/ApiUtils\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport Loading from \"../../Shared/Loading/Loading\";\nimport ErrorMessage from \"../../Shared/ErrorMessage/ErrorMessage\";\nimport Select from \"react-select\";\nimport SharedModal from \"../../Shared/Modal/Modal\";\nimport { RootState } from \"../../types\";\n\n// Interfaces\ninterface Student {\n  _id: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n  group?: {\n    name: string;\n  };\n}\n\ninterface Option {\n  value: string;\n  label: string;\n  isCurrentMember?: boolean;\n}\n\ninterface Group {\n  _id: string;\n  name: string;\n  students: Student[];\n}\n\ninterface UpdateGroupProps {\n  getGroups: () => void;\n  isOpen: boolean;\n  onClose: () => void;\n  group: Group;\n}\n\ninterface FormData {\n  name: string;\n  students: Option[];\n}\n\n// React Select style types\ninterface SelectStyles {\n  control: (provided: React.CSSProperties) => React.CSSProperties;\n  menu: (provided: React.CSSProperties) => React.CSSProperties;\n  menuPortal: (provided: React.CSSProperties) => React.CSSProperties;\n  multiValue: (provided: React.CSSProperties, state: { data: Option }) => React.CSSProperties;\n  multiValueLabel: (provided: React.CSSProperties, state: { data: Option }) => React.CSSProperties;\n  multiValueRemove: (provided: React.CSSProperties, state: { data: Option }) => React.CSSProperties;\n  option: (provided: React.CSSProperties, state: { isSelected: boolean; isFocused: boolean; data: Option }) => React.CSSProperties;\n}\n\nexport default function UpdateGroup({ getGroups, isOpen, onClose, group }: UpdateGroupProps) {\n  const { headers } = useSelector((state: RootState) => state.userData);\n  const [studentsList, setStudentsList] = useState<Student[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    control,\n    reset,\n    formState: { errors },\n  } = useForm<FormData>();\n\n  const getStudents = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      // Get students without group for dropdown options only\n      const response = await axios.get(`${baseUrl}/student/without-group`, headers);\n      const studentsWithoutGroup: Student[] = response.data;\n      setStudentsList(studentsWithoutGroup);\n    } catch (error: unknown) {\n      toast.error(\"Failed to load students.\");\n      setStudentsList([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [headers]);\n  \n\n  useEffect(() => {\n    if (isOpen) {\n      getStudents();\n    }\n  }, [isOpen, getStudents]);\n  \n\n  const studentOptions: Option[] = studentsList.map((student) => ({\n    value: student._id,\n    label: `${student.first_name} ${student.last_name}`,\n    isCurrentMember: false,\n  }));\n\nuseEffect(() => {\n  if (group && isOpen) {\n    setValue(\"name\", group.name);\n\n    // Fetch current group students from the group API\n    const fetchCurrentGroupStudents = async () => {\n      try {\n        const groupResponse = await axios.get(`${baseUrl}/group/${group._id}`, headers);\n        const fullGroupData = groupResponse.data;\n        const currentGroupStudents = fullGroupData.students || [];\n\n        if (currentGroupStudents.length > 0) {\n          const selectedOptions: Option[] = currentGroupStudents.map((student: Student) => ({\n            value: student._id,\n            label: `${student.first_name} ${student.last_name} (Current member)`,\n            isCurrentMember: true,\n          }));\n\n          setValue(\"students\", selectedOptions);\n        } else {\n          setValue(\"students\", []);\n        }\n      } catch (error) {\n        console.error(\"Error fetching current group students:\", error);\n        setValue(\"students\", []);\n      }\n    };\n\n    fetchCurrentGroupStudents();\n  }\n}, [group, setValue, isOpen, headers]);\n\n\n  const onSubmit = async (data: FormData) => {\n    setIsSubmitting(true);\n    try {\n      const studentIds = data.students.map(student => student.value);\n      await axios.put(`${baseUrl}/group/${group._id}`, {\n        name: data.name,\n        students: studentIds\n      }, headers);\n      \n      toast.success(\"Group updated successfully!\");\n      handleClose();\n      getGroups();\n    } catch (error: unknown) {\n      const errorMessage = (error as { response?: { data?: { message?: string } } })?.response?.data?.message || \"Failed to update group.\";\n      toast.error(errorMessage);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleClose = () => {\n    reset();\n    onClose();\n  };\n\n  const selectStyles: SelectStyles = {\n    control: (provided: React.CSSProperties) => ({\n      ...provided,\n      border: '1px solid #d1d5db',\n      borderRadius: '0.375rem 0.75rem 0.75rem 0.375rem',\n      borderLeft: 'none',\n      minHeight: '42px',\n      '&:hover': { borderColor: '#6366f1' },\n      '&:focus': { borderColor: '#6366f1', boxShadow: '0 0 0 1px #6366f1' },\n    }),\n    menu: (provided: React.CSSProperties) => ({ ...provided, zIndex: 9999 }),\n    menuPortal: (provided: React.CSSProperties) => ({ ...provided, zIndex: 9999 }),\n    multiValue: (provided: React.CSSProperties, state: { data: Option }) => ({\n      ...provided,\n      backgroundColor: state.data.isCurrentMember ? '#dbeafe' : '#f3f4f6',\n      borderRadius: '0.375rem',\n      border: state.data.isCurrentMember ? '1px solid #3b82f6' : 'none',\n    }),\n    multiValueLabel: (provided: React.CSSProperties, state: { data: Option }) => ({\n      ...provided,\n      color: state.data.isCurrentMember ? '#1e40af' : '#374151',\n      fontSize: '0.875rem',\n      fontWeight: state.data.isCurrentMember ? '600' : '400',\n    }),\n    multiValueRemove: (provided: React.CSSProperties, state: { data: Option }) => ({\n      ...provided,\n      color: state.data.isCurrentMember ? '#3b82f6' : '#6b7280',\n      '&:hover': { \n        backgroundColor: state.data.isCurrentMember ? '#ef4444' : '#ef4444', \n        color: 'white' \n      },\n    }),\n    option: (provided: React.CSSProperties, state: { isSelected: boolean; isFocused: boolean; data: Option }) => ({\n      ...provided,\n      backgroundColor: state.isSelected \n        ? (state.data.isCurrentMember ? '#dbeafe' : '#6366f1')\n        : state.isFocused \n        ? '#f3f4f6' \n        : 'white',\n      color: state.isSelected \n        ? (state.data.isCurrentMember ? '#1e40af' : 'white')\n        : '#374151',\n      fontWeight: state.data.isCurrentMember ? '600' : '400',\n      '&:hover': {\n        backgroundColor: state.data.isCurrentMember ? '#bfdbfe' : '#e5e7eb',\n      },\n    }),\n  };\n\n  const modalBody = (\n    <div className=\"px-6 py-4\">\n      {isLoading ? (\n        <div className=\"flex justify-center items-center h-64\">\n          <Loading />\n          <span className=\"ml-3 text-gray-600\">Loading students...</span>\n        </div>\n      ) : (\n        <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n          {/* Group Name */}\n          <div className=\"space-y-2\">\n            <label htmlFor=\"groupName\" className=\"block text-sm font-semibold text-gray-700\">\n              Group Name <span className=\"text-red-500\">*</span>\n            </label>\n            <div className=\"flex rounded-lg overflow-hidden border border-gray-300\">\n              <div className=\"flex items-center px-4 py-2 bg-authImage border-r border-gray-300 min-w-[120px]\">\n                <i className=\"fa-solid fa-users text-gray-600 mr-2\"></i>\n                <span className=\"text-sm font-medium text-gray-700\">Name</span>\n              </div>\n              <input\n                {...register(\"name\", {\n                  required: \"Group name is required\",\n                  minLength: { value: 2, message: \"Minimum 2 characters\" },\n                  maxLength: { value: 50, message: \"Maximum 50 characters\" },\n                })}\n                type=\"text\"\n                id=\"groupName\"\n                placeholder=\"Enter group name\"\n                className=\"flex-1 px-3 py-2 text-sm border-0 focus:ring-0 focus:outline-none\"\n              />\n            </div>\n            {errors.name && <ErrorMessage>{errors.name.message}</ErrorMessage>}\n          </div>\n\n          {/* Students Selection */}\n          <div className=\"space-y-2\">\n            <label htmlFor=\"students\" className=\"block text-sm font-semibold text-gray-700\">\n              Update Students\n            </label>\n            <div className=\"flex items-center space-x-2 mb-2\">\n              <p className=\"text-xs text-gray-500\">\n                Select students for this group. Current members are highlighted in blue.\n              </p>\n              <div className=\"flex items-center space-x-1\">\n                <div className=\"w-3 h-3 bg-blue-100 border border-blue-300 rounded\"></div>\n                <span className=\"text-xs text-gray-500\">Current member</span>\n              </div>\n            </div>\n            <div className=\"flex rounded-lg overflow-hidden border border-gray-300\">\n              <div className=\"flex items-center px-4 py-2 bg-authImage border-r border-gray-300 min-w-[120px]\">\n                <i className=\"fa-solid fa-user-group text-gray-600 mr-2\"></i>\n                <span className=\"text-sm font-medium text-gray-700\">Students</span>\n              </div>\n              <div className=\"flex-1\">\n                <Controller\n                  name=\"students\"\n                  control={control}\n                  defaultValue={[]}\n                  render={({ field: { onChange, value } }) => (\n                    <Select\n                      isMulti\n                      placeholder={\n                        isLoading\n                          ? \"Loading students...\"\n                          : studentOptions.length === 0\n                          ? \"No students available\"\n                          : \"Select students...\"\n                      }\n                      options={studentOptions}\n                      value={value || []}\n                      onChange={onChange}\n                      styles={selectStyles}\n                      isDisabled={isSubmitting || isLoading}\n                      isLoading={isLoading}\n                      menuPortalTarget={document.body}\n                      menuPosition=\"fixed\"\n                    />\n                  )}\n                />\n              </div>\n            </div>\n            {errors.students && <ErrorMessage>{errors.students.message}</ErrorMessage>}\n          </div>\n\n          {/* Actions */}\n          <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\n            <button\n              type=\"button\"\n              onClick={handleClose}\n              disabled={isSubmitting}\n              className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"px-4 py-2 text-sm font-medium text-white bg-indigo-600 rounded-md hover:bg-indigo-700 flex items-center\"\n            >\n              {isSubmitting ? (\n                <>\n                  <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4z\"></path>\n                  </svg>\n                  Updating...\n                </>\n              ) : (\n                <>\n                  <i className=\"fa-solid fa-pen-to-square mr-2\"></i>\n                  Update Group\n                </>\n              )}\n            </button>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n\n  return (\n    <SharedModal\n      show={isOpen}\n      title=\"Update Group\"\n      onClose={handleClose}\n      omitHeader={true}\n      body={modalBody}\n    />\n  );\n}\n","import noData from '../../assets/Transfer files-amico.png'\r\nexport default function NoData() {\r\n  return (\r\n    <>\r\n    <div className='w-[50%] m-auto text-center'>\r\n    <img src={noData} alt=\"noData\"/>\r\n<p className='font-semibold text-zinc-700 text-1xl w-full'>Not Found data</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","export default \"__VITE_ASSET__Krh35_Tm__\"","import DeleteGroup from \"./DeleteGroup\";\r\nimport AddGroup from \"./AddGroup\";\r\nimport UpdateGroup from \"./UpdateGroup\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState, useCallback } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Loading from \"../../Shared/Loading/Loading\";\r\nimport { baseUrl } from \"../../ApiUtils/ApiUtils\";\r\nimport NoData from \"../../Shared/NoData/NoData\";\r\nimport { toast } from \"react-toastify\";\r\nimport { RootState, Group } from \"../../types\";\r\n\r\nexport default function Groups() {\r\n  const [groupsList, setGroupsList] = useState<Group[]>([]);\r\n  const [isloading, setIsLoading] = useState(false);\r\n  const { headers } = useSelector((state: RootState) => state.userData);\r\n\r\n  //******** const modals add,update,delete*******//\r\n  const [modalState, setModalState] = useState<string>(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [id, setId] = useState<string | number | null>(null);\r\n  const [group, setGroup] = useState<Group | null>(null);\r\n  const [groupName, setGroupName] = useState<string>(\"\");\r\n\r\n  const handleAddModal = () => {\r\n    setModalState(\"add\");\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const handleUpdateModal = (group: Group) => {\r\n    setModalState(\"update\");\r\n    setGroup(group);\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const handleDeleteModal = (group: Group) => {\r\n    setModalState(\"delete\");\r\n    setId(group._id);\r\n    setGroupName(group.name);\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setIsOpen(false);\r\n    setModalState(\"\");\r\n    setGroup(null);\r\n    setId(null);\r\n    setGroupName(\"\");\r\n  };\r\n\r\n  //*****to get all groups******* */\r\n  const getGroups = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await axios.get(`${baseUrl}/group`, headers);\r\n      setGroupsList(response.data);\r\n    } catch (error: unknown) {\r\n      console.log(error);\r\n      const errorMessage = (error as { response?: { data?: { message?: string } } })?.response?.data?.message || \"Failed to fetch groups\";\r\n      toast.error(errorMessage);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [headers]);\r\n\r\n  useEffect(() => {\r\n    getGroups();\r\n  }, [getGroups]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header Section */}\r\n      <div className=\"bg-white border-b border-gray-200 px-4 py-6 sm:px-6 lg:px-8\">\r\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-4 sm:space-y-0\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900\">Groups Management</h1>\r\n            <p className=\"text-sm text-gray-600 mt-1\">\r\n              Manage your student groups and assignments\r\n            </p>\r\n          </div>\r\n          \r\n          <button\r\n            onClick={handleAddModal}\r\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200 shadow-sm\"\r\n            aria-label=\"Add new group\"\r\n          >\r\n            <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n            </svg>\r\n            Add Group\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"px-4 py-6 sm:px-6 lg:px-8\">\r\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\r\n          {/* Groups List Header */}\r\n          <div className=\"px-6 py-4 border-b border-gray-200\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h2 className=\"text-lg font-semibold text-gray-900\">\r\n                Groups List\r\n              </h2>\r\n              <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\r\n                {groupsList.length} {groupsList.length === 1 ? 'Group' : 'Groups'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Groups Content */}\r\n          <div className=\"p-6\">\r\n            {isloading ? (\r\n              <div className=\"flex items-center justify-center h-64\">\r\n                <div className=\"flex flex-col items-center\">\r\n                  <div className=\"text-3xl mb-4\">\r\n                    <Loading />\r\n                  </div>\r\n                  <p className=\"text-gray-500\">Loading groups...</p>\r\n                </div>\r\n              </div>\r\n            ) : groupsList.length === 0 ? (\r\n              <div className=\"py-8\">\r\n                <NoData />\r\n                <div className=\"text-center mt-4\">\r\n                  <p className=\"text-gray-500 mb-4\">No groups found</p>\r\n                  <button\r\n                    onClick={handleAddModal}\r\n                    className=\"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200\"\r\n                  >\r\n                    <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                    </svg>\r\n                    Create your first group\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                {groupsList.map((group: Group) => (\r\n                  <div \r\n                    key={group?._id} \r\n                    className=\"bg-white border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow duration-200 hover:border-gray-300\"\r\n                  >\r\n                    {/* Group Header */}\r\n                    <div className=\"flex items-start justify-between mb-4\">\r\n                      <div className=\"flex-1\">\r\n                        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                          {group?.name}\r\n                        </h3>\r\n                        <div className=\"flex items-center text-sm text-gray-500\">\r\n                          <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                          </svg>\r\n                          {group?.students?.length || 0} students\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Action Buttons */}\r\n                      <div className=\"flex items-center space-x-2 ml-4\">\r\n                        <button\r\n                          onClick={() => handleUpdateModal(group)}\r\n                          className=\"inline-flex items-center p-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200\"\r\n                          aria-label={`Edit ${group?.name}`}\r\n                          title=\"Edit group\"\r\n                        >\r\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\r\n                          </svg>\r\n                        </button>\r\n\r\n                        <button\r\n                          onClick={() => handleDeleteModal(group)}\r\n                          className=\"inline-flex items-center p-2 text-sm font-medium text-red-700 bg-white border border-red-300 rounded-lg hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200\"\r\n                          aria-label={`Delete ${group?.name}`}\r\n                          title=\"Delete group\"\r\n                        >\r\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                          </svg>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Group Details */}\r\n                    <div className=\"border-t border-gray-100 pt-4\">\r\n                     \r\n                      {group?.students?.length > 0 && (\r\n                        <div className=\"mt-2 flex items-center justify-between text-sm\">\r\n                          <span className=\"text-gray-500\">Status</span>\r\n                          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\r\n                            Active\r\n                          </span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modals */}\r\n      {modalState === \"add\" && (\r\n        <AddGroup\r\n          getGroups={getGroups}\r\n          isOpen={isOpen}\r\n          onClose={handleCloseModal}\r\n        />\r\n      )}\r\n\r\n      {modalState === \"update\" && group && (\r\n        <UpdateGroup\r\n          getGroups={getGroups}\r\n          isOpen={isOpen}\r\n          onClose={handleCloseModal}\r\n          group={group}\r\n        />\r\n      )}\r\n\r\n      {modalState === \"delete\" && id && (\r\n        <DeleteGroup\r\n          getGroups={getGroups}\r\n          isOpen={isOpen}\r\n          onClose={handleCloseModal}\r\n          id={id}\r\n          groupName={groupName}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { baseUrl } from \"./ApiUtils\";\r\nimport { RootState } from \"../types\";\r\n\r\ninterface UseFetchData {\r\n  fetchedData: unknown;\r\n  getData: (path: string, student?: boolean) => void;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst useFetchData = (): UseFetchData => {\r\n  const [fetchedData, setFetchedData] = useState<unknown>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { headers } = useSelector((state: RootState) => state.userData);\r\n\r\n  const getData = (path: string, student?: boolean) => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(`${baseUrl}/${path}`, headers)\r\n      .then((response) => {\r\n        student \r\n          ? setFetchedData(response.data.student)\r\n          : setFetchedData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        toast.error(error.response?.data?.message || \"Invalid Data\");\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n  \r\n  return { fetchedData, getData, isLoading };\r\n};\r\n\r\nexport default useFetchData;\r\n","export default \"__VITE_ASSET__QvtRRqEC__\"","interface LabelInterface{\r\n    word:string;\r\n    value:string;\r\n    class_Name?:string;\r\n    textClassName?:string\r\n}\r\n\r\nexport default function Label({word,value,class_Name,textClassName}:LabelInterface) {\r\n  return (\r\n    <div className={`w-full border border-gray-200 rounded-lg font-medium shadow-sm hover:shadow-md transition-shadow duration-200 ${class_Name} my-2`}>\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-3 lg:grid-cols-4\">\r\n        <div className=\"word bg-gray-100 py-3 px-4 text-gray-700 font-semibold text-sm sm:text-base border-r border-gray-200 flex items-center\">\r\n          <span className=\"truncate\">{word}</span>\r\n        </div>\r\n        <div className={`value py-3 px-4 text-gray-900 text-sm sm:text-base col-span-1 sm:col-span-2 lg:col-span-3 flex items-center ${textClassName}`}>\r\n          <span className=\"truncate\">{value || 'N/A'}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { toast } from \"react-toastify\";\r\nimport { baseUrl } from \"../../../ApiUtils/ApiUtils\";\r\nimport { RootState } from \"../../../Redux/Store\";\r\nimport Loading from \"../../../Shared/Loading/Loading\";\r\nimport SharedModal from \"../../../Shared/Modal/Modal\";\r\nimport CompletedQuizzes from \"../../Quizzes/CompletedQuizzes/CompletedQuizzes\";\r\nimport IncomingQuizzes from \"../../Quizzes/IncomingQuizzes/IncomingQuizzes\";\r\n\r\ninterface QuizFormData {\r\n  code: string;\r\n}\r\n\r\nexport default function Quiz() {\r\n  const [modalState, setModalState] = useState(\"close\");\r\n  const { headers } = useSelector((state: RootState) => state.userData);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<QuizFormData>();\r\n  const navigate = useNavigate();\r\n\r\n  const { incomingQuizzes, loading, error } = useSelector(\r\n    (state: RootState) => state.incomingQuizzes\r\n  );\r\n  const { completedQuizzes } = useSelector(\r\n    (state: RootState) => state.CompletedQuizzes\r\n  );\r\n  \r\n  const showAddModal = () => {\r\n    setModalState(\"add1\");\r\n  };\r\n  \r\n  const showSuccessJoinModal = () => {\r\n    setModalState(\"success\");\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setModalState(\"close\");\r\n  };\r\n  \r\n  const joinQuiz = (data: QuizFormData) => {\r\n    axios\r\n      .post(`${baseUrl}/quiz/join`, data, headers)\r\n      .then((response) => {\r\n        showSuccessJoinModal();\r\n        setTimeout(() => {\r\n          navigate(`/student/questions/${response.data.data.quiz}`);\r\n        }, 2000);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error?.response?.data?.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center\">\r\n            <div>\r\n              <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">\r\n                My Quizzes\r\n              </h1>\r\n              <p className=\"text-gray-600 dark:text-gray-400\">\r\n                Join quizzes and track your progress\r\n              </p>\r\n            </div>\r\n            <button\r\n              onClick={showAddModal}\r\n              className=\"mt-4 sm:mt-0 bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-6 rounded-lg transition-colors duration-200 flex items-center space-x-2\"\r\n            >\r\n              <i className=\"fa-solid fa-plus text-sm\"></i>\r\n              <span>Join Quiz</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Error Display */}\r\n        {error && (\r\n          <div className=\"mb-6 bg-red-50 border border-red-200 rounded-lg p-4\">\r\n            <div className=\"flex items-center\">\r\n              <i className=\"fa-solid fa-exclamation-triangle text-red-500 mr-3\"></i>\r\n              <p className=\"text-red-700 font-medium\">{error}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Quiz Content */}\r\n        <div className=\"space-y-8\">\r\n          {/* Incoming Quizzes Section */}\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                Available Quizzes\r\n              </h3>\r\n              {incomingQuizzes && incomingQuizzes.length > 0 && (\r\n                <span className=\"text-sm text-gray-500 dark:text-gray-400 bg-gray-100 dark:bg-gray-700 px-3 py-1 rounded-full\">\r\n                  {incomingQuizzes.length} available\r\n                </span>\r\n              )}\r\n            </div>\r\n            \r\n            {loading ? (\r\n              <div className=\"flex items-center justify-center h-48 bg-white dark:bg-gray-800 rounded-xl border-2 border-dashed border-gray-300 dark:border-gray-600\">\r\n                <div className=\"text-center\">\r\n                  <div className=\"w-12 h-12 mx-auto mb-3\">\r\n                    <Loading />\r\n                  </div>\r\n                  <p className=\"text-gray-500 dark:text-gray-400\">Loading quizzes...</p>\r\n                </div>\r\n              </div>\r\n            ) : incomingQuizzes && incomingQuizzes.length > 0 ? (\r\n              <IncomingQuizzes incomingQuizzes={incomingQuizzes} />\r\n            ) : (\r\n              <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\r\n                <div className=\"text-center py-8\">\r\n                  <div className=\"w-12 h-12 bg-gray-100 dark:bg-gray-700 rounded-full flex items-center justify-center mx-auto mb-3\">\r\n                    <i className=\"fa-solid fa-calendar-plus text-gray-400 text-lg\"></i>\r\n                  </div>\r\n                  <p className=\"text-gray-500 dark:text-gray-400 text-lg font-medium\">No available quizzes</p>\r\n                  <p className=\"text-gray-400 dark:text-gray-500 text-sm mt-1\">Check back later for new quizzes</p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Completed Quizzes Section */}\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                Completed Quizzes\r\n              </h3>\r\n              {completedQuizzes && completedQuizzes.length > 0 && (\r\n                <span className=\"text-sm text-gray-500 dark:text-gray-400 bg-gray-100 dark:bg-gray-700 px-3 py-1 rounded-full\">\r\n                  {completedQuizzes.length} completed\r\n                </span>\r\n              )}\r\n            </div>\r\n            \r\n            {completedQuizzes && completedQuizzes.length > 0 ? (\r\n              <CompletedQuizzes completedQuizzes={completedQuizzes} />\r\n            ) : (\r\n              <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\r\n                <div className=\"text-center py-8\">\r\n                  <div className=\"w-12 h-12 bg-gray-100 dark:bg-gray-700 rounded-full flex items-center justify-center mx-auto mb-3\">\r\n                    <i className=\"fa-solid fa-clipboard-check text-gray-400 text-lg\"></i>\r\n                  </div>\r\n                  <p className=\"text-gray-500 dark:text-gray-400 font-medium\">\r\n                    No completed quizzes\r\n                  </p>\r\n                  <p className=\"text-gray-400 dark:text-gray-500 text-sm mt-1\">\r\n                    Your completed quizzes will appear here\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Join Quiz Modal */}\r\n      <SharedModal\r\n        show={modalState === \"add1\"}\r\n        title=\"Join Quiz\"\r\n        onSave={handleSubmit(joinQuiz)}\r\n        onClose={handleClose}\r\n        body={\r\n          <div className=\"p-6 space-y-6\">\r\n            {/* Introduction Section */}\r\n            <div className=\"text-center mb-6\">\r\n              <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                <i className=\"fa-solid fa-key text-blue-600 text-2xl\"></i>\r\n              </div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                Enter Quiz Code\r\n              </h3>\r\n              <p className=\"text-gray-600 text-sm\">\r\n                Ask your instructor for the quiz code to join\r\n              </p>\r\n            </div>\r\n\r\n            {/* Form Section */}\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  Quiz Code <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                    <i className=\"fa-solid fa-hashtag text-gray-400\"></i>\r\n                  </div>\r\n                  <input\r\n                    {...register(\"code\", { \r\n                      required: \"Quiz code is required\",\r\n                      minLength: {\r\n                        value: 3,\r\n                        message: \"Quiz code must be at least 3 characters\"\r\n                      }\r\n                    })}\r\n                    type=\"text\"\r\n                    placeholder=\"e.g., ABC123\"\r\n                    className=\"w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white transition-colors duration-200\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                  />\r\n                </div>\r\n                {errors.code && (\r\n                  <div className=\"mt-2 flex items-center text-sm text-red-600\">\r\n                    <i className=\"fa-solid fa-exclamation-circle mr-2\"></i>\r\n                    {String(errors.code.message)}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Help Text */}\r\n            <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4\">\r\n              <div className=\"flex items-start\">\r\n                <i className=\"fa-solid fa-info-circle text-blue-600 dark:text-blue-400 mr-3 mt-0.5\"></i>\r\n                <div className=\"text-sm text-blue-800 dark:text-blue-200\">\r\n                  <p className=\"font-medium mb-1\">How to get a quiz code:</p>\r\n                  <ul className=\"space-y-1 text-xs\">\r\n                    <li>• Ask your instructor for the quiz code</li>\r\n                    <li>• Check your email for quiz invitations</li>\r\n                    <li>• Look for announcements in your course</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n      />\r\n\r\n      {/* Success Modal */}\r\n      <SharedModal\r\n        show={modalState === \"success\"}\r\n        title=\"Success!\"\r\n        onSave={() => {}}\r\n        onClose={handleClose}\r\n        modalType=\"success\"\r\n        body={\r\n          <div className=\"p-6 text-center\">\r\n            {/* Success Animation */}\r\n            <div className=\"mb-6\">\r\n              <div className=\"w-20 h-20 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4 animate-pulse\">\r\n                <i className=\"fa-solid fa-check text-green-600 text-3xl\"></i>\r\n              </div>\r\n              <div className=\"w-16 h-16 bg-green-50 rounded-full flex items-center justify-center mx-auto -mt-8 animate-ping\">\r\n                <i className=\"fa-solid fa-check text-green-400 text-xl\"></i>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Success Message */}\r\n            <div className=\"space-y-3\">\r\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n                Quiz Joined Successfully!\r\n              </h3>\r\n              <p className=\"text-gray-600 dark:text-gray-400\">\r\n                You're all set! Redirecting to your quiz...\r\n              </p>\r\n            </div>\r\n\r\n            {/* Progress Indicator */}\r\n            <div className=\"mt-6\">\r\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                <div className=\"bg-green-600 h-2 rounded-full animate-pulse\" style={{ width: '60%' }}></div>\r\n              </div>\r\n              <p className=\"text-xs text-gray-500 mt-2\">Preparing your quiz...</p>\r\n            </div>\r\n\r\n            {/* Action Buttons */}\r\n            <div className=\"mt-6 flex flex-col sm:flex-row gap-3\">\r\n              <button\r\n                onClick={handleClose}\r\n                className=\"flex-1 px-4 py-2 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-lg transition-colors duration-200 font-medium\"\r\n              >\r\n                <i className=\"fa-solid fa-times mr-2\"></i>\r\n                Close\r\n              </button>\r\n              <button\r\n                onClick={() => window.location.reload()}\r\n                className=\"flex-1 px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg transition-colors duration-200 font-medium\"\r\n              >\r\n                <i className=\"fa-solid fa-arrow-right mr-2\"></i>\r\n                Continue\r\n              </button>\r\n            </div>\r\n          </div>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport { useEffect, useState, useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport { baseUrl } from '../../../ApiUtils/ApiUtils';\r\nimport Loading from '../../../Shared/Loading/Loading';\r\nimport SharedModal from '../../../Shared/Modal/Modal';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { RootState, Submission } from '../../../types';\r\n\r\ninterface Question {\r\n  _id: string;\r\n  title: string;\r\n  options: {\r\n    A: string;\r\n    B: string;\r\n    C: string;\r\n    D: string;\r\n  };\r\n}\r\n\r\nexport default function StudentsQuestion() {\r\n  const { quizId } = useParams();\r\n  const [questions, setQuestions] = useState<Question[]>([]);\r\n  const [quizName, setQuizName] = useState<string>(\"\");\r\n  const { headers } = useSelector((state: RootState) => state.userData);\r\n  const navigate = useNavigate();\r\n  const [answers, setAnswers] = useState<Submission[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [modalState, setModalState] = useState(\"close\");\r\n\r\n  const getQuestions = useCallback(() => {\r\n    setIsLoading(true);\r\n    axios.get(`${baseUrl}/quiz/without-answers/${quizId}`, headers)\r\n      .then((response) => {\r\n        setQuestions(response.data.data.questions);\r\n        setQuizName(response.data.data.title);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.response?.data?.message || 'Failed to load quiz questions');\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, [quizId, headers]);\r\n\r\n  const submitAnswers = () => {\r\n    if (answers.length === 0) {\r\n      toast.warning('Please answer at least one question before submitting');\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    axios.post(`${baseUrl}/quiz/submit/${quizId}`, { answers }, headers)\r\n      .then((response) => {\r\n        toast.success(response.data.data.message);\r\n        showResultModal();\r\n        setTimeout(() => {\r\n          navigate(`/student`);\r\n        }, 2000);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.response?.data?.message || 'Failed to submit answers');\r\n        setTimeout(() => {\r\n          navigate(`/student`);\r\n        }, 2000);\r\n      })\r\n      .finally(() => {\r\n        setIsSubmitting(false);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (questionId: string, selectedAnswer: string) => {\r\n    const newSubmission: Submission = {\r\n      question: questionId,\r\n      answer: selectedAnswer,\r\n    };\r\n    const existingSubmissionIndex = answers.findIndex(submission => submission.question === questionId);\r\n\r\n    if (existingSubmissionIndex !== -1) {\r\n      setAnswers(prevAnswers => {\r\n        const updatedAnswers = [...prevAnswers];\r\n        updatedAnswers[existingSubmissionIndex] = newSubmission;\r\n        return updatedAnswers;\r\n      });\r\n    } else {\r\n      setAnswers(prevAnswers => [...prevAnswers, newSubmission]);\r\n    }\r\n  };\r\n\r\n  const showResultModal = () => {\r\n    setModalState(\"score\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setModalState(\"close\");\r\n  };\r\n\r\n  const getProgressPercentage = () => {\r\n    if (questions.length === 0) return 0;\r\n    return Math.round((answers.length / questions.length) * 100);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQuestions();\r\n  }, [getQuestions]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {/* Quiz Header */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6\">\r\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n            <div>\r\n              <h1 className=\"text-2xl font-bold text-gray-900\">Quiz: {quizName || \"Loading...\"}</h1>\r\n              <p className=\"text-gray-600 mt-1\">Answer all questions to complete the quiz</p>\r\n            </div>\r\n            \r\n            {/* Progress Indicator */}\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"text-right\">\r\n                <p className=\"text-sm font-medium text-gray-700\">\r\n                  Progress: {answers.length}/{questions.length}\r\n                </p>\r\n                <p className=\"text-xs text-gray-500\">\r\n                  {getProgressPercentage()}% Complete\r\n                </p>\r\n              </div>\r\n              <div className=\"w-16 h-2 bg-gray-200 rounded-full overflow-hidden\">\r\n                <div \r\n                  className=\"h-full bg-blue-600 transition-all duration-300 ease-out\"\r\n                  style={{ width: `${getProgressPercentage()}%` }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Questions Container */}\r\n        {!isLoading ? (\r\n          <div className=\"space-y-6\">\r\n            {questions.map((question, index) => (\r\n              <div key={question._id} className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\r\n                {/* Question Header */}\r\n                <div className=\"bg-authImage px-6 py-4 border-b border-gray-200\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                      Question {index + 1}\r\n                    </h3>\r\n                    <span className=\"text-sm text-gray-500\">\r\n                      {answers.find(a => a.question === question._id) ? (\r\n                        <span className=\"flex items-center text-green-600\">\r\n                          <i className=\"fa-solid fa-check-circle mr-1\"></i>\r\n                          Answered\r\n                        </span>\r\n                      ) : (\r\n                        <span className=\"flex items-center text-orange-600\">\r\n                          <i className=\"fa-solid fa-circle mr-1\"></i>\r\n                          Pending\r\n                        </span>\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                  <p className=\"text-gray-700 mt-2 leading-relaxed\">\r\n                    {question.title}\r\n                  </p>\r\n                </div>\r\n\r\n                {/* Answer Options */}\r\n                <div className=\"p-6\">\r\n                  <div className=\"space-y-3\">\r\n                    {Object.entries(question.options).map(([key, value]) => (\r\n                      <label\r\n                        key={key}\r\n                        className=\"flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 hover:border-blue-300 cursor-pointer transition-all duration-200 group\"\r\n                      >\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"sr-only\"\r\n                          name={`question_${question._id}`}\r\n                          onChange={() => handleSubmit(question._id, value)}\r\n                          checked={answers.find(a => a.question === question._id && a.answer === value) !== undefined}\r\n                        />\r\n                        <div className=\"flex items-center justify-center w-5 h-5 border-2 border-gray-300 rounded-full mr-4 group-hover:border-blue-400 transition-colors duration-200\">\r\n                          <div className={`w-2.5 h-2.5 rounded-full transition-all duration-200 ${\r\n                            answers.find(a => a.question === question._id && a.answer === value) \r\n                              ? 'bg-blue-600 scale-100' \r\n                              : 'scale-0'\r\n                          }`}></div>\r\n                        </div>\r\n                        <div className=\"flex items-center flex-1\">\r\n                          <span className=\"font-medium text-gray-700 mr-3 min-w-[20px]\">\r\n                            {key}.\r\n                          </span>\r\n                          <span className=\"text-gray-700 leading-relaxed\">\r\n                            {value}\r\n                          </span>\r\n                        </div>\r\n                      </label>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n            {/* Submit Button */}\r\n            <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\r\n              <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n                <div>\r\n                  <p className=\"text-sm text-gray-600\">\r\n                    {answers.length === questions.length \r\n                      ? \"All questions answered! You can now submit your quiz.\"\r\n                      : `${questions.length - answers.length} question(s) remaining`\r\n                    }\r\n                  </p>\r\n                </div>\r\n                \r\n                <button\r\n                  onClick={submitAnswers}\r\n                  disabled={isSubmitting || answers.length === 0}\r\n                  className=\"inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200 shadow-sm hover:shadow-md\"\r\n                >\r\n                  {isSubmitting ? (\r\n                    <>\r\n                      <i className=\"fa-solid fa-spinner fa-spin mr-2\"></i>\r\n                      Submitting...\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <i className=\"fa-solid fa-paper-plane mr-2\"></i>\r\n                      Submit Quiz\r\n                    </>\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"flex items-center justify-center py-12\">\r\n            <div className=\"text-center\">\r\n              <Loading />\r\n              <p className=\"mt-4 text-sm text-gray-500\">Loading quiz questions...</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Success Modal */}\r\n      <SharedModal\r\n        show={modalState === \"score\"}\r\n        title=\"Quiz Submitted\"\r\n        onSave={() => {}}\r\n        omitHeader={true}\r\n        onClose={handleClose}\r\n        body={\r\n          <div className=\"text-center p-6\">\r\n            <div className=\"mb-6\">\r\n              <div className=\"mx-auto w-16 h-16 bg-green-100 rounded-full flex items-center justify-center\">\r\n                <i className=\"fa-solid fa-circle-check text-3xl text-green-600\"></i>\r\n              </div>\r\n            </div>\r\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n              Quiz Submitted Successfully!\r\n            </h3>\r\n            <p className=\"text-gray-600 mb-6\">\r\n              Your answers have been recorded. You'll be redirected to the dashboard shortly.\r\n            </p>\r\n            <button\r\n              onClick={handleClose}\r\n              className=\"inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200\"\r\n            >\r\n              <i className=\"fa-solid fa-check mr-2\"></i>\r\n              Close\r\n            </button>\r\n          </div>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { forwardRef, InputHTMLAttributes } from 'react';\r\nimport { FieldError } from 'react-hook-form';\r\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  label: string;\r\n  error?: FieldError;\r\n  helperText?: string;\r\n  leftIcon?: React.ReactNode;\r\n  rightIcon?: React.ReactNode;\r\n  variant?: 'default' | 'outlined' | 'filled';\r\n  size?: 'sm' | 'md' | 'lg';\r\n  fullWidth?: boolean;\r\n}\r\n\r\nconst Input = forwardRef<HTMLInputElement, InputProps>(({\r\n  label,\r\n  error,\r\n  helperText,\r\n  leftIcon,\r\n  rightIcon,\r\n  variant = 'default',\r\n  size = 'md',\r\n  fullWidth = false,\r\n  className = '',\r\n  id,\r\n  ...props\r\n}, ref) => {\r\n  const baseClasses = 'border transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500';\r\n  \r\n  const variantClasses = {\r\n    default: 'border-gray-300 bg-white hover:border-gray-400',\r\n    outlined: 'border-2 border-gray-300 bg-transparent hover:border-gray-400',\r\n    filled: 'border-0 bg-gray-100 hover:bg-gray-200'\r\n  };\r\n\r\n  const sizeClasses = {\r\n    sm: 'px-3 py-2 text-sm',\r\n    md: 'px-4 py-2.5 text-base',\r\n    lg: 'px-5 py-3 text-lg'\r\n  };\r\n\r\n  const errorClasses = error ? 'border-red-500 focus:border-red-500 focus:ring-red-500' : '';\r\n  const widthClasses = fullWidth ? 'w-full' : '';\r\n\r\n  const inputClasses = `\r\n    ${baseClasses}\r\n    ${variantClasses[variant]}\r\n    ${sizeClasses[size]}\r\n    ${errorClasses}\r\n    ${widthClasses}\r\n    ${leftIcon ? 'pl-10' : ''}\r\n    ${rightIcon ? 'pr-10' : ''}\r\n    ${className}\r\n    rounded-md\r\n  `.trim().replace(/\\s+/g, ' ');\r\n\r\n  const inputId = id || `input-${label.toLowerCase().replace(/\\s+/g, '-')}`;\r\n\r\n  return (\r\n    <div className={`flex flex-col ${fullWidth ? 'w-full' : ''}`}>\r\n      <label \r\n        htmlFor={inputId}\r\n        className=\"block text-sm font-medium text-gray-700 mb-1\"\r\n      >\r\n        {label}\r\n        {props.required && <span className=\"text-red-500 ml-1\">*</span>}\r\n      </label>\r\n      \r\n      <div className=\"relative\">\r\n        {leftIcon && (\r\n          <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n            <div className=\"text-gray-400\">\r\n              {leftIcon}\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <input\r\n          ref={ref}\r\n          id={inputId}\r\n          className={inputClasses}\r\n          aria-invalid={error ? 'true' : 'false'}\r\n          aria-describedby={error ? `${inputId}-error` : helperText ? `${inputId}-helper` : undefined}\r\n          {...props}\r\n        />\r\n        \r\n        {rightIcon && (\r\n          <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\r\n            <div className=\"text-gray-400\">\r\n              {rightIcon}\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {error && (\r\n          <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\r\n            <ErrorMessage>{error.message}</ErrorMessage>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {helperText && !error && (\r\n        <p id={`${inputId}-helper`} className=\"mt-1 text-sm text-gray-500\">\r\n          {helperText}\r\n        </p>\r\n      )}\r\n      \r\n      {error && (\r\n        <p id={`${inputId}-error`} className=\"mt-1 text-sm text-red-600\">\r\n          {error.message}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nInput.displayName = 'Input';\r\n\r\nexport default Input;\r\n","import axios from 'axios';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { baseUrl } from '../../../ApiUtils/ApiUtils';\nimport Input from '../../../Shared/Input/Input';\nimport Loading from '../../../Shared/Loading/Loading';\nimport { RootState } from '../../../types';\n\ninterface AddStudentInterface {\n  selectedStudentId: React.Dispatch<React.SetStateAction<string>>;\n  isLoading: boolean;\n}\n\ninterface Student {\n  _id: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n}\n\nexport default function AddStudentToGroup({ selectedStudentId, isLoading }: AddStudentInterface) {\n  const [studentsWithoutGroup, setStudentsWithoutGroup] = useState<Student[]>([]);\n  const [nameInput, setNameInput] = useState('');\n  const [filteredStudents, setFilteredStudents] = useState<Student[]>([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const { headers } = useSelector((state: RootState) => state.userData);\n\n  const getStudentsWithoutGroup = useCallback(() => {\n    axios.get(`${baseUrl}/student/without-group`, headers)\n      .then((response) => {\n        setStudentsWithoutGroup(response.data);\n        setFilteredStudents(response.data);\n      })\n      .catch((error) => {\n        toast.error(error.response?.data?.message || 'Failed to fetch students');\n      });\n  }, [headers]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const inputValue = e.target.value;\n    setNameInput(inputValue);\n    setSelectedIndex(-1); // Reset selection when typing\n    \n    if (inputValue.trim() === '') {\n      setFilteredStudents([]);\n      setShowDropdown(false);\n      selectedStudentId('');\n      return;\n    }\n\n    const filtered = studentsWithoutGroup.filter(student => {\n      const fullName = `${student.first_name} ${student.last_name}`.toLowerCase();\n      const email = student.email.toLowerCase();\n      const searchTerm = inputValue.toLowerCase();\n      \n      return fullName.includes(searchTerm) || email.includes(searchTerm);\n    });\n\n    setFilteredStudents(filtered);\n    setShowDropdown(filtered.length > 0);\n    \n    // Don't auto-select - let user choose explicitly\n    selectedStudentId('');\n  };\n\n  const handleStudentSelect = (student: Student) => {\n    setNameInput(`${student.first_name} ${student.last_name}`);\n    selectedStudentId(student._id);\n    setShowDropdown(false);\n    setSelectedIndex(-1);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (!showDropdown || filteredStudents.length === 0) return;\n\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault();\n        setSelectedIndex(prev => \n          prev < filteredStudents.length - 1 ? prev + 1 : 0\n        );\n        break;\n      case 'ArrowUp':\n        e.preventDefault();\n        setSelectedIndex(prev => \n          prev > 0 ? prev - 1 : filteredStudents.length - 1\n        );\n        break;\n      case 'Enter':\n        e.preventDefault();\n        if (selectedIndex >= 0 && selectedIndex < filteredStudents.length) {\n          handleStudentSelect(filteredStudents[selectedIndex]);\n        }\n        break;\n      case 'Escape':\n        setShowDropdown(false);\n        setSelectedIndex(-1);\n        break;\n    }\n  };\n\n  const handleInputFocus = () => {\n    // Only show dropdown if there's a search term and results\n    if (nameInput.trim() !== '' && filteredStudents.length > 0) {\n      setShowDropdown(true);\n    }\n  };\n\n  const handleInputBlur = () => {\n    // Delay hiding dropdown to allow for clicks\n    setTimeout(() => {\n      setShowDropdown(false);\n      setSelectedIndex(-1);\n    }, 200);\n  };\n\n  useEffect(() => {\n    getStudentsWithoutGroup();\n  }, [getStudentsWithoutGroup]);\n\n  return (\n    <div className=\"w-full max-w-lg mx-auto p-4 sm:p-6\">\n      {isLoading ? (\n        <div className=\"flex flex-col items-center justify-center py-12 space-y-4\">\n          <Loading />\n          <p className=\"text-sm text-gray-500\">Loading available students...</p>\n        </div>\n      ) : (\n        <div className=\"space-y-6\">\n          {/* Header Section */}\n          <div className=\"text-center mb-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n              Add Student to Group\n            </h3>\n            <p className=\"text-sm text-gray-600\">\n              Search and select a student to add to the current group\n            </p>\n          </div>\n\n          {/* Search Section */}\n          <div className=\"space-y-3\">\n            <div className=\"relative\">\n              <Input\n                label=\"Search Students\"\n                onChange={handleInputChange}\n                value={nameInput}\n                onFocus={handleInputFocus}\n                onBlur={handleInputBlur}\n                onKeyDown={handleKeyDown}\n                placeholder=\"Type student name or email...\"\n                leftIcon={\n                  <i className=\"fa-solid fa-search text-gray-400\"></i>\n                }\n                fullWidth\n                aria-describedby=\"search-help\"\n              />\n              \n              {/* Dropdown */}\n              {showDropdown && filteredStudents.length > 0 && (\n                <div \n                  className=\"absolute z-20 w-full mt-2 bg-white border border-gray-200 rounded-xl shadow-xl max-h-64 overflow-y-auto\"\n                  role=\"listbox\"\n                  aria-label=\"Available students\"\n                >\n                  <div className=\"p-2\">\n                    <div className=\"text-xs font-medium text-gray-500 uppercase tracking-wide px-3 py-2\">\n                      Available Students ({filteredStudents.length})\n                    </div>\n                    {filteredStudents.map((student, index) => (\n                      <button\n                        key={student._id}\n                        onClick={() => handleStudentSelect(student)}\n                        onMouseEnter={() => setSelectedIndex(index)}\n                        onMouseLeave={() => setSelectedIndex(-1)}\n                        className={`w-full px-4 py-3 text-left hover:bg-blue-50 focus:bg-blue-50 focus:outline-none rounded-lg transition-all duration-150 group ${\n                          selectedIndex === index ? 'bg-blue-50' : ''\n                        }`}\n                        role=\"option\"\n                        aria-selected={selectedIndex === index}\n                      >\n                        <div className=\"flex items-center space-x-3\">\n                          <div className=\"flex-shrink-0\">\n                            <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center\">\n                              <span className=\"text-sm font-medium text-blue-600\">\n                                {student.first_name.charAt(0)}{student.last_name.charAt(0)}\n                              </span>\n                            </div>\n                          </div>\n                          <div className=\"flex-1 min-w-0\">\n                            <div className=\"font-medium text-gray-900 group-hover:text-blue-700\">\n                              {student.first_name} {student.last_name}\n                            </div>\n                            <div className=\"text-sm text-gray-500 truncate\">\n                              {student.email}\n                            </div>\n                          </div>\n                          <div className=\"flex-shrink-0 opacity-0 group-hover:opacity-100 transition-opacity\">\n                            <i className=\"fa-solid fa-plus text-blue-500\"></i>\n                          </div>\n                        </div>\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n            \n            {/* No Students Available Message */}\n            {studentsWithoutGroup.length === 0 && (\n              <div className=\"text-center py-8\">\n                <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <i className=\"fa-solid fa-users text-gray-400 text-xl\"></i>\n                </div>\n                <p className=\"text-sm text-gray-500 mb-2\">\n                  No students available without a group\n                </p>\n                <p className=\"text-xs text-gray-400\">\n                  All students are already assigned to groups\n                </p>\n              </div>\n            )}\n          </div>\n\n          {/* Selected Student Info */}\n          {nameInput && nameInput.includes(' ') && (\n            <div className=\"p-4 bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 rounded-xl\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"w-10 h-10 bg-green-100 rounded-full flex items-center justify-center\">\n                    <i className=\"fa-solid fa-check text-green-600\"></i>\n                  </div>\n                </div>\n                <div className=\"flex-1\">\n                  <div className=\"font-medium text-green-800\">\n                    Student Selected\n                  </div>\n                  <div className=\"text-sm text-green-700\">\n                    {nameInput}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Search Tips */}\n          {studentsWithoutGroup.length > 0 && !nameInput && (\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\" id=\"search-help\">\n              <div className=\"flex items-start space-x-3\">\n                <i className=\"fa-solid fa-lightbulb text-blue-500 mt-0.5\"></i>\n                <div>\n                  <div className=\"text-sm font-medium text-blue-800 mb-1\">\n                    Search Tips\n                  </div>\n                  <ul className=\"text-xs text-blue-700 space-y-1\">\n                    <li>• Type student's first or last name</li>\n                    <li>• Search by email address</li>\n                    <li>• Click on a student to select them</li>\n                    <li>• Use arrow keys to navigate results</li>\n                    <li>• Press Enter to select highlighted student</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Keyboard Navigation Help */}\n          {showDropdown && filteredStudents.length > 0 && (\n            <div className=\"text-xs text-gray-500 text-center\">\n              <span className=\"inline-flex items-center space-x-2\">\n                <kbd className=\"px-2 py-1 bg-gray-100 rounded text-xs\">↑↓</kbd>\n                <span>Navigate</span>\n                <kbd className=\"px-2 py-1 bg-gray-100 rounded text-xs\">Enter</kbd>\n                <span>Select</span>\n                <kbd className=\"px-2 py-1 bg-gray-100 rounded text-xs\">Esc</kbd>\n                <span>Close</span>\n              </span>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { baseUrl } from \"../../ApiUtils/ApiUtils\";\nimport useFetchData from \"../../ApiUtils/useFetchData\";\nimport Label from \"../../Shared/Label/Label\";\nimport Loading from \"../../Shared/Loading/Loading\";\nimport SharedModal from \"../../Shared/Modal/Modal\";\nimport userImg from \"../../assets/user img.png\";\nimport { studentInfo } from \"../Students/Students\";\nimport { RootState, Group } from \"../../types\";\n\ninterface StudentCard {\n  student: studentInfo;\n  getGroups: () => void;\n  activeGroupId: string;\n  getGroupById: (id: string) => void;\n  groups: Group[];\n}\n\nexport default function StudentCard({\n  student,\n  getGroups,\n  groups,\n  activeGroupId,\n  getGroupById\n}: StudentCard) {\n  \n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [dropdownPosition, setDropdownPosition] = useState<'bottom' | 'top'>('bottom');\n  const { headers } = useSelector((state: RootState) => state.userData);\n  const [studentId, setStudentId] = useState<string>(\"close\");\n  const [modalState, setModalState] = useState<string>(\"close\");\n  const { fetchedData: studentData, getData, isLoading } = useFetchData();\n  const [groupId, setGroupId] = useState<string>(\"\");\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  \n  \n  // Get the name of the active group\n  const activeGroupName = groups.find(group => group._id === activeGroupId)?.name;\n \n  \n  const toggleDropdown = () => {\n    if (!dropdownOpen) {\n      // Check if dropdown would be cut off at bottom\n      const buttonElement = dropdownRef.current?.querySelector('button');\n      if (buttonElement) {\n        const rect = buttonElement.getBoundingClientRect();\n        const viewportHeight = window.innerHeight;\n        const dropdownHeight = 120; // Approximate height of dropdown\n        const spaceBelow = viewportHeight - rect.bottom;\n        \n        if (spaceBelow < dropdownHeight && rect.top > dropdownHeight) {\n          setDropdownPosition('top');\n        } else {\n          setDropdownPosition('bottom');\n        }\n      }\n    }\n    setDropdownOpen(!dropdownOpen);\n  };\n  \n  const closeModal = () => {\n    setModalState(\"close\");\n  };\n\n  const handleView = (id: string) => {\n    getUserInfo(id);\n    setModalState(\"view\");\n  };\n  \n  const getUserInfo = (id: string) => {\n    getData(`student/${id}`);\n  };\n  \n  const handleEdit = (id: string) => {\n    setStudentId(id);\n    setModalState(\"Edit\");\n  };\n\n\n\n  const handleUpdate = () => {\n    if (!groupId) {\n      toast.error(\"Please select a group to continue\");\n      return;\n    }\n\n    // Check if trying to assign to current group\n    if (groupId === activeGroupId) {\n      toast.warning(\"Student is already in this group\");\n      return;\n    }\n    \n    axios\n      .put(\n        `https://upskilling-egypt.com:3005/api/student/${studentId}/${groupId}`, {}, headers\n      )\n      .then(() => {\n        getGroupById(activeGroupId);\n        toast.success(`Successfully moved ${student.first_name} to ${groups.find(g => g._id === groupId)?.name}`);\n        closeModal();\n        setGroupId(\"\"); // Reset selection\n      })\n      .catch((err) => {\n        toast.error(err.response?.data?.message || \"Failed to update student group\");\n      });\n  };\n\n  const [loadingOfDeleteModal, setLoadingOfDeleteModal] = useState(false);\n  \n  const handleDelete = (id: string) => {\n    setModalState(\"Delete\");\n    setStudentId(id);\n  };\n\n  const deleteStudent = () => {\n    setLoadingOfDeleteModal(true)\n    if (!studentId || !activeGroupId) return;\n    axios\n      .delete(`${baseUrl}/student/${studentId}/${activeGroupId}`, headers)\n      .then((response) => {\n        toast.success(response?.data?.message);\n        getGroupById(activeGroupId)\n        closeModal();\n        getGroups();\n      })\n      .catch((error) => {\n        toast.error(error?.response?.data?.message);\n      }).finally(() => {\n        setLoadingOfDeleteModal(false)\n      })\n  };\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setDropdownOpen(false);\n      }\n    };\n\n    if (dropdownOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [dropdownOpen]);\n\n  return (\n    <>\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 hover:shadow-md transition-shadow duration-200 relative\">\n        <div className=\"p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex-shrink-0\">\n                <img \n                  src={userImg} \n                  alt={`${student.first_name} ${student.last_name}`} \n                  className=\"w-12 h-12 rounded-full object-cover border-2 border-gray-200\"\n                />\n              </div>\n              <div className=\"flex-1 min-w-0\">\n                <h3 className=\"text-lg font-semibold text-gray-900 truncate\">\n                  {student.first_name} {student.last_name}\n                </h3>\n                <div className=\"flex items-center space-x-4 text-sm text-gray-500 mt-1\">\n                  <span className=\"flex items-center\">\n                    <i className=\"fa-solid fa-user-graduate mr-1\"></i>\n                    Student\n                  </span>\n                  <span className=\"flex items-center\">\n                    <i className=\"fa-solid fa-circle text-green-500 mr-1\"></i>\n                    Active\n                  </span>\n                </div>\n                {student.group && (\n                  <p className=\"text-sm text-gray-600 mt-1\">\n                    <i className=\"fa-solid fa-users mr-1\"></i>\n                    {student.group.name}\n                  </p>\n                )}\n              </div>\n            </div>\n            \n            {/* Action Menu */}\n            <div className=\"relative\" ref={dropdownRef}>\n              <button\n                type=\"button\"\n                onClick={toggleDropdown}\n                className=\"p-2 rounded-lg hover:bg-gray-100 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                aria-label=\"Open menu\"\n              >\n                <i className=\"fa-solid fa-ellipsis-vertical text-gray-400\"></i>\n              </button>\n              \n              {dropdownOpen && (\n                <div className={`absolute right-0 w-48 origin-top-right rounded-lg bg-white shadow-xl ring-1 ring-black ring-opacity-5 focus:outline-none z-[9999] border border-gray-200 transform opacity-100 scale-100 transition-all duration-200 ease-out ${\n                  dropdownPosition === 'bottom' \n                    ? 'top-full mt-1' \n                    : 'bottom-full mb-1'\n                }`}>\n                  <div className=\"py-1\">\n                    <button\n                      onClick={() => {\n                        handleView(student._id);\n                        setDropdownOpen(false);\n                      }}\n                      className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 transition-colors duration-150\"\n                    >\n                      <i className=\"fa-solid fa-eye mr-3 text-gray-400\"></i>\n                      View Details\n                    </button>\n                    <button\n                      onClick={() => {\n                        handleEdit(student._id);\n                        setDropdownOpen(false);\n                      }}\n                      className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 transition-colors duration-150\"\n                    >\n                      <i className=\"fa-solid fa-edit mr-3 text-gray-400\"></i>\n                      Update Group\n                    </button>\n                    <button\n                      onClick={() => {\n                        handleDelete(student._id);\n                        setDropdownOpen(false);\n                      }}\n                      className=\"flex items-center w-full px-4 py-2 text-sm text-red-600 hover:bg-red-50 transition-colors duration-150\"\n                    >\n                      <i className=\"fa-solid fa-trash-alt mr-3\"></i>\n                      Delete Student\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* View Modal */}\n      <SharedModal\n        show={modalState === \"view\"}\n        omitHeader={true}\n        onClose={closeModal}\n        body={\n          !isLoading ? (\n            <div className=\"space-y-4\">\n              <div className=\"text-center mb-6\">\n                <img \n                  src={userImg} \n                  alt=\"Student\" \n                  className=\"w-20 h-20 rounded-full mx-auto border-4 border-gray-200\"\n                />\n                <h3 className=\"text-xl font-semibold text-gray-900 mt-3\">\n                  {studentData.first_name} {studentData.last_name}\n                </h3>\n              </div>\n              <div className=\"space-y-3\">\n                <Label\n                  word=\"First Name\"\n                  class_Name=\"w-full\"\n                  value={studentData.first_name}\n                />\n                <Label\n                  word=\"Last Name\"\n                  class_Name=\"w-full\"\n                  value={studentData.last_name}\n                />\n                <Label\n                  word=\"Email\"\n                  class_Name=\"w-full\"\n                  value={studentData.email}\n                />\n                <Label\n                  word=\"Group\"\n                  class_Name=\"w-full\"\n                  value={studentData?.group?.name}\n                />\n              </div>\n            </div>\n          ) : (\n            <div className=\"flex items-center justify-center h-32\">\n              <Loading />\n            </div>\n          )\n        }\n      />\n\n      {/* Delete Modal */}\n      <SharedModal\n        show={modalState === \"Delete\"}\n        title=\"Delete Student\"\n        onClose={closeModal}\n        modalType=\"delete\"\n        body={\n          !loadingOfDeleteModal ? (\n            <div className=\"p-6\">\n              {/* Student Info */}\n              <div className=\"text-center mb-6\">\n                <img \n                  src={userImg} \n                  alt=\"Student\" \n                  className=\"w-16 h-16 rounded-full mx-auto mb-3 border-2 border-gray-200\"\n                />\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-1\">\n                  {student.first_name} {student.last_name}\n                </h3>\n                <p className=\"text-sm text-gray-600\">{student.email}</p>\n              </div>\n\n              {/* Warning Message */}\n              <div className=\"text-center mb-6\">\n                <div className=\"inline-flex items-center justify-center w-12 h-12 bg-red-100 rounded-full mb-3\">\n                  <i className=\"fa-solid fa-exclamation-triangle text-red-600 text-xl\"></i>\n                </div>\n                <p className=\"text-gray-700 mb-3\">\n                  Are you sure you want to delete this student?\n                </p>\n                <div className=\"bg-red-50 border border-red-200 rounded-lg p-3 text-sm text-red-700\">\n                  This action cannot be undone.\n                </div>\n              </div>\n\n              {/* Action Buttons */}\n              <div className=\"flex gap-3 pt-4 border-t border-gray-200\">\n                <button\n                  onClick={closeModal}\n                  className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 bg-white rounded-lg hover:bg-gray-50 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={deleteStudent}\n                  className=\"flex-1 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\"\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div className=\"flex items-center justify-center py-8\">\n              <div className=\"w-8 h-8 border-4 border-red-200 border-t-red-600 rounded-full animate-spin mr-3\"></div>\n              <span className=\"text-gray-600\">Deleting...</span>\n            </div>\n          )\n        }\n      />\n\n      {/* Update Modal */}\n      <SharedModal\n        show={modalState === \"Edit\"}\n        title=\"Update Student Group\"\n        onSave={handleUpdate}\n        onClose={closeModal}\n        body={\n          <div className=\"p-6\">\n            {/* Student Information Header */}\n            <div className=\"text-center mb-6\">\n              <div className=\"flex items-center justify-center mb-4\">\n                <img \n                  src={userImg} \n                  alt=\"Student\" \n                  className=\"w-16 h-16 rounded-full border-3 border-gray-200 shadow-sm\"\n                />\n                <div className=\"ml-4 text-left\">\n                  <h3 className=\"text-lg font-semibold text-gray-900\">\n                    {student.first_name} {student.last_name}\n                  </h3>\n                  <p className=\"text-sm text-gray-600\">{student.email}</p>\n                </div>\n              </div>\n              \n              {/* Current Group Display */}\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6\">\n                <div className=\"flex items-center justify-center\">\n                  <i className=\"fa-solid fa-users text-blue-600 mr-2\"></i>\n                                      <span className=\"text-sm font-medium text-blue-800\">Current Group:</span>\n                    <span className=\"text-sm text-blue-900 ml-2 font-semibold\">\n                      {activeGroupName || \"No group assigned\"}\n                    </span>\n                </div>\n              </div>\n            </div>\n\n            {/* Group Selection Section */}\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-semibold text-gray-900 mb-3 flex items-center\">\n                  <i className=\"fa-solid fa-arrow-right mr-2 text-indigo-600\"></i>\n                  Select New Group\n                </label>\n                \n                {/* Enhanced Select Dropdown */}\n                <div className=\"relative\">\n                  <select\n                    className={`w-full px-4 py-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 appearance-none bg-white text-gray-900 font-medium transition-all duration-200 ${\n                      groupId ? 'border-green-300 bg-green-50' : 'border-gray-300 hover:border-gray-400'\n                    }`}\n                    value={groupId}\n                    onChange={(eventInfo) => {\n                      setGroupId(eventInfo.target.value);\n                    }}\n                  >\n                    <option value=\"\" className=\"text-gray-500\">Choose a group...</option>\n                    {groups.map((group, idx) => (\n                                             <option \n                         key={idx} \n                         value={group._id}\n                         className=\"text-gray-900 py-2\"\n                         disabled={group.name === student.group?.name}\n                       >\n                         {group.name} {group.name === student.group?.name ? '(Current)' : ''}\n                       </option>\n                    ))}\n                  </select>\n                  \n                  {/* Custom Dropdown Arrow */}\n                  <div className=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\n                    <i className=\"fa-solid fa-chevron-down text-gray-400\"></i>\n                  </div>\n                </div>\n\n                {/* Validation Message */}\n                {!groupId && (\n                  <p className=\"text-sm text-gray-500 mt-2 flex items-center\">\n                    <i className=\"fa-solid fa-info-circle mr-1\"></i>\n                    Please select a group to continue\n                  </p>\n                )}\n\n                {/* Selected Group Preview */}\n                {groupId && (\n                  <div className=\"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\n                    <div className=\"flex items-center\">\n                      <i className=\"fa-solid fa-check-circle text-green-600 mr-3 text-lg\"></i>\n                      <div>\n                        <p className=\"text-sm font-medium text-green-800\">\n                          Moving to: {groups.find(g => g._id === groupId)?.name}\n                        </p>\n                        <p className=\"text-xs text-green-600 mt-1\">\n                          Click \"Update Group\" to confirm the change\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* Group Information Cards */}\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 mt-6\">\n                {groups.slice(0, 4).map((group, idx) => (\n                  <div \n                    key={idx}\n                    className={`p-3 border rounded-lg cursor-pointer transition-all duration-200 ${\n                      groupId === group._id \n                        ? 'border-indigo-300 bg-indigo-50 shadow-md' \n                        : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n                                         } ${group.name === student.group?.name ? 'opacity-50 cursor-not-allowed' : ''}`}\n                     onClick={() => group.name !== student.group?.name && setGroupId(group._id)}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex-1\">\n                        <h4 className=\"text-sm font-medium text-gray-900 truncate\">\n                          {group.name}\n                        </h4>\n                        <p className=\"text-xs text-gray-500 mt-1\">\n                          {group.students?.length || 0} students\n                        </p>\n                      </div>\n                                             {group.name === student.group?.name && (\n                         <span className=\"text-xs bg-gray-100 text-gray-600 px-2 py-1 rounded-full\">\n                           Current\n                         </span>\n                       )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              {/* Warning Message */}\n              <div className=\"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n                <div className=\"flex items-start\">\n                  <i className=\"fa-solid fa-exclamation-triangle text-yellow-600 mr-3 mt-0.5\"></i>\n                  <div>\n                    <p className=\"text-sm font-medium text-yellow-800\">\n                      Group Change Notice\n                    </p>\n                    <p className=\"text-xs text-yellow-700 mt-1\">\n                      Changing a student's group will affect their quiz assignments and access to group-specific content.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        }\n      />\n    </>\n  );\n}\n","import axios from \"axios\";\r\nimport { useEffect, useState, useCallback } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { baseUrl } from \"../../ApiUtils/ApiUtils\";\r\nimport Loading from \"../../Shared/Loading/Loading\";\r\nimport SharedModal from \"../../Shared/Modal/Modal\";\r\nimport NoData from \"../../Shared/NoData/NoData\";\r\nimport AddStudentToGroup from \"./AddStudentToGroup/AddStudentToGroup\";\r\nimport StudentCard from \"../StudentCard/StudentCard\";\r\nimport { RootState, Group } from \"../../types\";\r\n\r\nexport interface studentInfo {\r\n  email: string;\r\n  last_name: string;\r\n  first_name: string;\r\n  group: {\r\n    name: string;\r\n  };\r\n  _id: string;\r\n  avg_score?: string;\r\n}\r\n\r\nexport default function Students() {\r\n  const { headers } = useSelector((state: RootState) => state.userData);\r\n  const [modalAction, setModalAction] = useState(\"close\");\r\n  const [userId, setUserId] = useState<string>(\"\");\r\n  const [groups, setGroup] = useState<Group[]>([]);\r\n  const [groupId, setGroupId] = useState<string>();\r\n  const [activeGroupId, setActiveGroupId] = useState<string>();\r\n  const [students, setStudents] = useState<studentInfo[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleOpenModal = (action: string) => {\r\n    setModalAction(action);\r\n  };\r\n  \r\n  const closeModal = useCallback(() => setModalAction(\"close\"), []);\r\n\r\n  const getStudentsFromGroup = useCallback((id: string) => {\r\n    axios\r\n      .get(`${baseUrl}/group/${id}`, headers)\r\n      .then((res) => {\r\n        setStudents(res.data.students);\r\n      })\r\n      .catch((err) => {\r\n        // Error fetching students\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, [headers]);\r\n\r\n  const getGroupById = useCallback((id: string) => {\r\n    setActiveGroupId(id);\r\n    setIsLoading(true);\r\n    getStudentsFromGroup(id);\r\n  }, [getStudentsFromGroup]);\r\n\r\n  const [addModalLoading, setAddModalLoading] = useState(false);\r\n\r\n  const addStudentToGroup = () => {\r\n    setAddModalLoading(true);\r\n    if (userId) {\r\n      return handleAddStudent();\r\n    } else {\r\n      toast.error(\"in-valid name or this student is already in group\");\r\n      setAddModalLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddStudent = useCallback(() => {\r\n    axios\r\n      .get(`${baseUrl}/student/${userId}/${groupId}`, headers)\r\n      .then((response) => {\r\n        toast.success(response.data.message);\r\n        closeModal();\r\n        getGroupById(activeGroupId!);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.response.data.message);\r\n      })\r\n      .finally(() => {\r\n        setAddModalLoading(false);\r\n      });\r\n  }, [userId, groupId, headers, closeModal, getGroupById, activeGroupId]);\r\n\r\n  const getGroups = useCallback(() => {\r\n    axios\r\n      .get(`${baseUrl}/group`, headers)\r\n      .then((response) => {\r\n        setGroup(response.data);\r\n        if (!groupId) {\r\n          setGroupId(response.data[0]?._id);\r\n          getGroupById(response.data[0]?._id);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.response.data.message || \"Invalid Data\");\r\n      });\r\n  }, [headers, groupId, getGroupById]);\r\n\r\n  useEffect(() => {\r\n    getGroups();\r\n  }, [getGroups]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {groups.length === 0 ? (\r\n        <div className=\"h-[50vh] w-full flex items-center justify-center\">\r\n          <Loading />\r\n        </div>\r\n      ) : (\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n          {/* Header Section */}\r\n          <div className=\"mb-8\">\r\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Students Management</h1>\r\n            <p className=\"text-gray-600\">Manage students across different groups</p>\r\n          </div>\r\n\r\n          {/* Action Button */}\r\n          <div className=\"flex justify-end mb-6\">\r\n            <button\r\n              onClick={() => handleOpenModal(\"add\")}\r\n              className=\"inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-lg shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors duration-200\"\r\n            >\r\n              <i className=\"fa-solid fa-circle-plus mr-2\"></i>\r\n              Add Student to Group\r\n            </button>\r\n          </div>\r\n\r\n          {/* Main Content */}\r\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\r\n            {/* Group Navigation */}\r\n            <div className=\"px-6 py-4 border-b border-gray-200 bg-gray-50\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Select Group</h3>\r\n              <div className=\"flex flex-wrap gap-3\">\r\n                {groups.map((group, index) => (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => {\r\n                      setGroupId(group._id);\r\n                      getGroupById(group._id);\r\n                    }}\r\n                    className={`px-4 py-2 rounded-lg border transition-all duration-200 font-medium ${\r\n                      group._id === activeGroupId\r\n                        ? \"bg-indigo-600 text-white border-indigo-600 shadow-md\"\r\n                        : \"bg-white text-gray-700 border-gray-300 hover:bg-gray-50 hover:border-gray-400\"\r\n                    }`}\r\n                  >\r\n                    {group.name}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Students Section */}\r\n            <div className=\"p-6\">\r\n              <div className=\"flex items-center justify-between mb-6\">\r\n                <h3 className=\"text-xl font-semibold text-gray-900\">\r\n                  Students List\r\n                  {activeGroupId && (\r\n                    <span className=\"text-sm font-normal text-gray-500 ml-2\">\r\n                      ({students.length} students)\r\n                    </span>\r\n                  )}\r\n                </h3>\r\n              </div>\r\n\r\n              {/* Loading State */}\r\n              {isLoading ? (\r\n                <div className=\"flex items-center justify-center py-12\">\r\n                  <Loading />\r\n                </div>\r\n              ) : students.length > 0 ? (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 relative\">\r\n                  {students.map((student: studentInfo, index: number) => (\r\n                    <div key={index} className=\"relative\">\r\n                      <StudentCard \r\n                        activeGroupId={activeGroupId!} \r\n                        getGroupById={getGroupById} \r\n                        student={student} \r\n                        groups={groups}\r\n                        getGroups={getGroups}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"flex items-center justify-center py-12\">\r\n                  <div className=\"text-center\">\r\n                    <NoData />\r\n                    <p className=\"mt-4 text-gray-500\">No students found in this group</p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal */}\r\n      <SharedModal\r\n        show={modalAction === \"add\"}\r\n        title=\"Add New Student\"\r\n        onSave={() => {\r\n          addStudentToGroup();\r\n        }}\r\n        onClose={closeModal}\r\n        body={\r\n          <>\r\n            {modalAction === \"add\" ? (\r\n              <AddStudentToGroup\r\n                isLoading={addModalLoading}\r\n                selectedStudentId={setUserId}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"names":["DeleteGroup","getGroups","isOpen","onClose","id","groupName","headers","useSelector","state","userData","isLoading","setIsLoading","useState","jsxRuntimeExports","jsx","className","onClick","onKeyDown","event","key","role","children","jsxs","e","stopPropagation","Loading","async","response","axios","delete","baseUrl","toast","success","_a","data","message","error","errorMessage","_c","_b","disabled","AddGroup","studentsList","setStudentsList","selectedStudents","setSelectedStudents","isSubmitting","setIsSubmitting","validationErrors","setValidationErrors","register","handleSubmit","reset","formState","errors","useForm","getStudents","useCallback","studentsData","get","Array","isArray","length","useEffect","studentOptions","filter","student","_id","first_name","last_name","map","value","label","onSubmit","students","submitData","name","post","htmlFor","required","minLength","maxLength","type","placeholder","ErrorMessage","Select","isMulti","options","onChange","selectedOptions","prev","styles","control","provided","border","borderRadius","borderLeft","minHeight","borderColor","boxShadow","menu","zIndex","menuPortal","multiValue","backgroundColor","multiValueLabel","color","fontSize","multiValueRemove","classNamePrefix","isDisabled","isClearable","isSearchable","menuPortalTarget","document","body","menuPosition","Fragment","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","UpdateGroup","group","setValue","studentsWithoutGroup","isCurrentMember","groupResponse","currentGroupStudents","handleClose","selectStyles","fontWeight","option","isSelected","isFocused","modalBody","studentIds","put","Controller","defaultValue","render","field","SharedModal","show","title","omitHeader","NoData","src","alt","groupsList","setGroupsList","isloading","modalState","setModalState","setIsOpen","setId","setGroup","setGroupName","handleAddModal","handleCloseModal","strokeLinecap","strokeLinejoin","group2","handleUpdateModal","handleDeleteModal","useFetchData$1","fetchedData","setFetchedData","getData","path","then","catch","finally","userImg","Label","word","class_Name","textClassName","navigate","useNavigate","incomingQuizzes","loading","completedQuizzes","CompletedQuizzes","IncomingQuizzes","onSave","setTimeout","quiz","error2","autoComplete","autoFocus","code","String","modalType","style","width","window","location","reload","quizId","useParams","questions","setQuestions","quizName","setQuizName","answers","setAnswers","getQuestions","showResultModal","getProgressPercentage","Math","round","question","index","find","a","Object","entries","questionId","selectedAnswer","newSubmission","answer","existingSubmissionIndex","findIndex","submission","prevAnswers","updatedAnswers","checked","warning","Input","forwardRef","helperText","leftIcon","rightIcon","variant","size","fullWidth","props","ref","inputClasses","default","outlined","filled","sm","md","lg","trim","replace","inputId","toLowerCase","displayName","Input$1","AddStudentToGroup","selectedStudentId","setStudentsWithoutGroup","nameInput","setNameInput","filteredStudents","setFilteredStudents","showDropdown","setShowDropdown","selectedIndex","setSelectedIndex","getStudentsWithoutGroup","handleStudentSelect","inputValue","target","filtered","fullName","email","searchTerm","includes","onFocus","onBlur","preventDefault","onMouseEnter","onMouseLeave","charAt","StudentCard","groups","activeGroupId","getGroupById","dropdownOpen","setDropdownOpen","dropdownPosition","setDropdownPosition","studentId","setStudentId","studentData","useFetchData","groupId","setGroupId","dropdownRef","useRef","activeGroupName","closeModal","getUserInfo","loadingOfDeleteModal","setLoadingOfDeleteModal","handleClickOutside","current","contains","addEventListener","removeEventListener","buttonElement","querySelector","rect","getBoundingClientRect","dropdownHeight","innerHeight","bottom","top","B","g","err","eventInfo","idx","slice","modalAction","setModalAction","userId","setUserId","setActiveGroupId","setStudents","getStudentsFromGroup","res","addModalLoading","setAddModalLoading","handleAddStudent"],"mappings":"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"}