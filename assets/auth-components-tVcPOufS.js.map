{"version":3,"file":"auth-components-tVcPOufS.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../src/Shared/Loading/Loading.tsx","../../src/Redux/Slices/AuthSlice/AuthSlice.ts","../../src/utils/quizDataNormalizer.ts","../../src/services/api.ts","../../src/Shared/ErrorMessage/ErrorMessage.tsx","../../src/Shared/AuthButton/AuthButton.tsx","../../src/Components/ChangePassword/ChangePassword.tsx","../../src/hooks/useAuth.ts","../../src/Components/Login/Login.tsx","../../src/Components/Register/Register.tsx","../../src/ApiUtils/AuthApiUtils.ts","../../src/Components/RequestResetPass/RequestResetPass.tsx","../../src/Components/RestPassword/RestPassword.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","\r\nexport default function Loading() {\r\n  return (\r\n    <i className=\"fa-solid fa-spin fa-circle-notch\"></i>\r\n  )\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { AuthState } from \"./Interfaces\";\r\nimport { Cookies } from \"typescript-cookie\";\r\n\r\n\r\nconst initialState: AuthState = {\r\n  userData: Cookies.get(\"userData\")\r\n    ? JSON.parse(String(Cookies.get(\"userData\")))\r\n    : null,\r\n  headers: {\r\n    headers: {\r\n      Authorization: Cookies.get(\"userData\")\r\n        ? `Bearer ${JSON.parse(String(Cookies.get(\"userData\"))).accessToken}`\r\n        : null,\r\n    },\r\n  },\r\n  isAuthed: false,\r\n};\r\n\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    setUserData: (state, action) => {\r\n      state.userData = action.payload;\r\n      if (state.userData?.accessToken) {\r\n        state.isAuthed = true;\r\n        Cookies.set(\"userData\", JSON.stringify(action.payload));\r\n        state.headers= {\r\n          headers: {\r\n            Authorization: Cookies.get(\"userData\")\r\n              ? `Bearer ${JSON.parse(String(Cookies.get(\"userData\"))).accessToken}`\r\n              : null,\r\n          },\r\n        }\r\n      }\r\n    },\r\n    logOut: (state) => {\r\n      state.userData = null;\r\n      state.isAuthed = false;\r\n\r\n      state.headers = { headers: { Authorization: \"\" } };\r\n      Cookies.remove(\"userData\", {});\r\n    },\r\n  },\r\n});\r\n\r\nexport const authReducer = authSlice.reducer;\r\nexport const { setUserData, logOut } = authSlice.actions;\r\n","import { Quiz } from '../types';\r\n\r\n/**\r\n * Normalizes quiz data to handle field name mismatches between frontend and backend\r\n * The backend uses 'schadule' (with typo) while frontend expects 'schedule'\r\n */\r\nexport const normalizeQuizData = (quiz: Record<string, unknown>): Quiz => {\r\n  // Handle the schedule/schadule field name mismatch\r\n  const normalizedQuiz = { ...quiz };\r\n  \r\n  // If the quiz has 'schadule' field (backend typo), copy it to 'schedule'\r\n  if (quiz.schadule !== undefined && quiz.schedule === undefined) {\r\n    normalizedQuiz.schedule = quiz.schadule;\r\n  }\r\n  \r\n  // If the quiz has 'schedule' field (correct), use it\r\n  if (quiz.schedule !== undefined) {\r\n    normalizedQuiz.schedule = quiz.schedule;\r\n  }\r\n  \r\n  return normalizedQuiz as unknown as Quiz;\r\n};\r\n\r\n/**\r\n * Normalizes an array of quiz data\r\n */\r\nexport const normalizeQuizArray = (quizzes: Record<string, unknown>[]): Quiz[] => {\r\n  return quizzes.map(normalizeQuizData);\r\n}; ","import axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { Cookies } from 'typescript-cookie';\r\nimport { ApiResponse, ApiError, Quiz, Question, Group, QuizResult } from '../types';\r\nimport { normalizeQuizArray } from '../utils/quizDataNormalizer';\r\n\r\n// Base API configuration\r\nconst BASE_URL = 'https://upskilling-egypt.com:3005/api';\r\n\r\n// Create axios instance with default configuration\r\nconst apiClient = axios.create({\r\n  baseURL: BASE_URL,\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    const userData = Cookies.get('userData');\r\n    \r\n    if (userData) {\r\n      try {\r\n        const parsedData = JSON.parse(userData as string);\r\n        if (parsedData.accessToken) {\r\n          config.headers.Authorization = `Bearer ${parsedData.accessToken}`;\r\n        }\r\n      } catch (error) {\r\n        // Error parsing user data from cookies\r\n      }\r\n    }\r\n    \r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napiClient.interceptors.response.use(\r\n  (response: AxiosResponse) => {\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const apiError: ApiError = {\r\n      message: 'An unexpected error occurred',\r\n      status: error.response?.status || 500,\r\n      data: error.response?.data,\r\n    };\r\n\r\n    if (error.response?.data && typeof error.response.data === 'object') {\r\n      const errorData = error.response.data as Record<string, unknown>;\r\n      apiError.message = (errorData.message as string) || apiError.message;\r\n    }\r\n\r\n    // Handle specific error cases\r\n    switch (error.response?.status) {\r\n      case 401:\r\n        // Handle unauthorized - redirect to login\r\n        Cookies.remove('userData');\r\n        window.location.href = '/login';\r\n        break;\r\n      case 403:\r\n        apiError.message = 'You do not have permission to perform this action';\r\n        break;\r\n      case 404:\r\n        apiError.message = 'Resource not found';\r\n        break;\r\n      case 500:\r\n        apiError.message = 'Internal server error. Please try again later.';\r\n        break;\r\n    }\r\n\r\n    return Promise.reject(apiError);\r\n  }\r\n);\r\n\r\n// Generic API service class\r\nclass ApiService {\r\n  // GET request\r\n  async get<T>(endpoint: string, config?: AxiosRequestConfig): Promise<T> {\r\n    try {\r\n      const response = await apiClient.get<ApiResponse<T>>(endpoint, config);\r\n      \r\n      // Handle different possible response structures\r\n      let finalData: unknown = response.data.data;\r\n      \r\n      // If data.data is not an array, check if response.data itself is an array\r\n      if (!Array.isArray(finalData)) {\r\n        if (Array.isArray(response.data)) {\r\n          finalData = response.data;\r\n        }\r\n      }\r\n      \r\n      return finalData as T;\r\n    } catch (error) {\r\n      this.handleError(error as ApiError);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // POST request\r\n  async post<T>(endpoint: string, data?: unknown, config?: AxiosRequestConfig): Promise<T> {\r\n    try {\r\n      const response = await apiClient.post<ApiResponse<T>>(endpoint, data, config);\r\n      return response.data.data;\r\n    } catch (error) {\r\n      this.handleError(error as ApiError);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // PUT request\r\n  async put<T>(endpoint: string, data?: unknown, config?: AxiosRequestConfig): Promise<T> {\r\n    try {\r\n      const response = await apiClient.put<ApiResponse<T>>(endpoint, data, config);\r\n      return response.data.data;\r\n    } catch (error) {\r\n      this.handleError(error as ApiError);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // DELETE request\r\n  async delete<T>(endpoint: string, config?: AxiosRequestConfig): Promise<T> {\r\n    try {\r\n      const response = await apiClient.delete<ApiResponse<T>>(endpoint, config);\r\n      return response.data.data;\r\n    } catch (error) {\r\n      this.handleError(error as ApiError);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Centralized error handling\r\n  private handleError(error: ApiError): void {\r\n    // Only show toast for user-facing errors\r\n    if (error.status !== 401) {\r\n      toast.error(error.message);\r\n    }\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const apiService = new ApiService();\r\n\r\n// Specific API service classes\r\nexport class AuthService {\r\n  async login(credentials: { email: string; password: string }) {\r\n    return apiService.post('/auth/login', credentials);\r\n  }\r\n\r\n  async register(userData: { first_name: string; last_name: string; email: string; password: string; role: string }) {\r\n    return apiService.post('/auth/register', userData);\r\n  }\r\n\r\n  async forgotPassword(email: { email: string }) {\r\n    return apiService.post('/auth/forgot-password', email);\r\n  }\r\n\r\n  async resetPassword(data: { email: string; seed: string; password: string }) {\r\n    return apiService.post('/auth/reset-password', data);\r\n  }\r\n\r\n  async changePassword(data: { oldPassword: string; newPassword: string }) {\r\n    return apiService.post('/auth/change-password', data);\r\n  }\r\n}\r\n\r\nexport class QuizService extends ApiService {\r\n  // Role-based quiz fetching methods - using the correct endpoint\r\n  async getIncomingQuizzes(): Promise<Quiz[]> {\r\n    const endpoint = '/quiz/incomming'; // This is the only endpoint you have\r\n    \r\n    try {\r\n      const data = await this.get<Quiz[]>(endpoint);\r\n      \r\n      // Ensure we always return an array and normalize the data\r\n      if (!Array.isArray(data)) {\r\n        return [];\r\n      }\r\n      \r\n      // Normalize the quiz data to handle field name mismatches\r\n      const normalizedData = normalizeQuizArray(data as unknown as Record<string, unknown>[]);\r\n      return normalizedData;\r\n    } catch (error: unknown) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getCompletedQuizzes(): Promise<Quiz[]> {\r\n    const endpoint = '/quiz/completed';\r\n    try {\r\n      const data = await this.get<Quiz[]>(endpoint);\r\n      \r\n      // Ensure we always return an array and normalize the data\r\n      if (!Array.isArray(data)) {\r\n        return [];\r\n      }\r\n      \r\n      // Normalize the quiz data to handle field name mismatches\r\n      const normalizedData = normalizeQuizArray(data as unknown as Record<string, unknown>[]);\r\n      return normalizedData;\r\n    } catch (error: unknown) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Remove legacy methods - they use wrong endpoints\r\n  // async getUpcomingQuizzes(role: 'Student' | 'Instructor') {\r\n  //   return apiService.get('/quiz');\r\n  // }\r\n\r\n  // async getCompletedQuizzesLegacy() {\r\n  //   return apiService.get('/quiz');\r\n  // }\r\n\r\n  async createQuiz(quizData: Record<string, unknown>) {\r\n    return this.post<Quiz>('/quiz', quizData);\r\n  }\r\n\r\n  async updateQuiz(id: string, quizData: Record<string, unknown>) {\r\n    return this.put<Quiz>(`/quiz/${id}`, quizData);\r\n  }\r\n\r\n  async deleteQuiz(id: string) {\r\n    return this.delete<{ message: string }>(`/quiz/${id}`);\r\n  }\r\n\r\n  async joinQuiz(code: { code: string }) {\r\n    return this.post<{ message: string }>('/quiz/join', code);\r\n  }\r\n\r\n  async getQuizQuestions(quizId: string) {\r\n    return this.get<Question[]>(`/quiz/without-answers/${quizId}`);\r\n  }\r\n\r\n  async submitQuiz(quizId: string, answers: { answers: unknown[] }) {\r\n    return this.post<{ message: string }>(`/quiz/submit/${quizId}`, answers);\r\n  }\r\n\r\n  async getQuizResults() {\r\n    return this.get<QuizResult[]>('/quiz/result');\r\n  }\r\n}\r\n\r\nexport class QuestionService extends ApiService {\r\n  async getQuestions() {\r\n    return this.get<Question[]>('/question');\r\n  }\r\n\r\n  async createQuestion(questionData: Record<string, unknown>) {\r\n    return this.post<Question>('/question', questionData);\r\n  }\r\n\r\n  async updateQuestion(id: string, questionData: Record<string, unknown>) {\r\n    return this.put<Question>(`/question/${id}`, questionData);\r\n  }\r\n\r\n  async deleteQuestion(id: string) {\r\n    return this.delete<{ message: string }>(`/question/${id}`);\r\n  }\r\n}\r\n\r\nexport class GroupService extends ApiService {\r\n  async getGroups() {\r\n    return this.get<Group[]>('/group');\r\n  }\r\n\r\n  async createGroup(groupData: Record<string, unknown>) {\r\n    return this.post<Group>('/group', groupData);\r\n  }\r\n\r\n  async updateGroup(id: string, groupData: Record<string, unknown>) {\r\n    return this.put<Group>(`/group/${id}`, groupData);\r\n  }\r\n\r\n  async deleteGroup(id: string) {\r\n    return this.delete<{ message: string }>(`/group/${id}`);\r\n  }\r\n\r\n  async getGroupById(id: string) {\r\n    return this.get<Group>(`/group/${id}`);\r\n  }\r\n}\r\n\r\nexport class StudentService {\r\n  async getStudents() {\r\n    return apiService.get('/student');\r\n  }\r\n\r\n  async getTopStudents() {\r\n    return apiService.get('/student/top-five');\r\n  }\r\n\r\n  async getStudentById(id: string) {\r\n    return apiService.get(`/student/${id}`);\r\n  }\r\n\r\n  async updateStudent(id: string, groupId: string) {\r\n    return apiService.put(`/student/${id}/${groupId}`, {});\r\n  }\r\n\r\n  async deleteStudent(studentId: string, groupId: string) {\r\n    return apiService.delete(`/student/${studentId}/${groupId}`);\r\n  }\r\n}\r\n\r\n// Export service instances\r\nexport const authService = new AuthService();\r\nexport const quizService = new QuizService();\r\nexport const questionService = new QuestionService();\r\nexport const groupService = new GroupService();\r\nexport const studentService = new StudentService(); \r\n","import { ReactNode } from \"react\";\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n}\r\nexport default function ErrorMessage({children}: Props) {\r\n  return (\r\n    <>\r\n      <div className=\"group\">\r\n        <i className=\"fa-solid fa-circle-exclamation text-red-300 p-2 \"></i>\r\n\r\n        <span className=\"hidden absolute group-hover:block w-auto bg-red-200 text-red-800 border border-red-500 px-2 py-1 rounded z-[1]\">\r\n          {children}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { ReactNode } from \"react\"\r\n\r\ninterface Prop{\r\n  children:ReactNode\r\n  type?: \"submit\" | \"button\" | \"reset\"\r\n  disabled?: boolean\r\n}\r\n\r\nexport default function AuthButton({children, type = \"submit\", disabled = false}:Prop) {\r\n  return (\r\n    <button\r\n    type={type}\r\n    disabled={disabled}\r\n    className=\"bg-slate-50 transition duration-100 hover:bg-gray-800  text-slate-950  hover:text-slate-50  rounded-lg px-4 py-2 mt-2 font-medium disabled:opacity-50 disabled:cursor-not-allowed\"\r\n  >\r\n    {children}\r\n    <i className=\"fa-solid fa-check ms-1 text-white p-1 rounded-full bg-black\"></i>\r\n  </button>\r\n  )\r\n}\r\n","import { useForm } from \"react-hook-form\";\r\nimport ErrorMessage from \"../../Shared/ErrorMessage/ErrorMessage\";\r\nimport AuthButton from \"../../Shared/AuthButton/AuthButton\";\r\n\r\nexport default function ChangePassword() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    getValues,\r\n  } = useForm();\r\n\r\n  function onSubmit(data: object) {\r\n    console.log(data);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"text-2xl  text-secondry\">Change password</h3>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"mt-12\">\r\n        <div className=\"password mt-2\">\r\n          <label htmlFor=\"password\" className=\"w-full ps-1 mb-1\">\r\n            Password\r\n          </label>\r\n          <div\r\n            className={`flex rounded-md border-3 ${\r\n              !errors.password ? \"border-white\" : \"border-red-500\"\r\n            }`}\r\n          >\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white \">\r\n              <i className=\"fa-solid fa-key\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"password\", {\r\n                required: \"field is required\",\r\n                minLength: {\r\n                  value: 8,\r\n                  message: \"Password should be at least 8 characters\",\r\n                },\r\n              })}\r\n              type=\"password\"\r\n              id=\"password\"\r\n              className=\"block px-2  flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Type your password\"\r\n            />\r\n            {errors.password && (\r\n              <ErrorMessage>{String(errors.password.message)}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"Confirm-Password mt-2\">\r\n          <label htmlFor=\"Confirm-Password\" className=\"w-full ps-1 mb-1\">\r\n            Confirm Password\r\n          </label>\r\n          <div\r\n            className={`flex rounded-md border-3 ${\r\n              !errors.password_new ? \"border-white\" : \"border-red-500\"\r\n            }`}\r\n          >\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white \">\r\n              <i className=\"fa-solid fa-key\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"password_new\", {\r\n                required: \"new password is required\",\r\n                minLength: {\r\n                  value: 8,\r\n                  message: \"new password should be greater than 8 digits\",\r\n                },\r\n                validate: (value) =>\r\n                  value == getValues(\"password\") &&\r\n                  \"new password and old password should not match \",\r\n              })}\r\n              type=\"password\"\r\n              id=\"Confirm-Password\"\r\n              className=\"block px-2  flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Type your confirm password\"\r\n            />\r\n            {errors.password_new && (\r\n              <ErrorMessage>{String(errors.password_new.message)}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"Confirm-Password mt-2\">\r\n          <label htmlFor=\"Confirm-Password\" className=\"w-full ps-1 mb-1\">\r\n            Confirm Password\r\n          </label>\r\n          <div\r\n            className={`flex rounded-md border-3 ${\r\n              !errors.confirmNewPassword ? \"border-white\" : \"border-red-500\"\r\n            }`}\r\n          >\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white \">\r\n              <i className=\"fa-solid fa-key\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"confirmNewPassword\", {\r\n                validate: (value) =>\r\n                  value === getValues(\"password_new\") ||\r\n                  \"passwords is mismatch\",\r\n              })}\r\n              type=\"password\"\r\n              id=\"Confirm-Password\"\r\n              className=\"block px-2  flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Type your confirm password\"\r\n            />\r\n            {errors.confirmNewPassword && (\r\n              <ErrorMessage>\r\n                {String(errors.confirmNewPassword.message)}\r\n              </ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <AuthButton>Change</AuthButton>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { authService } from '../services/api';\r\nimport { setUserData } from '../Redux/Slices/AuthSlice/AuthSlice';\r\nimport { LoadingState, ApiError } from '../types';\r\n\r\ninterface LoginCredentials {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\ninterface RegisterData {\r\n  first_name: string;\r\n  last_name: string;\r\n  email: string;\r\n  password: string;\r\n  role: string;\r\n}\r\n\r\ninterface ForgotPasswordData {\r\n  email: string;\r\n}\r\n\r\ninterface ResetPasswordData {\r\n  email: string;\r\n  seed: string;\r\n  password: string;\r\n}\r\n\r\ninterface ChangePasswordData {\r\n  oldPassword: string;\r\n  newPassword: string;\r\n}\r\n\r\nexport const useAuth = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  \r\n  const [loadingState, setLoadingState] = useState<LoadingState>('idle');\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const login = async (credentials: LoginCredentials) => {\r\n    setLoadingState('pending');\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await authService.login(credentials);\r\n      \r\n      dispatch(setUserData(response));\r\n      toast.success('Login successful!');\r\n      \r\n      // Navigate based on user role\r\n      if (response.profile?.role === 'Student') {\r\n        navigate('/student');\r\n      } else {\r\n        navigate('/dashboard');\r\n      }\r\n      \r\n      setLoadingState('succeeded');\r\n      return response;\r\n    } catch (error) {\r\n      const apiError = error as ApiError;\r\n      setError(apiError.message);\r\n      setLoadingState('failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (userData: RegisterData) => {\r\n    setLoadingState('pending');\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await authService.register(userData);\r\n      \r\n      dispatch(setUserData(response));\r\n      toast.success('Registration successful!');\r\n      \r\n      // Navigate based on user role\r\n      if (response.profile?.role === 'Student') {\r\n        navigate('/student');\r\n      } else {\r\n        navigate('/dashboard');\r\n      }\r\n      \r\n      setLoadingState('succeeded');\r\n      return response;\r\n    } catch (error) {\r\n      const apiError = error as ApiError;\r\n      setError(apiError.message);\r\n      setLoadingState('failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const forgotPassword = async (emailData: ForgotPasswordData) => {\r\n    setLoadingState('pending');\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await authService.forgotPassword(emailData);\r\n      \r\n      toast.success('Reset password email sent!');\r\n      navigate('/reset-password');\r\n      \r\n      setLoadingState('succeeded');\r\n      return response;\r\n    } catch (error) {\r\n      const apiError = error as ApiError;\r\n      setError(apiError.message);\r\n      setLoadingState('failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const resetPassword = async (resetData: ResetPasswordData) => {\r\n    setLoadingState('pending');\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await authService.resetPassword(resetData);\r\n      \r\n      toast.success('Password reset successful!');\r\n      navigate('/login');\r\n      \r\n      setLoadingState('succeeded');\r\n      return response;\r\n    } catch (error) {\r\n      const apiError = error as ApiError;\r\n      setError(apiError.message);\r\n      setLoadingState('failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const changePassword = async (passwordData: ChangePasswordData) => {\r\n    setLoadingState('pending');\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await authService.changePassword(passwordData);\r\n      \r\n      toast.success('Password changed successfully!');\r\n      \r\n      setLoadingState('succeeded');\r\n      return response;\r\n    } catch (error) {\r\n      const apiError = error as ApiError;\r\n      setError(apiError.message);\r\n      setLoadingState('failed');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  return {\r\n    login,\r\n    register,\r\n    forgotPassword,\r\n    resetPassword,\r\n    changePassword,\r\n    loading: loadingState === 'pending',\r\n    error,\r\n    isIdle: loadingState === 'idle',\r\n    isLoading: loadingState === 'pending',\r\n    isSuccess: loadingState === 'succeeded',\r\n    isError: loadingState === 'failed',\r\n  };\r\n}; \r\n","import { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ErrorMessage from \"../../Shared/ErrorMessage/ErrorMessage\";\r\nimport AuthButton from \"../../Shared/AuthButton/AuthButton\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport Loading from \"../../Shared/Loading/Loading\";\r\n\r\ninterface LoginFormData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport default function Login() {\r\n  const { login, isLoading } = useAuth();\r\n  \r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    setValue,\r\n  } = useForm<LoginFormData>();\r\n  \r\n  const onSubmit = async (data: LoginFormData) => {\r\n    try {\r\n      await login(data);\r\n    } catch (error) {\r\n      // Error is handled by useAuth hook\r\n    }\r\n  };\r\n\r\n  const fillDemoCredentials = (email: string, password: string) => {\r\n    setValue(\"email\", email);\r\n    setValue(\"password\", password);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"text-2xl  text-secondary\">\r\n        Continue your learning journey with QuizWiz!\r\n      </h3>\r\n\r\n      <div className=\"grid grid-cols-2 gap-2 md:grid-cols-3 my-3\">\r\n        <Link to=\"/\" className=\"signin\">\r\n          <div className=\"content text-8xl xl:text-6xl lg:text-6xl py-3 rounded-lg text-center bg-stone-700 border-4 border-secondary\">\r\n            <i className=\"fa-solid fa-user text-secondary\"></i>\r\n            <p className=\"text-base mt-2\">Sign in</p>\r\n          </div>\r\n        </Link>\r\n        <Link to=\"/register\" className=\"signup\">\r\n          <div className=\"content text-8xl xl:text-6xl lg:text-6xl py-3 bg-stone-700 rounded-lg text-center border-4 border-stone-700\">\r\n            <i className=\"fa-solid fa-user-plus  \"></i>\r\n            <p className=\"text-base mt-2\">Sign Up</p>\r\n          </div>\r\n        </Link>\r\n        <div className=\"signup w-1/2\"></div>\r\n      </div>\r\n\r\n      {/* Demo Credentials Section */}\r\n      <div className=\"bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20 rounded-lg p-4 mb-6 border border-blue-200 dark:border-blue-700\">\r\n        <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-3 flex items-center\">\r\n          <i className=\"fa-solid fa-flask text-blue-500 mr-2\"></i>\r\n          Try Demo Accounts\r\n        </h4>\r\n        <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\r\n          Click on any account below to automatically fill the login form and explore the platform.\r\n        </p>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n          {/* Instructor Demo Account */}\r\n          <button\r\n            onClick={() => fillDemoCredentials(\"instructor@demo.com\", \"12345678\")}\r\n            className=\"bg-white dark:bg-gray-800 rounded-lg p-3 border border-gray-200 dark:border-gray-600 hover:border-blue-300 dark:hover:border-blue-500 transition-all duration-200 hover:shadow-md\"\r\n          >\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                <div className=\"w-10 h-10 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center\">\r\n                  <i className=\"fa-solid fa-chalkboard-teacher text-blue-600 dark:text-blue-400\"></i>\r\n                </div>\r\n                <div className=\"text-left\">\r\n                  <p className=\"font-medium text-gray-900 dark:text-white text-sm\">Instructor</p>\r\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400\">instructor@demo.com</p>\r\n                </div>\r\n              </div>\r\n              <i className=\"fa-solid fa-arrow-right text-gray-400 text-sm\"></i>\r\n            </div>\r\n          </button>\r\n\r\n          {/* Student Demo Account */}\r\n          <button\r\n            onClick={() => fillDemoCredentials(\"student@demo.com\", \"12345678\")}\r\n            className=\"bg-white dark:bg-gray-800 rounded-lg p-3 border border-gray-200 dark:border-gray-600 hover:border-green-300 dark:hover:border-green-500 transition-all duration-200 hover:shadow-md\"\r\n          >\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                <div className=\"w-10 h-10 bg-green-100 dark:bg-green-900 rounded-full flex items-center justify-center\">\r\n                  <i className=\"fa-solid fa-user-graduate text-green-600 dark:text-green-400\"></i>\r\n                </div>\r\n                <div className=\"text-left\">\r\n                  <p className=\"font-medium text-gray-900 dark:text-white text-sm\">Student</p>\r\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400\">student@demo.com</p>\r\n                </div>\r\n              </div>\r\n              <i className=\"fa-solid fa-arrow-right text-gray-400 text-sm\"></i>\r\n            </div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"my-12\">\r\n        <div className=\"email mt-2\">\r\n          <label htmlFor=\"email\" className=\"w-full ps-1 mb-1 \">\r\n            Registered email address\r\n          </label>\r\n          <div\r\n            className={`flex rounded-md border-3 ${\r\n              !errors.email ? \"border-white\" : \"border-red-500\"\r\n            }`}\r\n          >\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white \">\r\n              <i className=\"fa-solid fa-envelope\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"email\", {\r\n                required: \"Email is required\",\r\n                pattern: {\r\n                  value: /^[A-Z0-9.]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                  message: \"Invalid email address\",\r\n                },\r\n              })}\r\n              type=\"text\"\r\n              id=\"email\"\r\n              className=\"block px-2  flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Type your email\"\r\n            />\r\n            {errors.email && (\r\n              <ErrorMessage>{String(errors.email.message)}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"password mt-2\">\r\n          <label htmlFor=\"password\" className=\"w-full ps-1 mb-1\">\r\n            Password\r\n          </label>\r\n          <div\r\n            className={`flex rounded-md border-3 ${\r\n              !errors.password ? \"border-white\" : \"border-red-500\"\r\n            }`}\r\n          >\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white \">\r\n              <i className=\"fa-solid fa-key\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"password\", {\r\n                required: \"field is required\",\r\n                minLength: {\r\n                  value: 8,\r\n                  message: \"Password should be at least 8 characters\",\r\n                },\r\n              })}\r\n              type=\"password\"\r\n              id=\"password\"\r\n              className=\"block px-2  flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Type your password\"\r\n            />\r\n            {errors.password && (\r\n              <ErrorMessage>{String(errors.password.message)}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex mt-3 mb-16 justify-between items-end\">\r\n          <AuthButton type=\"submit\" disabled={isLoading}>\r\n            {isLoading ? <Loading /> : \"Sign In\"}\r\n          </AuthButton>\r\n          <p>\r\n            Forgot password?{\" \"}\r\n            <Link className=\"text-secondary hover:underline\" to=\"/request-reset-password\">\r\n              click here\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ErrorMessage from \"../../Shared/ErrorMessage/ErrorMessage\";\r\nimport AuthButton from \"../../Shared/AuthButton/AuthButton\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport Loading from \"../../Shared/Loading/Loading\";\r\n\r\ninterface RegisterFormData {\r\n  first_name: string;\r\n  last_name: string;\r\n  email: string;\r\n  password: string;\r\n  role: string;\r\n}\r\n\r\nexport default function Register() {\r\n  const { register: registerUser, isLoading } = useAuth();\r\n  \r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<RegisterFormData>();\r\n\r\n  const onSubmit = async (data: RegisterFormData) => {\r\n    try {\r\n      await registerUser(data);\r\n    } catch (error) {\r\n      // Error is handled by useAuth hook\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"text-2xl text-secondry\">\r\n        Create your account and start your learning journey with QuizWiz!\r\n      </h3>\r\n\r\n      <div className=\"grid grid-cols-2 gap-2 md:grid-cols-3 my-3\">\r\n        <Link to=\"/login\" className=\"signin\">\r\n          <div className=\"content text-8xl xl:text-6xl lg:text-6xl py-3 bg-stone-700 rounded-lg text-center border-4 border-stone-700\">\r\n            <i className=\"fa-solid fa-user\"></i>\r\n            <p className=\"text-base mt-2\">Sign in</p>\r\n          </div>\r\n        </Link>\r\n        <Link to=\"/register\" className=\"signup\">\r\n          <div className=\"content text-8xl xl:text-6xl lg:text-6xl py-3 rounded-lg text-center bg-stone-700 border-4 border-secondry\">\r\n            <i className=\"fa-solid fa-user-plus text-secondry\"></i>\r\n            <p className=\"text-base mt-2\">Sign Up</p>\r\n          </div>\r\n        </Link>\r\n        <div className=\"signup w-1/2\"></div>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"my-12 space-y-4\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          {/* First Name */}\r\n          <div>\r\n            <label htmlFor=\"first_name\" className=\"w-full ps-1 mb-1\">\r\n              First Name\r\n            </label>\r\n            <div className={`flex rounded-md border-3 ${!errors.first_name ? \"border-white\" : \"border-red-500\"}`}>\r\n              <span className=\"flex select-none items-center me-3 pl-3 text-white\">\r\n                <i className=\"fa-solid fa-user\"></i>\r\n              </span>\r\n              <input\r\n                {...register(\"first_name\", {\r\n                  required: \"First name is required\",\r\n                  minLength: {\r\n                    value: 2,\r\n                    message: \"First name must be at least 2 characters\",\r\n                  },\r\n                })}\r\n                type=\"text\"\r\n                id=\"first_name\"\r\n                className=\"block px-2 flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n                placeholder=\"Enter your first name\"\r\n              />\r\n              {errors.first_name && (\r\n                <ErrorMessage>{errors.first_name.message}</ErrorMessage>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Last Name */}\r\n          <div>\r\n            <label htmlFor=\"last_name\" className=\"w-full ps-1 mb-1\">\r\n              Last Name\r\n            </label>\r\n            <div className={`flex rounded-md border-3 ${!errors.last_name ? \"border-white\" : \"border-red-500\"}`}>\r\n              <span className=\"flex select-none items-center me-3 pl-3 text-white\">\r\n                <i className=\"fa-solid fa-user\"></i>\r\n              </span>\r\n              <input\r\n                {...register(\"last_name\", {\r\n                  required: \"Last name is required\",\r\n                  minLength: {\r\n                    value: 2,\r\n                    message: \"Last name must be at least 2 characters\",\r\n                  },\r\n                })}\r\n                type=\"text\"\r\n                id=\"last_name\"\r\n                className=\"block px-2 flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n                placeholder=\"Enter your last name\"\r\n              />\r\n              {errors.last_name && (\r\n                <ErrorMessage>{errors.last_name.message}</ErrorMessage>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Email */}\r\n        <div>\r\n          <label htmlFor=\"email\" className=\"w-full ps-1 mb-1\">\r\n            Email Address\r\n          </label>\r\n          <div className={`flex rounded-md border-3 ${!errors.email ? \"border-white\" : \"border-red-500\"}`}>\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white\">\r\n              <i className=\"fa-solid fa-envelope\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"email\", {\r\n                required: \"Email is required\",\r\n                pattern: {\r\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                  message: \"Invalid email address\",\r\n                },\r\n              })}\r\n              type=\"email\"\r\n              id=\"email\"\r\n              className=\"block px-2 flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Enter your email\"\r\n            />\r\n            {errors.email && (\r\n              <ErrorMessage>{errors.email.message}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Password */}\r\n        <div>\r\n          <label htmlFor=\"password\" className=\"w-full ps-1 mb-1\">\r\n            Password\r\n          </label>\r\n          <div className={`flex rounded-md border-3 ${!errors.password ? \"border-white\" : \"border-red-500\"}`}>\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white\">\r\n              <i className=\"fa-solid fa-key\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"password\", {\r\n                required: \"Password is required\",\r\n                minLength: {\r\n                  value: 8,\r\n                  message: \"Password must be at least 8 characters\",\r\n                },\r\n                pattern: {\r\n                  value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,\r\n                  message: \"Password must contain at least one uppercase letter, one lowercase letter, and one number\",\r\n                },\r\n              })}\r\n              type=\"password\"\r\n              id=\"password\"\r\n              className=\"block px-2 flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Enter your password\"\r\n            />\r\n            {errors.password && (\r\n              <ErrorMessage>{errors.password.message}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Role */}\r\n        <div>\r\n          <label htmlFor=\"role\" className=\"w-full ps-1 mb-1\">\r\n            Role\r\n          </label>\r\n          <div className={`flex rounded-md border-3 ${!errors.role ? \"border-white\" : \"border-red-500\"}`}>\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white\">\r\n              <i className=\"fa-solid fa-users\"></i>\r\n            </span>\r\n            <select\r\n              {...register(\"role\", {\r\n                required: \"Role is required\",\r\n              })}\r\n              id=\"role\"\r\n              className=\"block px-2 flex-1 border-0 bg-transparent py-1.5 pl-1 text-white focus:ring-0 sm:text-sm sm:leading-6\"\r\n            >\r\n              <option value=\"\" className=\"text-gray-900\">Select your role</option>\r\n              <option value=\"Student\" className=\"text-gray-900\">Student</option>\r\n              <option value=\"Instructor\" className=\"text-gray-900\">Instructor</option>\r\n            </select>\r\n            {errors.role && (\r\n              <ErrorMessage>{errors.role.message}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex mt-6 mb-16 justify-between items-center\">\r\n          <AuthButton type=\"submit\" disabled={isLoading}>\r\n            {isLoading ? <Loading /> : \"Sign Up\"}\r\n          </AuthButton>\r\n          <p>\r\n            Already have an account?{\" \"}\r\n            <Link className=\"text-secondry hover:underline\" to=\"/login\">\r\n              Sign in here\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUserData } from \"../Redux/Slices/AuthSlice/AuthSlice\";\r\n\r\nconst baseAuthUrl = `https://upskilling-egypt.com:3005/api/auth`;\r\n\r\nconst useCustomFetch = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const customFetch = (pathUrl: string, data: object, navigateTo: string) => {\r\n    setLoading(true);\r\n    axios\r\n      .post(`${baseAuthUrl}/${pathUrl}`, data)\r\n      .then((res) => {\r\n        dispatch(setUserData(res.data.data));\r\n        toast.success(res.data.message);\r\n        if (res.data.data?.profile?.role==\"Student\") {\r\n          return navigate(`/student`)\r\n        }\r\n        return navigate(navigateTo);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.response?.data?.message || \"Invalid data\");\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return { customFetch, loading };\r\n};\r\n\r\nexport default useCustomFetch;\r\n","import { Link } from \"react-router-dom\";\r\nimport ErrorMessage from \"../../Shared/ErrorMessage/ErrorMessage\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport AuthButton from \"../../Shared/AuthButton/AuthButton\";\r\nimport useCustomFetch from \"../../ApiUtils/AuthApiUtils\";\r\nimport Loading from \"../../Shared/Loading/Loading\";\r\n\r\nexport default function RequsetResetPass() {\r\n  const {customFetch,loading}=useCustomFetch();\r\n  \r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  function onSubmit(data: object) {\r\n    customFetch(\"/forgot-password\",data,\"/reset-password\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"text-2xl  text-secondry\">Forgot password</h3>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"my-10\">\r\n        <div className=\"email mt-2\">\r\n          <label htmlFor=\"email\" className=\"w-full ps-1 mb-1\">\r\n            Your email address\r\n          </label>\r\n          <div\r\n            className={`flex rounded-md border-3 ${\r\n              !errors.email ? \"border-white\" : \"border-red-500\"\r\n            }`}\r\n          >\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white \">\r\n              <i className=\"fa-solid fa-envelope\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"email\", {\r\n                required: \"Email is required\",\r\n                pattern: {\r\n                  value: /^[A-Z0-9.]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                  message: \"Invalid email address\",\r\n                },\r\n              })}\r\n              type=\"text\"\r\n              id=\"email\"\r\n              className=\"block px-2  flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Type your email\"\r\n            />\r\n            {errors.email && (\r\n              <ErrorMessage>{String(errors.email.message)}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <AuthButton>{loading?<Loading/>:\"Send email\"}</AuthButton>\r\n\r\n        <div className=\"my-12\">\r\n          <p className=\"text-end\">\r\n            Login?\r\n            <Link className=\"text-secondry py-24 \" to=\"/\">\r\n              click here\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { useForm } from \"react-hook-form\";\r\nimport ErrorMessage from \"../../Shared/ErrorMessage/ErrorMessage\";\r\nimport AuthButton from \"../../Shared/AuthButton/AuthButton\";\r\nimport useCustomFetch from \"../../ApiUtils/AuthApiUtils\";\r\nimport Loading from \"../../Shared/Loading/Loading\";\r\nimport {ResetFormInterface} from './ResetInterface.ts'\r\n\r\nexport default function RestPassword() {\r\n  const {customFetch,loading}=useCustomFetch();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    getValues,\r\n  } = useForm();\r\n\r\n  function onSubmit(data: ResetFormInterface) {\r\n    //forget password api do not send email\r\n    delete data.confirm_password;\r\n    customFetch(\"/reset-password\",data,\"/\");\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"text-2xl  text-secondry\">Reset password</h3>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"mt-12\">\r\n        <div className=\"email mt-2\">\r\n          <label htmlFor=\"email\" className=\"w-full ps-1 mb-1\">\r\n            Your email address\r\n          </label>\r\n          <div\r\n            className={`flex rounded-md border-3 ${\r\n              !errors.email ? \"border-white\" : \"border-red-500\"\r\n            }`}\r\n          >\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white \">\r\n              <i className=\"fa-solid fa-envelope\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"email\", {\r\n                required: \"Email is required\",\r\n                pattern: {\r\n                  value: /^[A-Z0-9.]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                  message: \"Invalid email address\",\r\n                },\r\n              })}\r\n              type=\"text\"\r\n              id=\"email\"\r\n              className=\"block px-2  flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Type your email\"\r\n            />\r\n            {errors.email && (\r\n              <ErrorMessage>{String(errors.email.message)}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"OTP mt-2\">\r\n          <label htmlFor=\"OTP\" className=\"w-full ps-1 mb-1\">\r\n            OTP\r\n          </label>\r\n          <div\r\n            className={`flex rounded-md border-3 ${\r\n              !errors.otp ? \"border-white\" : \"border-red-500\"\r\n            }`}\r\n          >\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white \">\r\n              <i className=\"fa-solid fa-envelope\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"otp\", {\r\n                required: \"otp is required\",\r\n                minLength: { value: 6, message: \"otp should be 6 digits\" },\r\n                maxLength: { value: 6, message: \"otp should be 6 digits\" },\r\n              })}\r\n              type=\"text\"\r\n              id=\"OTP\"\r\n              className=\"block px-2  flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Choose your otp\"\r\n            />\r\n            {errors.otp && (\r\n              <ErrorMessage>{String(errors.otp.message)}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"password mt-2\">\r\n          <label htmlFor=\"password\" className=\"w-full ps-1 mb-1\">\r\n            Password\r\n          </label>\r\n          <div\r\n            className={`flex rounded-md border-3 ${\r\n              !errors.password ? \"border-white\" : \"border-red-500\"\r\n            }`}\r\n          >\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white \">\r\n              <i className=\"fa-solid fa-key\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"password\", {\r\n                required: \"field is required\",\r\n                minLength: {\r\n                  value: 8,\r\n                  message: \"Password should be at least 8 characters\",\r\n                },\r\n              })}\r\n              type=\"password\"\r\n              id=\"password\"\r\n              className=\"block px-2  flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Type your password\"\r\n            />\r\n            {errors.password && (\r\n              <ErrorMessage>{String(errors.password.message)}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"Confirm-Password mt-2\">\r\n          <label htmlFor=\"Confirm-Password\" className=\"w-full ps-1 mb-1\">\r\n            Confirm Password\r\n          </label>\r\n          <div\r\n            className={`flex rounded-md border-3 ${\r\n              !errors.confirm_password ? \"border-white\" : \"border-red-500\"\r\n            }`}\r\n          >\r\n            <span className=\"flex select-none items-center me-3 pl-3 text-white \">\r\n              <i className=\"fa-solid fa-key\"></i>\r\n            </span>\r\n            <input\r\n              {...register(\"confirm_password\", {\r\n                validate: (value) => {\r\n                  return (\r\n                    value == getValues(\"password\") ||\r\n                    \"Confirm Password mismatch password\"\r\n                  );\r\n                },\r\n              })}\r\n              type=\"password\"\r\n              id=\"Confirm-Password\"\r\n              className=\"block px-2  flex-1 border-0 bg-transparent py-1.5 pl-1 text-white placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6\"\r\n              placeholder=\"Type your confirm password\"\r\n            />\r\n            {errors.confirm_password && (\r\n              <ErrorMessage>{String(errors.confirm_password.message)}</ErrorMessage>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <AuthButton>{loading?<Loading/>:\"Reset\"}</AuthButton>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n"],"names":["f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","Loading","className","authSlice","createSlice","name","initialState","userData","Cookies","get","JSON","parse","String","headers","Authorization","accessToken","isAuthed","reducers","setUserData","state","action","payload","_a","set","stringify","logOut","compat","remove","authReducer","reducer","actions","normalizeQuizData","quiz","normalizedQuiz","schadule","schedule","normalizeQuizArray","quizzes","map","apiClient","axios","create","baseURL","timeout","interceptors","request","use","config","parsedData","error","Promise","reject","response","apiError","message","status","data","_b","_c","errorData","_d","window","location","href","ApiService","endpoint","finalData","Array","isArray","this","handleError","post","put","delete","B","apiService","authService","login","credentials","register","forgotPassword","email","resetPassword","changePassword","quizService","getIncomingQuizzes","getCompletedQuizzes","createQuiz","quizData","updateQuiz","id","deleteQuiz","joinQuiz","code","getQuizQuestions","quizId","submitQuiz","answers","getQuizResults","ErrorMessage","children","jsxRuntimeExports","Fragment","AuthButton","disabled","handleSubmit","formState","errors","getValues","useForm","onSubmit","htmlFor","password","required","minLength","value","placeholder","password_new","validate","confirmNewPassword","useAuth","dispatch","useDispatch","navigate","useNavigate","loadingState","setLoadingState","useState","setError","async","toast","success","profile","role","emailData","resetData","passwordData","loading","isIdle","isLoading","isSuccess","isError","setValue","fillDemoCredentials","Link","to","onClick","pattern","registerUser","first_name","last_name","useCustomFetch$1","setLoading","customFetch","pathUrl","navigateTo","then","res","catch","finally","useCustomFetch","confirm_password","otp","maxLength"],"mappings":"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","x_google_ignoreList":[0,1]}