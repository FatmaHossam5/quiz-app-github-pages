{"version":3,"file":"quiz-components-odb_rBtb.js","sources":["../../node_modules/toggle-selection/index.js","../../node_modules/copy-to-clipboard/index.js","../../src/Components/Quizzes/CodeModal/CodeModal.tsx","../../src/ApiUtils/ApiUtils.ts","../../src/Components/Quizzes/QuizModal/QuizModal.tsx","../../src/Shared/Modal/Modal.tsx","../../src/Components/Quizzes/QuizCard/QuizCard.tsx","../../src/hooks/useMemoizedData.ts","../../src/Components/Quizzes/IncomingQuizzes/IncomingQuizzes.tsx","../../src/Components/Questions/AddQuestionModal.tsx","../../src/Components/Questions/DeleteQuestionModal.tsx","../../src/Components/Questions/UpdateQuestionModal.tsx","../../src/Components/Questions/Questions.tsx","../../src/Components/Quizzes/CompletedQuizzes/CompletedQuizzes.tsx","../../src/Components/Quizzes/Quizzes.tsx","../../src/Components/Results/Results.tsx"],"sourcesContent":["\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"âŒ˜\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // avoid screen readers from reading out loud the text\n    mark.ariaHidden = \"true\"\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","import copy from \"copy-to-clipboard\";\r\nimport { useRef, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\ninterface CodeModal {\r\n  handleClose: () => void;\r\n  code: string;\r\n}\r\n\r\nexport default function CodeModal({ handleClose, code }: CodeModal) {\r\n  const codeRef = useRef<HTMLInputElement>(null);\r\n  const [isCopied, setIsCopied] = useState(false);\r\n\r\n  const copyToClipboard = () => {\r\n    const copyText = codeRef.current?.value;\r\n    const isCopy = copy(copyText || \"\");\r\n    if (isCopy) {\r\n      setIsCopied(true);\r\n      toast.success(\"Quiz code copied to clipboard!\");\r\n      \r\n      // Reset copy state after 2 seconds\r\n      setTimeout(() => setIsCopied(false), 2000);\r\n    } else {\r\n      toast.error(\"Failed to copy code\");\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event: React.KeyboardEvent) => {\r\n    if (event.key === 'Enter' || event.key === ' ') {\r\n      event.preventDefault();\r\n      copyToClipboard();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"px-4 sm:px-6 lg:px-8 py-6\">\r\n      <div className=\"flex flex-col items-center justify-center min-h-[300px] sm:min-h-[400px]\">\r\n        <div className=\"text-center max-w-md w-full\">\r\n          {/* Success Icon with improved styling */}\r\n          <div className=\"mb-6\">\r\n            <div className=\"inline-flex items-center justify-center w-16 h-16 sm:w-20 sm:h-20 bg-green-100 rounded-full mb-4\">\r\n              <i className=\"fa-solid fa-check text-2xl sm:text-3xl text-green-600\"></i>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Success Message */}\r\n          <h2 className=\"text-xl sm:text-2xl font-bold text-gray-900 mb-2\">\r\n            Quiz Created Successfully!\r\n          </h2>\r\n          <p className=\"text-sm sm:text-base text-gray-600 mb-8\">\r\n            Share this code with your students to join the quiz\r\n          </p>\r\n\r\n          {/* Code Section with improved layout */}\r\n          <div className=\"mb-8\">\r\n            <label htmlFor=\"quiz-code\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Quiz Code\r\n            </label>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <div className=\"flex-1 relative\">\r\n                <input\r\n                  id=\"quiz-code\"\r\n                  ref={codeRef}\r\n                  defaultValue={code}\r\n                  readOnly\r\n                  className=\"w-full px-4 py-3 text-center text-lg sm:text-xl font-mono font-bold bg-gray-50 border-2 border-gray-200 rounded-lg focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200\"\r\n                  aria-label=\"Quiz code\"\r\n                />\r\n                <div className=\"absolute inset-y-0 right-3 flex items-center\">\r\n                  <span className=\"text-xs text-gray-400 bg-gray-50 px-2 py-1 rounded\">\r\n                    READ-ONLY\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Copy Button with improved UX */}\r\n              <button\r\n                onClick={copyToClipboard}\r\n                onKeyDown={handleKeyDown}\r\n                className={`flex-shrink-0 px-4 py-3 rounded-lg font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 ${\r\n                  isCopied\r\n                    ? 'bg-green-500 text-white focus:ring-green-500'\r\n                    : 'bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500'\r\n                }`}\r\n                aria-label={isCopied ? \"Code copied!\" : \"Copy quiz code to clipboard\"}\r\n                title={isCopied ? \"Code copied!\" : \"Copy to clipboard\"}\r\n              >\r\n                <i className={`fa-solid ${isCopied ? 'fa-check' : 'fa-copy'} text-sm`}></i>\r\n                <span className=\"ml-2 text-sm hidden sm:inline\">\r\n                  {isCopied ? 'Copied!' : 'Copy'}\r\n                </span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Action Buttons */}\r\n          <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4\">\r\n            <button\r\n              onClick={handleClose}\r\n              className=\"flex-1 px-6 py-3 bg-gray-600 text-white font-medium rounded-lg hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 transition-all duration-200\"\r\n            >\r\n              Close\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                copyToClipboard();\r\n                handleClose();\r\n              }}\r\n              className=\"flex-1 px-6 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all duration-200\"\r\n            >\r\n              Copy & Close\r\n            </button>\r\n          </div>\r\n\r\n          {/* Additional Help Text */}\r\n          <p className=\"text-xs text-gray-500 mt-4\">\r\n            Students can enter this code on the quiz page to join\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Cookies } from \"typescript-cookie\";\r\n\r\ninterface GetDataParameter {\r\n  path: string;\r\n  headers: object;\r\n  setState?: React.Dispatch<React.SetStateAction<unknown>>;\r\n}\r\n\r\nexport const baseUrl = \"https://upskilling-egypt.com:3005/api\";\r\n\r\nexport const getData = ({\r\n  path,\r\n  headers,\r\n  setState,\r\n}: GetDataParameter): void => {\r\n  axios\r\n    .get(`${baseUrl}/${path}`, headers)\r\n    .then((response) => {\r\n      setState ? setState(response.data) : console.log(response.data);\r\n    })\r\n    .catch((error) => {\r\n      toast.error(error.response?.data?.message || \"Invalid Data\");\r\n    });\r\n};\r\n\r\nexport const fetchDataForSlice = (path: string, fn: (data: unknown) => void): void => {\r\n  axios\r\n    .get(`${baseUrl}/${path}`, {\r\n      headers: {\r\n        Authorization: Cookies.get(\"userData\")\r\n          ? `Bearer ${JSON.parse(String(Cookies.get(\"userData\"))).accessToken}`\r\n          : null,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      fn(response.data);\r\n    })\r\n    .catch((error) => {\r\n      console.error(`Error fetching ${path}:`, error);\r\n      toast.error(error.response?.data?.message || \"Invalid Data\");\r\n      fn([]); // Set empty array to stop loading state\r\n    });\r\n};\r\n\r\n\r\n\r\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { baseUrl } from \"../../../ApiUtils/ApiUtils\";\nimport { RootState, Group } from \"../../../types\";\nimport Loading from \"../../../Shared/Loading/Loading\";\nimport { quiz } from \"../SpecificQuiz/SpecificQuiz\";\nimport \"./QuizModal.css\";\n\ninterface QuizModalProp {\n  quiz?: quiz;\n  handleClose?: () => void;\n  setModalState: React.Dispatch<React.SetStateAction<string>>;\n  setCode: React.Dispatch<React.SetStateAction<string>>;\n}\n\ninterface formData {\n  title?: string;\n  description?: string;\n  group?: string;\n  questions_number?: number;\n  difficulty?: string;\n  type?: string;\n  date?: string;\n  time?: string;\n  duration?: string;\n  schedule?: string;\n  schadule?: string;\n  score_per_question?: string;\n  __v?: string;\n  updatedAt?: string;\n  status?: string;\n  questions?: string;\n  instructor?: string;\n  createdAt?: string;\n  code?: string;\n  _id?: string;\n}\n\nexport default function QuizModal({ setModalState, setCode, quiz, handleClose }: QuizModalProp) {\n  const { groups } = useSelector((state: RootState) => state.groups);\n  const { headers } = useSelector((state: RootState) => state.userData);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const durationAndQuestionNumber: number[] = [\n    1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60,\n  ];\n  const difficulty: string[] = [\"easy\", \"medium\", \"hard\"];\n  const score_per_question: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  const category: string[] = [\n    \"FE\",\n    \"BE\",\n    \"Mobile application\",\n    \"Flutter\",\n    \"AI\",\n  ];\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    setValue,\n  } = useForm<formData>();\n\n  useEffect(() => {\n    if (quiz) {\n      for (const key in quiz) {\n        if (Object.prototype.hasOwnProperty.call(quiz, key)) {\n          const value = (quiz as unknown as Record<string, unknown>)[key];\n          if (typeof value === \"string\" || typeof value === \"number\") {\n            setValue(key as keyof formData, value);\n          }\n        }\n      }\n    }\n  }, [quiz, setValue]);\n\n  const addQuiz = (data: formData) => {\n    data.schadule = `${data.date}T${data.time}`;\n    delete data.time;\n    delete data.date;\n    delete data.schedule;\n    postData(data);\n  };\n\n  const postData = (data: formData) => {\n    setIsLoading(true);\n    axios\n      .post(`${baseUrl}/quiz`, data, headers)\n      .then((res) => {\n        toast.success(res.data.message);\n        setCode(res.data.data.code);\n        setModalState(\"quiz-code\");\n      })\n      .catch((err) => {\n        toast.error(String(err.response.data.message));\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const updateQuiz = (data: formData) => {\n    setIsLoading(true);\n    delete data._id;\n    delete data.__v;\n    delete data.updatedAt;\n    delete data.time;\n    delete data.status;\n    delete data.questions;\n    delete data.instructor;\n    delete data.date;\n    delete data.createdAt;\n    delete data.code;\n    delete data.questions_number;\n    delete data.score_per_question;\n    delete data.difficulty;\n    delete data.type;\n\n    updateData(data);\n  };\n\n  const updateData = (data: formData) => {\n    axios\n      .put(`${baseUrl}/quiz/${quiz?._id}`, data, headers)\n      .then((res) => {\n        toast.success(res.data.message);\n        setCode(res.data.data.code);\n        setModalState(\"quiz-code\");\n      })\n      .catch((err) => {\n        toast.error(String(err.response.data.message));\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 mx-auto mb-4\">\n            <Loading />\n          </div>\n          <p className=\"text-gray-600 font-medium\">\n            {!quiz ? \"Creating quiz...\" : \"Updating quiz...\"}\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!groups) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 mx-auto mb-4\">\n            <Loading />\n          </div>\n          <p className=\"text-gray-600 font-medium\">Loading groups...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 max-h-[80vh] overflow-y-auto\">\n      <form\n        onSubmit={!quiz ? handleSubmit(addQuiz) : handleSubmit(updateQuiz)}\n        id=\"quizModal\"\n        className=\"space-y-6\"\n      >\n\n\n\n\n        {/* Basic Information Section */}\n        <div className=\"space-y-4\">\n          <h4 className=\"text-lg font-medium text-gray-900 flex items-center\">\n            <i className=\"fa-solid fa-info-circle text-gray-500 mr-2\"></i>\n            Basic Information\n          </h4>\n          \n          {/* Title */}\n          <div className=\"space-y-2\">\n            <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700\">\n              Quiz Title <span className=\"text-red-500\">*</span>\n            </label>\n            <input\n              {...register(\"title\", { required: \"Quiz title is required\" })}\n              id=\"title\"\n              type=\"text\"\n              placeholder=\"Enter quiz title\"\n              className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 ${\n                errors.title ? \"border-red-300\" : \"border-gray-300\"\n              }`}\n            />\n            {errors.title && (\n              <p className=\"text-red-600 text-sm flex items-center\">\n                <i className=\"fa-solid fa-exclamation-circle mr-1\"></i>\n                {String(errors.title?.message)}\n              </p>\n            )}\n          </div>\n\n          {/* Description */}\n          <div className=\"space-y-2\">\n            <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700\">\n              Description <span className=\"text-red-500\">*</span>\n            </label>\n            <textarea\n              {...register(\"description\", { required: \"Description is required\" })}\n              id=\"description\"\n              rows={3}\n              placeholder=\"Enter quiz description\"\n              className={`w-full px-4 py-3 border rounded-lg resize-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 ${\n                errors.description ? \"border-red-300\" : \"border-gray-300\"\n              }`}\n            />\n            {errors.description && (\n              <p className=\"text-red-600 text-sm flex items-center\">\n                <i className=\"fa-solid fa-exclamation-circle mr-1\"></i>\n                {String(errors.description?.message)}\n              </p>\n            )}\n          </div>\n        </div>\n\n        {/* Quiz Configuration Section */}\n        <div className=\"space-y-4\">\n          <h4 className=\"text-lg font-medium text-gray-900 flex items-center\">\n            <i className=\"fa-solid fa-cog text-gray-500 mr-2\"></i>\n            Quiz Configuration\n          </h4>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            {/* Duration */}\n            <div className=\"space-y-2\">\n              <label htmlFor=\"duration\" className=\"block text-sm font-medium text-gray-700\">\n                Duration (minutes) <span className=\"text-red-500\">*</span>\n              </label>\n              <select\n                {...register(\"duration\", { required: \"Duration is required\" })}\n                id=\"duration\"\n                className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 ${\n                  errors.duration ? \"border-red-300\" : \"border-gray-300\"\n                }`}\n              >\n                <option value=\"\">Select duration</option>\n                {durationAndQuestionNumber.map((duration) => (\n                  <option key={duration} value={duration}>\n                    {duration} minutes\n                  </option>\n                ))}\n              </select>\n              {errors.duration && (\n                <p className=\"text-red-600 text-sm flex items-center\">\n                  <i className=\"fa-solid fa-exclamation-circle mr-1\"></i>\n                  {String(errors.duration?.message)}\n                </p>\n              )}\n            </div>\n\n            {/* Number of Questions */}\n            <div className=\"space-y-2\">\n              <label htmlFor=\"questions_number\" className=\"block text-sm font-medium text-gray-700\">\n                Number of Questions <span className=\"text-red-500\">*</span>\n              </label>\n              <select\n                {...register(\"questions_number\", {\n                  required: \"Number of questions is required\",\n                  valueAsNumber: true,\n                })}\n                id=\"questions_number\"\n                className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 ${\n                  errors.questions_number ? \"border-red-300\" : \"border-gray-300\"\n                }`}\n              >\n                <option value=\"\">Select number</option>\n                {durationAndQuestionNumber.map((number) => (\n                  <option key={number} value={number}>\n                    {number} questions\n                  </option>\n                ))}\n              </select>\n              {errors.questions_number && (\n                <p className=\"text-red-600 text-sm flex items-center\">\n                  <i className=\"fa-solid fa-exclamation-circle mr-1\"></i>\n                  {String(errors.questions_number?.message)}\n                </p>\n              )}\n            </div>\n\n            {/* Score per Question */}\n            <div className=\"space-y-2\">\n              <label htmlFor=\"score_per_question\" className=\"block text-sm font-medium text-gray-700\">\n                Score per Question <span className=\"text-red-500\">*</span>\n              </label>\n              <select\n                {...register(\"score_per_question\", { required: \"Score per question is required\" })}\n                id=\"score_per_question\"\n                className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 ${\n                  errors.score_per_question ? \"border-red-300\" : \"border-gray-300\"\n                }`}\n              >\n                <option value=\"\">Select score</option>\n                {score_per_question.map((score) => (\n                  <option key={score} value={score}>\n                    {score} point{score > 1 ? \"s\" : \"\"}\n                  </option>\n                ))}\n              </select>\n              {errors.score_per_question && (\n                <p className=\"text-red-600 text-sm flex items-center\">\n                  <i className=\"fa-solid fa-exclamation-circle mr-1\"></i>\n                  {String(errors.score_per_question?.message)}\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Schedule Section */}\n        <div className=\"space-y-4\">\n          <h4 className=\"text-lg font-medium text-gray-900 flex items-center\">\n            <i className=\"fa-solid fa-calendar-alt text-gray-500 mr-2\"></i>\n            Schedule\n          </h4>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {/* Date */}\n            <div className=\"space-y-2\">\n              <label htmlFor=\"date\" className=\"block text-sm font-medium text-gray-700\">\n                Date <span className=\"text-red-500\">*</span>\n              </label>\n              <input\n                {...register(\"date\", { required: \"Date is required\" })}\n                id=\"date\"\n                type=\"date\"\n                className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 ${\n                  errors.date ? \"border-red-300\" : \"border-gray-300\"\n                }`}\n              />\n              {errors.date && (\n                <p className=\"text-red-600 text-sm flex items-center\">\n                  <i className=\"fa-solid fa-exclamation-circle mr-1\"></i>\n                  {String(errors.date?.message)}\n                </p>\n              )}\n            </div>\n\n            {/* Time */}\n            <div className=\"space-y-2\">\n              <label htmlFor=\"time\" className=\"block text-sm font-medium text-gray-700\">\n                Time <span className=\"text-red-500\">*</span>\n              </label>\n              <input\n                {...register(\"time\", { required: \"Time is required\" })}\n                id=\"time\"\n                type=\"time\"\n                className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 ${\n                  errors.time ? \"border-red-300\" : \"border-gray-300\"\n                }`}\n              />\n              {errors.time && (\n                <p className=\"text-red-600 text-sm flex items-center\">\n                  <i className=\"fa-solid fa-exclamation-circle mr-1\"></i>\n                  {String(errors.time?.message)}\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Quiz Settings Section */}\n        <div className=\"space-y-4\">\n          <h4 className=\"text-lg font-medium text-gray-900 flex items-center\">\n            <i className=\"fa-solid fa-sliders-h text-gray-500 mr-2\"></i>\n            Quiz Settings\n          </h4>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            {/* Difficulty */}\n            <div className=\"space-y-2\">\n              <label htmlFor=\"difficulty\" className=\"block text-sm font-medium text-gray-700\">\n                Difficulty Level <span className=\"text-red-500\">*</span>\n              </label>\n              <select\n                {...register(\"difficulty\", { required: \"Difficulty is required\" })}\n                id=\"difficulty\"\n                className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 ${\n                  errors.difficulty ? \"border-red-300\" : \"border-gray-300\"\n                }`}\n              >\n                <option value=\"\">Select difficulty</option>\n                {difficulty.map((level) => (\n                  <option key={level} value={level}>\n                    {level.charAt(0).toUpperCase() + level.slice(1)}\n                  </option>\n                ))}\n              </select>\n              {errors.difficulty && (\n                <p className=\"text-red-600 text-sm flex items-center\">\n                  <i className=\"fa-solid fa-exclamation-circle mr-1\"></i>\n                  {String(errors.difficulty?.message)}\n                </p>\n              )}\n            </div>\n\n            {/* Category */}\n            <div className=\"space-y-2\">\n              <label htmlFor=\"type\" className=\"block text-sm font-medium text-gray-700\">\n                Category <span className=\"text-red-500\">*</span>\n              </label>\n              <select\n                {...register(\"type\", { required: \"Category is required\" })}\n                id=\"type\"\n                className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 ${\n                  errors.type ? \"border-red-300\" : \"border-gray-300\"\n                }`}\n              >\n                <option value=\"\">Select category</option>\n                {category.map((cat) => (\n                  <option key={cat} value={cat}>\n                    {cat}\n                  </option>\n                ))}\n              </select>\n              {errors.type && (\n                <p className=\"text-red-600 text-sm flex items-center\">\n                  <i className=\"fa-solid fa-exclamation-circle mr-1\"></i>\n                  {String(errors.type?.message)}\n                </p>\n              )}\n            </div>\n\n            {/* Group */}\n            <div className=\"space-y-2\">\n              <label htmlFor=\"group\" className=\"block text-sm font-medium text-gray-700\">\n                Group <span className=\"text-red-500\">*</span>\n              </label>\n              <select\n                {...register(\"group\", { required: \"Group is required\" })}\n                id=\"group\"\n                className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 ${\n                  errors.group ? \"border-red-300\" : \"border-gray-300\"\n                }`}\n              >\n                <option value=\"\">Select group</option>\n                {groups?.map((group: Group) => (\n                  <option key={group._id} value={String(group._id)}>\n                    {group.name}\n                  </option>\n                ))}\n              </select>\n              {errors.group && (\n                <p className=\"text-red-600 text-sm flex items-center\">\n                  <i className=\"fa-solid fa-exclamation-circle mr-1\"></i>\n                  {String(errors.group?.message)}\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Form Actions */}\n        <div className=\"flex justify-end space-x-3 pt-6 border-t border-gray-200\">\n          <button\n            type=\"button\"\n            onClick={handleClose}\n            className=\"px-6 py-3 text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg font-medium transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-gray-500\"\n          >\n            Cancel\n          </button>\n          <button\n            type=\"submit\"\n            className=\"px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 flex items-center\"\n          >\n            <i className=\"fa-solid fa-save mr-2\"></i>\n            {!quiz ? \"Create Quiz\" : \"Update Quiz\"}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { ReactNode, useEffect, useRef } from 'react';\r\n\r\ninterface SharedModalProps {\r\n  show?: boolean;\r\n  title?: string;\r\n  description?: string;\r\n  customIcon?: string;\r\n  body: ReactNode;\r\n  onClose: () => void;\r\n  onSave?: () => void;\r\n  omitHeader?: boolean;\r\n  modalType?: 'default' | 'delete' | 'warning' | 'success';\r\n  saveButtonText?: string;\r\n  closeButtonText?: string;\r\n}\r\n\r\nconst SharedModal: React.FC<SharedModalProps> = ({\r\n  show,\r\n  title,\r\n  description,\r\n  customIcon,\r\n  body,\r\n  onClose,\r\n  onSave,\r\n  omitHeader,\r\n  modalType = 'default',\r\n  saveButtonText,\r\n  closeButtonText,\r\n}) => {\r\n  const modalRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const handleOutsideClick = (event: MouseEvent) => {\r\n      if (modalRef.current && !modalRef.current.contains(event.target as Node)) {\r\n        onClose();\r\n      }\r\n    };\r\n    \r\n    const handleEscapeKey = (event: KeyboardEvent) => {\r\n      if (event.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    if (show) {\r\n      document.addEventListener('mousedown', handleOutsideClick);\r\n      document.addEventListener('keydown', handleEscapeKey);\r\n      document.body.style.overflow = 'hidden'; // Prevent background scrolling\r\n    }\r\n    \r\n    return () => {\r\n      document.removeEventListener('mousedown', handleOutsideClick);\r\n      document.removeEventListener('keydown', handleEscapeKey);\r\n      document.body.style.overflow = 'unset';\r\n    };\r\n  }, [show, onClose]);\r\n\r\n  // Get modal styling based on type\r\n  const getModalStyling = () => {\r\n    switch (modalType) {\r\n      case 'delete':\r\n        return 'border-red-200 shadow-red-100';\r\n      case 'warning':\r\n        return 'border-yellow-200 shadow-yellow-100';\r\n      case 'success':\r\n        return 'border-green-200 shadow-green-100';\r\n      default:\r\n        return 'border-gray-200 shadow-gray-100';\r\n    }\r\n  };\r\n\r\n  // Get header icon based on type or custom icon\r\n  const getHeaderIcon = () => {\r\n    if (customIcon) {\r\n      return customIcon;\r\n    }\r\n    switch (modalType) {\r\n      case 'delete':\r\n        return 'fa-solid fa-exclamation-triangle text-red-600';\r\n      case 'warning':\r\n        return 'fa-solid fa-exclamation-triangle text-yellow-600';\r\n      case 'success':\r\n        return 'fa-solid fa-check-circle text-green-600';\r\n      default:\r\n        return 'fa-solid fa-info-circle text-blue-600';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`fixed inset-0 z-50 overflow-y-auto bg-black bg-opacity-50 backdrop-blur-sm transition-all duration-300 ${\r\n        show ? 'flex justify-center items-start sm:items-center p-2 sm:p-4' : 'hidden'\r\n      }`}\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n      aria-labelledby=\"modal-title\"\r\n    >\r\n      <div\r\n        ref={modalRef}\r\n        className={`bg-white dark:bg-gray-800 w-full max-w-md sm:max-w-lg lg:max-w-2xl mx-auto rounded-xl shadow-2xl transform transition-all duration-300 ease-out border ${getModalStyling()} ${\r\n          show ? 'scale-100 opacity-100' : 'scale-95 opacity-0'\r\n        }`}\r\n      >\r\n        {/* Header */}\r\n        <div\r\n          className={`header flex justify-between items-start border-b border-gray-200 dark:border-gray-700 ${\r\n            omitHeader ? 'hidden' : 'px-6 py-4'\r\n          }`}\r\n        >\r\n          <div className=\"flex items-start\">\r\n            <i className={`${getHeaderIcon()} mr-3 text-xl mt-0.5`}></i>\r\n            <div className='headerName'>\r\n              <div className='text-lg sm:text-xl font-semibold text-gray-900 dark:text-white' id=\"modal-title\">\r\n                {title}\r\n              </div>\r\n              {description && (\r\n                <div className='text-sm text-gray-600 dark:text-gray-400 mt-1'>\r\n                  {description}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className='Icons-close-save flex items-center gap-2'>\r\n            {onSave && modalType !== 'delete' && (\r\n              <button\r\n                className='p-2.5 text-green-600 hover:bg-green-50 dark:hover:bg-green-900/20 rounded-lg transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800'\r\n                onClick={onSave}\r\n                aria-label={saveButtonText || \"Save\"}\r\n                title={saveButtonText || \"Save\"}\r\n              >\r\n                <i className='fa-solid fa-check text-lg'></i>\r\n              </button>\r\n            )}\r\n            <button\r\n              className='p-2.5 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 rounded-lg transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800'\r\n              aria-label={closeButtonText || 'Close'}\r\n              onClick={onClose}\r\n              title={closeButtonText || 'Close'}\r\n            >\r\n              <i className='fa-solid fa-xmark text-lg'></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Body with improved scrolling */}\r\n        <div className='overflow-y-auto max-h-[70vh] sm:max-h-[80vh] scrollbar-thin scrollbar-thumb-gray-300 dark:scrollbar-thumb-gray-600 scrollbar-track-transparent'>\r\n          {body}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SharedModal;\r\n","import React, { memo, useMemo, useCallback } from 'react';\r\nimport { Quiz } from '../../../types';\r\nimport { useMemoizedData } from '../../../hooks/useMemoizedData';\r\nimport { normalizeQuizData } from '../../../utils/quizDataNormalizer';\r\n\r\ninterface QuizCardProps {\r\n  quiz: Quiz;\r\n  onEdit?: (quiz: Quiz) => void;\r\n  onDelete?: (quizId: string) => void;\r\n  onView?: (quizId: string) => void;\r\n  onShare?: (quizCode: string) => void;\r\n  showActions?: boolean;\r\n  className?: string;\r\n}\r\n\r\nconst QuizCard: React.FC<QuizCardProps> = memo(({\r\n  quiz,\r\n  onEdit,\r\n  onDelete,\r\n  onView,\r\n  onShare,\r\n  showActions = true,\r\n  className = '',\r\n}) => {\r\n  const { formatDate, calculateTimeRemaining } = useMemoizedData();\r\n\r\n  // Normalize quiz data to handle field name mismatches\r\n  const normalizedQuiz = useMemo(() => normalizeQuizData(quiz), [quiz]);\r\n\r\n  // Memoize formatted date\r\n  const formattedDate = useMemo(() => formatDate(normalizedQuiz.schedule), [formatDate, normalizedQuiz.schedule]);\r\n\r\n  // Memoize time remaining calculation\r\n  const timeRemaining = useMemo(() => calculateTimeRemaining(normalizedQuiz.schedule), [calculateTimeRemaining, normalizedQuiz.schedule]);\r\n\r\n  // Memoize status styling\r\n  const statusStyle = useMemo(() => {\r\n    const baseClasses = 'px-2 py-1 rounded-full text-xs font-medium';\r\n    switch (normalizedQuiz.status) {\r\n      case 'published':\r\n        return `${baseClasses} bg-green-100 text-green-800`;\r\n      case 'completed':\r\n        return `${baseClasses} bg-blue-100 text-blue-800`;\r\n      case 'draft':\r\n        return `${baseClasses} bg-gray-100 text-gray-800`;\r\n      default:\r\n        return `${baseClasses} bg-gray-100 text-gray-800`;\r\n    }\r\n  }, [normalizedQuiz.status]);\r\n\r\n  // Memoize difficulty styling\r\n  const difficultyStyle = useMemo(() => {\r\n    const baseClasses = 'px-2 py-1 rounded text-xs font-medium';\r\n    switch (normalizedQuiz.difficulty) {\r\n      case 'easy':\r\n        return `${baseClasses} bg-green-50 text-green-700 border border-green-200`;\r\n      case 'medium':\r\n        return `${baseClasses} bg-yellow-50 text-yellow-700 border border-yellow-200`;\r\n      case 'hard':\r\n        return `${baseClasses} bg-red-50 text-red-700 border border-red-200`;\r\n      default:\r\n        return `${baseClasses} bg-gray-50 text-gray-700 border border-gray-200`;\r\n    }\r\n  }, [normalizedQuiz.difficulty]);\r\n\r\n  // Memoized event handlers\r\n  const handleEdit = useCallback(() => {\r\n    if (onEdit) {\r\n      onEdit(normalizedQuiz);\r\n    }\r\n  }, [onEdit, normalizedQuiz]);\r\n\r\n  const handleDelete = useCallback(() => {\r\n    if (onDelete) {\r\n      onDelete(normalizedQuiz._id);\r\n    }\r\n  }, [onDelete, normalizedQuiz._id]);\r\n\r\n  const handleView = useCallback(() => {\r\n    if (onView) {\r\n      onView(normalizedQuiz._id);\r\n    }\r\n  }, [onView, normalizedQuiz._id]);\r\n\r\n  const handleShare = useCallback(() => {\r\n    if (onShare) {\r\n      onShare(normalizedQuiz.code);\r\n    }\r\n  }, [onShare, normalizedQuiz.code]);\r\n\r\n  // Memoize the progress percentage\r\n  const progressPercentage = useMemo(() => {\r\n    if (normalizedQuiz.status === 'completed') return 100;\r\n    if (normalizedQuiz.status === 'draft') return 25;\r\n    return 75; // published\r\n  }, [normalizedQuiz.status]);\r\n\r\n  return (\r\n    <div className={`bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200 p-6 border border-gray-200 ${className}`}>\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-start mb-4\">\r\n        <div className=\"flex-1\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-1 line-clamp-1\">\r\n            {normalizedQuiz.title}\r\n          </h3>\r\n          <p className=\"text-sm text-gray-600 line-clamp-2\">\r\n            {normalizedQuiz.description}\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2 ml-4\">\r\n          <span className={statusStyle}>\r\n            {normalizedQuiz.status}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Quiz Details */}\r\n      <div className=\"grid grid-cols-2 gap-4 mb-4\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <svg className=\"w-4 h-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n          </svg>\r\n          <span className=\"text-sm text-gray-600\">\r\n            {normalizedQuiz.questions_number} questions\r\n          </span>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <svg className=\"w-4 h-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n          </svg>\r\n          <span className=\"text-sm text-gray-600\">\r\n            {normalizedQuiz.duration} minutes\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Difficulty and Score */}\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <span className=\"text-sm text-gray-600\">Difficulty:</span>\r\n          <span className={difficultyStyle}>\r\n            {normalizedQuiz.difficulty}\r\n          </span>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <span className=\"text-sm text-gray-600\">Score:</span>\r\n          <span className=\"text-sm font-medium text-gray-900\">\r\n            {normalizedQuiz.score_per_question} pts/question\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Progress Bar */}\r\n      <div className=\"mb-4\">\r\n        <div className=\"flex justify-between items-center mb-1\">\r\n          <span className=\"text-xs text-gray-600\">Progress</span>\r\n          <span className=\"text-xs text-gray-600\">{progressPercentage}%</span>\r\n        </div>\r\n        <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n          <div \r\n            className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\r\n            style={{ width: `${progressPercentage}%` }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Schedule Information */}\r\n      <div className=\"mb-4\">\r\n        <div className=\"flex items-center space-x-2 mb-2\">\r\n          <svg className=\"w-4 h-4 text-gray-500 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n          </svg>\r\n          <span className=\"text-sm text-gray-600 truncate\">\r\n            {formattedDate}\r\n          </span>\r\n        </div>\r\n        {!timeRemaining.expired && (\r\n          <div className=\"flex items-center space-x-2\">\r\n            <svg className=\"w-4 h-4 text-blue-500 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n            </svg>\r\n            <span className=\"text-xs text-blue-600 font-medium truncate\">\r\n              {timeRemaining.display}\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Quiz Code */}\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <span className=\"text-sm text-gray-600\">Code:</span>\r\n          <code className=\"bg-gray-100 px-2 py-1 rounded text-sm font-mono text-gray-800\">\r\n            {normalizedQuiz.code}\r\n          </code>\r\n        </div>\r\n        <button\r\n          onClick={handleShare}\r\n          className=\"text-sm text-blue-600 hover:text-blue-800 transition-colors\"\r\n        >\r\n          Copy\r\n        </button>\r\n      </div>\r\n\r\n      {/* Actions */}\r\n      {showActions && (\r\n        <div className=\"flex justify-end space-x-2 pt-4 border-t border-gray-200\">\r\n          {onView && (\r\n            <button\r\n              onClick={handleView}\r\n              className=\"px-3 py-1 text-sm text-blue-600 hover:text-blue-800 transition-colors\"\r\n            >\r\n              View\r\n            </button>\r\n          )}\r\n          {onEdit && (\r\n            <button\r\n              onClick={handleEdit}\r\n              className=\"px-3 py-1 text-sm text-green-600 hover:text-green-800 transition-colors\"\r\n            >\r\n              Edit\r\n            </button>\r\n          )}\r\n          {onDelete && (\r\n            <button\r\n              onClick={handleDelete}\r\n              className=\"px-3 py-1 text-sm text-red-600 hover:text-red-800 transition-colors\"\r\n            >\r\n              Delete\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nQuizCard.displayName = 'QuizCard';\r\n\r\nexport default QuizCard; \r\n","import { useCallback } from 'react';\r\nimport { Question, Quiz, User } from '../types';\r\nimport { normalizeQuizData } from '../utils/quizDataNormalizer';\r\n\r\nexport const useMemoizedData = () => {\r\n  // Memoized function to filter and sort quizzes\r\n  const filterAndSortQuizzes = useCallback((\r\n    quizzes: Quiz[],\r\n    searchTerm: string,\r\n    sortBy: 'title' | 'date' | 'status' = 'date',\r\n    sortOrder: 'asc' | 'desc' = 'desc'\r\n  ) => {\r\n    let filtered = quizzes;\r\n\r\n    // Filter by search term\r\n    if (searchTerm) {\r\n      filtered = quizzes.filter(quiz =>\r\n        quiz.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        quiz.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n\r\n    // Sort by specified criteria\r\n    return filtered.sort((a, b) => {\r\n      let aValue: string | number | Date;\r\n      let bValue: string | number | Date;\r\n\r\n      switch (sortBy) {\r\n        case 'title': {\r\n          aValue = a.title.toLowerCase();\r\n          bValue = b.title.toLowerCase();\r\n          break;\r\n        }\r\n        case 'date': {\r\n          // Normalize quiz data to ensure schedule field is available\r\n          const normalizedA = normalizeQuizData(a);\r\n          const normalizedB = normalizeQuizData(b);\r\n          aValue = new Date(normalizedA.schedule);\r\n          bValue = new Date(normalizedB.schedule);\r\n          break;\r\n        }\r\n        case 'status': {\r\n          aValue = a.status;\r\n          bValue = b.status;\r\n          break;\r\n        }\r\n        default: {\r\n          aValue = a.title;\r\n          bValue = b.title;\r\n        }\r\n      }\r\n\r\n      if (sortOrder === 'asc') {\r\n        return aValue > bValue ? 1 : -1;\r\n      } else {\r\n        return aValue < bValue ? 1 : -1;\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // Memoized function to filter and sort students\r\n  const filterAndSortStudents = useCallback((\r\n    students: User[],\r\n    searchTerm: string,\r\n    sortBy: 'name' | 'email' | 'score' = 'name',\r\n    sortOrder: 'asc' | 'desc' = 'asc'\r\n  ) => {\r\n    let filtered = students;\r\n\r\n    // Filter by search term\r\n    if (searchTerm) {\r\n      filtered = students.filter(student =>\r\n        `${student.first_name} ${student.last_name}`.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        student.email.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n\r\n    // Sort by specified criteria\r\n    return filtered.sort((a, b) => {\r\n      let aValue: string | number;\r\n      let bValue: string | number;\r\n\r\n      switch (sortBy) {\r\n        case 'name': {\r\n          aValue = `${a.first_name} ${a.last_name}`.toLowerCase();\r\n          bValue = `${b.first_name} ${b.last_name}`.toLowerCase();\r\n          break;\r\n        }\r\n        case 'email': {\r\n          aValue = a.email.toLowerCase();\r\n          bValue = b.email.toLowerCase();\r\n          break;\r\n        }\r\n        case 'score': {\r\n          aValue = a.avg_score || 0;\r\n          bValue = b.avg_score || 0;\r\n          break;\r\n        }\r\n        default: {\r\n          aValue = a.first_name;\r\n          bValue = b.first_name;\r\n        }\r\n      }\r\n\r\n      if (sortOrder === 'asc') {\r\n        return aValue > bValue ? 1 : -1;\r\n      } else {\r\n        return aValue < bValue ? 1 : -1;\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // Memoized function to filter and sort questions\r\n  const filterAndSortQuestions = useCallback((\r\n    questions: Question[],\r\n    searchTerm: string,\r\n    difficultyFilter: 'all' | 'easy' | 'medium' | 'hard' = 'all',\r\n    typeFilter: 'all' | 'MCQ' | 'True/False' = 'all'\r\n  ) => {\r\n    let filtered = questions;\r\n\r\n    // Filter by search term\r\n    if (searchTerm) {\r\n      filtered = questions.filter(question =>\r\n        question.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        question.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n\r\n    // Filter by difficulty\r\n    if (difficultyFilter !== 'all') {\r\n      filtered = filtered.filter(question => question.difficulty === difficultyFilter);\r\n    }\r\n\r\n    // Filter by type\r\n    if (typeFilter !== 'all') {\r\n      filtered = filtered.filter(question => question.type === typeFilter);\r\n    }\r\n\r\n    return filtered;\r\n  }, []);\r\n\r\n  // Memoized function to calculate quiz statistics\r\n  const calculateQuizStats = useCallback((quizzes: Quiz[]) => {\r\n    const total = quizzes.length;\r\n    const completed = quizzes.filter(q => q.status === 'completed').length;\r\n    const published = quizzes.filter(q => q.status === 'published').length;\r\n    const draft = quizzes.filter(q => q.status === 'draft').length;\r\n\r\n    const averageQuestions = total > 0 \r\n      ? Math.round(quizzes.reduce((sum, quiz) => sum + quiz.questions_number, 0) / total)\r\n      : 0;\r\n\r\n    const difficultyDistribution = quizzes.reduce((acc, quiz) => {\r\n      acc[quiz.difficulty] = (acc[quiz.difficulty] || 0) + 1;\r\n      return acc;\r\n    }, {} as Record<string, number>);\r\n\r\n    return {\r\n      total,\r\n      completed,\r\n      published,\r\n      draft,\r\n      averageQuestions,\r\n      difficultyDistribution,\r\n      completionRate: total > 0 ? Math.round((completed / total) * 100) : 0\r\n    };\r\n  }, []);\r\n\r\n  // Memoized function to calculate student performance\r\n  const calculateStudentPerformance = useCallback((students: User[]) => {\r\n    const totalStudents = students.length;\r\n    const studentsWithScores = students.filter(s => s.avg_score !== undefined);\r\n    \r\n    if (studentsWithScores.length === 0) {\r\n      return {\r\n        totalStudents,\r\n        averageScore: 0,\r\n        topPerformers: [],\r\n        lowPerformers: [],\r\n        scoreDistribution: {}\r\n      };\r\n    }\r\n\r\n    const averageScore = studentsWithScores.reduce((sum, student) => \r\n      sum + (student.avg_score || 0), 0\r\n    ) / studentsWithScores.length;\r\n\r\n    const sortedByScore = [...studentsWithScores].sort((a, b) => \r\n      (b.avg_score || 0) - (a.avg_score || 0)\r\n    );\r\n\r\n    const topPerformers = sortedByScore.slice(0, 5);\r\n    const lowPerformers = sortedByScore.slice(-5).reverse();\r\n\r\n    const scoreDistribution = studentsWithScores.reduce((acc, student) => {\r\n      const score = student.avg_score || 0;\r\n      const range = score >= 90 ? '90-100' : \r\n                   score >= 80 ? '80-89' :\r\n                   score >= 70 ? '70-79' :\r\n                   score >= 60 ? '60-69' : '0-59';\r\n      acc[range] = (acc[range] || 0) + 1;\r\n      return acc;\r\n    }, {} as Record<string, number>);\r\n\r\n    return {\r\n      totalStudents,\r\n      averageScore: Math.round(averageScore * 100) / 100,\r\n      topPerformers,\r\n      lowPerformers,\r\n      scoreDistribution\r\n    };\r\n  }, []);\r\n\r\n  // Memoized function to format dates\r\n  const formatDate = useCallback((dateString: string | null | undefined) => {\r\n    try {\r\n      // Handle null, undefined, or empty strings\r\n      if (!dateString || dateString.trim() === '') {\r\n        return 'No date set';\r\n      }\r\n\r\n      const date = new Date(dateString);\r\n      // Check if date is valid\r\n      if (isNaN(date.getTime())) {\r\n        return 'Invalid date format';\r\n      }\r\n      \r\n      return new Intl.DateTimeFormat('en-US', {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      }).format(date);\r\n    } catch (error) {\r\n      return 'Date unavailable';\r\n    }\r\n  }, []);\r\n\r\n  // Memoized function to calculate time remaining\r\n  const calculateTimeRemaining = useCallback((endTime: string | null | undefined) => {\r\n    try {\r\n      // Handle null, undefined, or empty strings\r\n      if (!endTime || endTime.trim() === '') {\r\n        return { expired: true, display: 'No end time set' };\r\n      }\r\n\r\n      const now = new Date().getTime();\r\n      const end = new Date(endTime).getTime();\r\n      \r\n      // Check if end date is valid\r\n      if (isNaN(end)) {\r\n        return { expired: true, display: 'Invalid end time' };\r\n      }\r\n      \r\n      const remaining = end - now;\r\n\r\n      if (remaining <= 0) {\r\n        return { expired: true, display: 'Expired' };\r\n      }\r\n\r\n      const days = Math.floor(remaining / (1000 * 60 * 60 * 24));\r\n      const hours = Math.floor((remaining % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n      const minutes = Math.floor((remaining % (1000 * 60 * 60)) / (1000 * 60));\r\n\r\n      let display = '';\r\n      if (days > 0) display += `${days}d `;\r\n      if (hours > 0) display += `${hours}h `;\r\n      if (minutes > 0) display += `${minutes}m`;\r\n\r\n      return { expired: false, display: display.trim() || '< 1m' };\r\n    } catch (error) {\r\n      return { expired: true, display: 'Time unavailable' };\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    filterAndSortQuizzes,\r\n    filterAndSortStudents,\r\n    filterAndSortQuestions,\r\n    calculateQuizStats,\r\n    calculateStudentPerformance,\r\n    formatDate,\r\n    calculateTimeRemaining\r\n  };\r\n}; \r\n","import { useLocation } from \"react-router-dom\";\r\nimport QuizCard from \"../QuizCard/QuizCard.tsx\";\r\nimport { Quiz } from \"../../../types/index.ts\";\r\n\r\ninterface IncomingQuizzesProps {\r\n  incomingQuizzes: Quiz[];\r\n}\r\n\r\nexport default function IncomingQuizzes({ incomingQuizzes }: IncomingQuizzesProps) {\r\n  const location = useLocation();\r\n  \r\n\r\n  \r\n  return (\r\n    <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">\r\n      {/* Header with better styling */}\r\n      <div className=\"px-6 py-4 border-b border-gray-200 bg-gradient-to-r from-blue-50 to-indigo-50\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className=\"w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center\">\r\n              <i className=\"fa-solid fa-calendar-days text-blue-600 text-sm\"></i>\r\n            </div>\r\n            <h3 className=\"text-xl font-semibold text-gray-900\">Incoming Quizzes</h3>\r\n          </div>\r\n          <span className=\"text-sm text-gray-500 bg-white px-3 py-1 rounded-full border\">\r\n            {incomingQuizzes?.length || 0} quizzes\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"p-6\">\r\n        {incomingQuizzes && incomingQuizzes.length > 0 ? (\r\n          <div className=\"space-y-4\">\r\n            {(location.pathname === \"/dashboard/quizzes\" || location.pathname === \"/student\" ? \r\n              incomingQuizzes.slice(0, 2) : \r\n              incomingQuizzes\r\n            ).map((quiz: Quiz) => (\r\n              <QuizCard\r\n                key={quiz._id}\r\n                quiz={quiz}\r\n                showActions={false}\r\n                className=\"border border-gray-100 hover:border-blue-200 transition-colors duration-200\"\r\n              />\r\n            ))}\r\n            \r\n            {/* Show more link if there are more quizzes */}\r\n            {location.pathname === \"/dashboard/quizzes\" && incomingQuizzes.length > 2 && (\r\n              <div className=\"text-center pt-4 border-t border-gray-100\">\r\n                <button className=\"text-blue-600 hover:text-blue-700 font-medium text-sm transition-colors duration-200\">\r\n                  View all {incomingQuizzes.length} incoming quizzes\r\n                  <i className=\"fa-solid fa-arrow-right ml-2\"></i>\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-center py-12\">\r\n            <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n              <i className=\"fa-solid fa-calendar-xmark text-gray-400 text-xl\"></i>\r\n            </div>\r\n            <p className=\"text-gray-500 text-lg font-medium\">No incoming quizzes</p>\r\n            <p className=\"text-gray-400 text-sm mt-1\">Create a new quiz to get started</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport Loading from \"../../Shared/Loading/Loading\";\r\nimport SharedModal from \"../../Shared/Modal/Modal\";\r\nimport { RootState } from \"../../types\";\r\n\r\ninterface AddQuestionModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  getAllQuestions: () => void;\r\n}\r\n\r\ninterface QuestionFormData {\r\n  title: string;\r\n  description: string;\r\n  options: {\r\n    A: string;\r\n    B: string;\r\n    C: string;\r\n    D: string;\r\n  };\r\n  answer: 'A' | 'B' | 'C' | 'D';\r\n  difficulty: 'easy' | 'medium' | 'hard';\r\n  type: 'FE' | 'BE' | 'FS';\r\n}\r\n\r\nexport default function AddQuestionModal({\r\n  isOpen,\r\n  onClose,\r\n  getAllQuestions,\r\n}: AddQuestionModalProps) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm<QuestionFormData>();\r\n  const { headers } = useSelector((state: RootState) => state.userData);\r\n\r\n  const onSubmit = (data: QuestionFormData) => {\r\n    setIsLoading(true);\r\n    axios\r\n      .post(`https://upskilling-egypt.com:3005/api/question`, data, headers)\r\n      .then((response) => {\r\n        toast.success(response?.data.message || \"Question added successfully!\");\r\n        reset();\r\n        onClose();\r\n        getAllQuestions();\r\n      })\r\n      .catch((error: unknown) => {\r\n        const errorMessage = (error as { response?: { data?: { message?: string } } })?.response?.data?.message || \"Failed to add question\";\r\n        toast.error(errorMessage);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    reset();\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <SharedModal\r\n      onClose={handleClose}\r\n      show={isOpen}\r\n      omitHeader={true}\r\n      body={\r\n        isLoading ? (\r\n          <div className=\"flex items-center justify-center h-64 p-6\">\r\n            <div className=\"text-center\">\r\n              <Loading />\r\n              <p className=\"text-gray-600 mt-4\">Adding question...</p>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"p-4\">\r\n            {/* Header */}\r\n            <div className=\"border-b border-gray-200 pb-3 mb-4\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                Add New Question\r\n              </h3>\r\n            </div>\r\n\r\n            {/* Form Content */}\r\n            <form id=\"add-question-form\" onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\r\n              {/* Title Field */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Question Title <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <input\r\n                  {...register(\"title\", {\r\n                    required: \"Question title is required\",\r\n                  })}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter the question title\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                />\r\n                {errors.title && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">\r\n                    {String(errors.title.message)}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              {/* Description Field */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Description <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <textarea\r\n                  {...register(\"description\", {\r\n                    required: \"Description is required\",\r\n                  })}\r\n                  rows={2}\r\n                  placeholder=\"Enter question description\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none\"\r\n                />\r\n                {errors.description && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">\r\n                    {String(errors.description.message)}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              {/* Options Section */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Answer Options <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n                  {['A', 'B', 'C', 'D'].map((option) => (\r\n                    <div key={option}>\r\n                      <label className=\"block text-xs font-medium text-gray-600 mb-1\">\r\n                        Option {option}\r\n                      </label>\r\n                      <input\r\n                        {...register(`options.${option}`, {\r\n                          required: `Option ${option} is required`,\r\n                        })}\r\n                        type=\"text\"\r\n                        placeholder={`Enter option ${option}`}\r\n                        className=\"w-full px-2 py-1.5 text-sm border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-transparent\"\r\n                      />\r\n                      {errors.options && (errors.options as Record<string, { message?: string }>)[option] && (\r\n                        <p className=\"mt-1 text-xs text-red-600\">\r\n                          {String((errors.options as Record<string, { message?: string }>)[option]?.message)}\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Settings Section */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Question Settings <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3\">\r\n                  <select\r\n                    {...register(\"answer\", {\r\n                      required: \"Please select the correct answer\",\r\n                    })}\r\n                    className=\"w-full px-2 py-1.5 text-sm border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-transparent bg-white\"\r\n                  >\r\n                    <option value=\"\">Correct Answer</option>\r\n                    <option value=\"A\">A</option>\r\n                    <option value=\"B\">B</option>\r\n                    <option value=\"C\">C</option>\r\n                    <option value=\"D\">D</option>\r\n                  </select>\r\n                  <select\r\n                    {...register(\"difficulty\", {\r\n                      required: \"Please select difficulty level\",\r\n                    })}\r\n                    className=\"w-full px-2 py-1.5 text-sm border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-transparent bg-white\"\r\n                  >\r\n                    <option value=\"\">Difficulty</option>\r\n                    <option value=\"easy\">Easy</option>\r\n                    <option value=\"medium\">Medium</option>\r\n                    <option value=\"hard\">Hard</option>\r\n                  </select>\r\n                  <select\r\n                    {...register(\"type\", {\r\n                      required: \"Please select a category\",\r\n                    })}\r\n                    className=\"w-full px-2 py-1.5 text-sm border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-transparent bg-white\"\r\n                  >\r\n                    <option value=\"\">Category</option>\r\n                    <option value=\"FE\">Frontend</option>\r\n                    <option value=\"BE\">Backend</option>\r\n                    <option value=\"FS\">Full Stack</option>\r\n                  </select>\r\n                </div>\r\n                {(errors.answer || errors.difficulty || errors.type) && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">\r\n                    All settings are required\r\n                  </p>\r\n                )}\r\n              </div>\r\n            </form>\r\n\r\n            {/* Footer Actions */}\r\n            <div className=\"flex items-center justify-end space-x-3 pt-3 border-t border-gray-200 mt-4\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleClose}\r\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                form=\"add-question-form\"\r\n                className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\r\n                disabled={isLoading}\r\n              >\r\n                {isLoading ? (\r\n                  <>\r\n                    <i className=\"fa-solid fa-spinner fa-spin mr-2\"></i>\r\n                    Saving...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <i className=\"fa-solid fa-check mr-2\"></i>\r\n                    Save Question\r\n                  </>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Loading from \"../../Shared/Loading/Loading\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../types\";\n\ninterface DeleteQuestionModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  getAllQuestions: () => void;\n  id: string;\n  questionTitle?: string; // Optional for better UX context\n}\n\nexport default function DeleteQuestionModal({\n  isOpen,\n  onClose,\n  getAllQuestions,\n  id,\n  questionTitle\n}: DeleteQuestionModalProps) {\n  const [isLoading, setIsLoading] = useState(false);\n  const { userData } = useSelector((state: RootState) => state.userData);\n  const reqHeaders = `Bearer ${userData?.accessToken}`;\n\n  // Handle keyboard navigation\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n      document.body.style.overflow = 'hidden'; // Prevent background scrolling\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.body.style.overflow = 'unset';\n    };\n  }, [isOpen, onClose]);\n\n  const deleteQuestion = async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.delete(\n        `https://upskilling-egypt.com:3005/api/question/${id}`,\n        {\n          headers: { Authorization: reqHeaders },\n        }\n      );\n      \n      toast.success(response?.data?.message || \"Question deleted successfully\");\n      onClose();\n      getAllQuestions();\n    } catch (error: unknown) {\n      const errorMessage = (error as { response?: { data?: { message?: string } } })?.response?.data?.message || \"Error deleting question\";\n      toast.error(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div\n      className=\"fixed inset-0 z-50 flex items-center justify-center p-2 sm:p-4 bg-black/50 backdrop-blur-sm\"\n      onClick={onClose}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-labelledby=\"delete-question-title\"\n      aria-describedby=\"delete-question-description\"\n    >\n      <div\n        className=\"relative w-full max-w-sm sm:max-w-md md:max-w-lg mx-auto bg-white rounded-xl shadow-2xl border border-gray-200 dark:bg-gray-800 dark:border-gray-700\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-4 sm:p-6 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"w-10 h-10 sm:w-12 sm:h-12 bg-red-100 dark:bg-red-900/30 rounded-full flex items-center justify-center\">\n              <i className=\"fa-solid fa-exclamation-triangle text-red-600 dark:text-red-400 text-lg sm:text-xl\"></i>\n            </div>\n            <div>\n              <h3\n                id=\"delete-question-title\"\n                className=\"text-base sm:text-lg font-semibold text-gray-900 dark:text-white\"\n              >\n                Delete Question\n              </h3>\n              <p className=\"text-xs sm:text-sm text-gray-500 dark:text-gray-400\">\n                This action cannot be undone\n              </p>\n            </div>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\n            aria-label=\"Close dialog\"\n          >\n            <i className=\"fa-solid fa-xmark text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"></i>\n          </button>\n        </div>\n\n        {/* Body */}\n        <div className=\"p-4 sm:p-5\">\n          {isLoading ? (\n            <div className=\"flex items-center justify-center py-6\">\n              <Loading />\n              <span className=\"ml-3 text-gray-600 dark:text-gray-400\">Deleting question...</span>\n            </div>\n          ) : (\n            <>\n              {/* Warning Message */}\n              <div className=\"text-center mb-4\">\n                <div className=\"inline-flex items-center justify-center w-12 h-12 sm:w-14 sm:h-14 bg-red-100 dark:bg-red-900/30 rounded-full mb-3\">\n                  <i className=\"fa-solid fa-exclamation-triangle text-red-600 dark:text-red-400 text-lg sm:text-xl\"></i>\n                </div>\n                <h4 className=\"text-base sm:text-lg font-semibold text-gray-900 dark:text-white mb-2\">\n                  Delete Question\n                </h4>\n                <p \n                  id=\"delete-question-description\"\n                  className=\"text-sm text-gray-600 dark:text-gray-400 mb-3\"\n                >\n                  Are you sure you want to permanently delete this question?\n                </p>\n                \n                {/* Question Context (if available) */}\n                {questionTitle && (\n                  <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-3 mb-3\">\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400 mb-1\">Question to delete:</p>\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white line-clamp-2\">\n                      {questionTitle}\n                    </p>\n                  </div>\n                )}\n\n                {/* Simple Warning */}\n                <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-3\">\n                  <p className=\"text-xs text-red-700 dark:text-red-300\">\n                    <i className=\"fa-solid fa-exclamation-triangle mr-1\"></i>\n                    This action cannot be undone.\n                  </p>\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n\n        {/* Action Buttons */}\n        {!isLoading && (\n          <div className=\"flex flex-col sm:flex-row gap-3 p-4 sm:p-5 border-t border-gray-200 dark:border-gray-700\">\n            <button\n              onClick={onClose}\n              className=\"flex-1 px-3 py-2.5 sm:px-4 sm:py-3 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\"\n            >\n              <i className=\"fa-solid fa-times mr-2\"></i>\n              Cancel\n            </button>\n            <button\n              onClick={deleteQuestion}\n              className=\"flex-1 px-3 py-2.5 sm:px-4 sm:py-3 text-sm font-medium text-white bg-red-600 hover:bg-red-700 rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n              disabled={isLoading}\n            >\n              <i className=\"fa-solid fa-trash-alt mr-2\"></i>\n              Delete Question\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport Loading from '../../Shared/Loading/Loading';\r\nimport SharedModal from \"../../Shared/Modal/Modal\";\r\nimport { RootState, Question } from \"../../types\";\r\n\r\ninterface UpdateQuestionModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  getAllQuestions: () => void;\r\n  question: Question;\r\n}\r\n\r\ninterface QuestionFormData {\r\n  title: string;\r\n  description: string;\r\n  options: {\r\n    A: string;\r\n    B: string;\r\n    C: string;\r\n    D: string;\r\n  };\r\n  answer: 'A' | 'B' | 'C' | 'D';\r\n  difficulty: 'easy' | 'medium' | 'hard';\r\n  type: 'FE' | 'BE' | 'FS';\r\n}\r\n\r\nexport default function UpdateQuestionModal({ isOpen, onClose, getAllQuestions, question }: UpdateQuestionModalProps) {\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm<QuestionFormData>();\r\n\r\n  const { userData } = useSelector((state: RootState) => state.userData);\r\n  const reqHeaders = `Bearer ${userData?.accessToken}`;\r\n\r\n  useEffect(() => {\r\n    setValue(\"title\", question.title);\r\n    setValue(\"description\", question.description);\r\n    setValue(\"options.A\", question.options.A);\r\n    setValue(\"options.B\", question.options.B);\r\n    setValue(\"options.C\", question.options.C);\r\n    setValue(\"options.D\", question.options.D);\r\n    setValue(\"answer\", question.answer);\r\n    setValue(\"difficulty\", question.difficulty);\r\n    setValue(\"type\", question.type);\r\n  }, [question, setValue])\r\n\r\n  const onSubmit = (data: QuestionFormData) => {\r\n    setIsLoading(true);\r\n    axios\r\n    .put(`https://upskilling-egypt.com:3005/api/question/${question._id}`, data, {\r\n      headers: { Authorization: reqHeaders },\r\n    })\r\n    .then((response) => {\r\n      toast.success(response?.data.message || \"Question updated successfully\");\r\n      \r\n    })\r\n    .catch((error: unknown) => {\r\n      console.log(error);\r\n      const errorMessage = (error as { response?: { data?: { message?: string } } })?.response?.data?.message || \"Error updating question\";\r\n      toast.error(errorMessage);\r\n    })\r\n    .finally(() => {\r\n      setIsLoading(false);\r\n      onClose()\r\n      getAllQuestions()\r\n      \r\n    });\r\n   \r\n    \r\n  };\r\n\r\n  return (\r\n    <SharedModal\r\n      onClose={onClose}\r\n      show={isOpen}\r\n      omitHeader={true}\r\n      body={\r\n        isLoading ? (\r\n          <div className=\"flex items-center justify-center h-64 p-6\">\r\n            <div className=\"text-center\">\r\n              <Loading />\r\n              <p className=\"text-gray-600 mt-4\">Updating question...</p>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"p-4\">\r\n            {/* Header */}\r\n            <div className=\"border-b border-gray-200 pb-3 mb-4\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                Update Question\r\n              </h3>\r\n            </div>\r\n\r\n            {/* Form Content */}\r\n            <form id=\"update-question-form\" onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\r\n              {/* Title Field */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Question Title <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <input\r\n                  {...register(\"title\", {\r\n                    required: \"Question title is required\",\r\n                  })}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter the question title\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                />\r\n                {errors.title && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">\r\n                    {String(errors.title.message)}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              {/* Description Field */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Description <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <textarea\r\n                  {...register(\"description\", {required:\"Description is required\"})}\r\n                  rows={2}\r\n                  placeholder=\"Enter question description\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none\"\r\n                />\r\n                {errors.description && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">\r\n                    {String(errors.description.message)}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              {/* Options Section */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Answer Options <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n                  {['A', 'B', 'C', 'D'].map((option) => (\r\n                    <div key={option}>\r\n                      <label className=\"block text-xs font-medium text-gray-600 mb-1\">\r\n                        Option {option}\r\n                      </label>\r\n                      <input\r\n                        {...register(`options.${option}`, {\r\n                          required: `Option ${option} is required`,\r\n                        })}\r\n                        type=\"text\"\r\n                        placeholder={`Enter option ${option}`}\r\n                        className=\"w-full px-2 py-1.5 text-sm border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-transparent\"\r\n                      />\r\n                      {errors.options && (errors.options as Record<string, { message?: string }>)[option] && (\r\n                        <p className=\"mt-1 text-xs text-red-600\">\r\n                          {String((errors.options as Record<string, { message?: string }>)[option]?.message)}\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Settings Section */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Question Settings <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3\">\r\n                  <select\r\n                    {...register(\"answer\", {\r\n                      required: \"Please select the correct answer\",\r\n                    })}\r\n                    className=\"w-full px-2 py-1.5 text-sm border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-transparent bg-white\"\r\n                  >\r\n                    <option value=\"\">Correct Answer</option>\r\n                    <option value=\"A\">A</option>\r\n                    <option value=\"B\">B</option>\r\n                    <option value=\"C\">C</option>\r\n                    <option value=\"D\">D</option>\r\n                  </select>\r\n                  <select\r\n                    {...register(\"difficulty\", {\r\n                      required: \"Please select difficulty level\",\r\n                    })}\r\n                    className=\"w-full px-2 py-1.5 text-sm border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-transparent bg-white\"\r\n                  >\r\n                    <option value=\"\">Difficulty</option>\r\n                    <option value=\"easy\">Easy</option>\r\n                    <option value=\"medium\">Medium</option>\r\n                    <option value=\"hard\">Hard</option>\r\n                  </select>\r\n                  <select\r\n                    {...register(\"type\", {\r\n                      required: \"Please select a category\",\r\n                    })}\r\n                    className=\"w-full px-2 py-1.5 text-sm border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-transparent bg-white\"\r\n                  >\r\n                    <option value=\"\">Category</option>\r\n                    <option value=\"FE\">Frontend</option>\r\n                    <option value=\"BE\">Backend</option>\r\n                    <option value=\"FS\">Full Stack</option>\r\n                  </select>\r\n                </div>\r\n                {(errors.answer || errors.difficulty || errors.type) && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">\r\n                    All settings are required\r\n                  </p>\r\n                )}\r\n              </div>\r\n            </form>\r\n\r\n            {/* Footer Actions */}\r\n            <div className=\"flex items-center justify-end space-x-3 pt-3 border-t border-gray-200 mt-4\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={onClose}\r\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                form=\"update-question-form\"\r\n                className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\r\n                disabled={isLoading}\r\n              >\r\n                {isLoading ? (\r\n                  <>\r\n                    <i className=\"fa-solid fa-spinner fa-spin mr-2\"></i>\r\n                    Updating...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <i className=\"fa-solid fa-check mr-2\"></i>\r\n                    Update Question\r\n                  </>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n","import axios from \"axios\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Loading from \"../../Shared/Loading/Loading\";\nimport AddQuestionModal from \"./AddQuestionModal\";\nimport DeleteQuestionModal from \"./DeleteQuestionModal\";\nimport UpdateQuestionModal from \"./UpdateQuestionModal\";\nimport { RootState, Question } from \"../../types\";\n\nexport default function Questions() {\n  const [questionsList, setQuestionsList] = useState<Question[]>([]);\n  const [isloading, setIsLoading] = useState(false);\n\n  //******** const modals add,update,delete*******//\n  const [modalState, setModalState] = useState<string>(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [id, setId] = useState<string | null>(null);\n  const [question, setQuestion] = useState<Question | null>(null);\n  const [questionTitle, setQuestionTitle] = useState<string>(\"\");\n\n  const handleAddModal = () => {\n    setModalState(\"add\");\n    setIsOpen(true);\n  };\n  const handleUpdateModal = (question: Question) => {\n    setModalState(\"update\");\n    setQuestion(question);\n    setIsOpen(true);\n  };\n  const handleDeleteModal = (id: string, title: string) => {\n    setModalState(\"delete\");\n    setId(id);\n    setQuestionTitle(title);\n    setIsOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsOpen(false);\n  };\n\n  const { userData } = useSelector((state: RootState) => state.userData);\n  const reqHeaders = `Bearer ${userData?.accessToken}`;\n\n  const getAllQuestions = useCallback(() => {\n    setIsLoading(true);\n    axios\n      .get(`https://upskilling-egypt.com:3005/api/question`, {\n        headers: { Authorization: reqHeaders },\n      })\n      .then((response) => {\n        setQuestionsList(response?.data);\n      })\n      .catch((error: unknown) => {\n        console.error(\"Error fetching questions:\", error);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [reqHeaders]);\n\n  useEffect(() => {\n    getAllQuestions();\n  }, [getAllQuestions]);\n\n  // Helper function to get difficulty badge color\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty?.toLowerCase()) {\n      case 'easy':\n        return 'bg-green-100 text-green-800 border-green-200';\n      case 'medium':\n        return 'bg-yellow-100 text-yellow-800 border-yellow-200';\n      case 'hard':\n        return 'bg-red-100 text-red-800 border-red-200';\n      default:\n        return 'bg-gray-100 text-gray-800 border-gray-200';\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header Section */}\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6\">\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Question Bank</h1>\n              <p className=\"text-gray-600 mt-1\">\n                Manage and organize your quiz questions\n              </p>\n            </div>\n            <button\n              onClick={handleAddModal}\n              className=\"inline-flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors duration-200 shadow-sm hover:shadow-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n            >\n              <i className=\"fa-solid fa-plus mr-2\"></i>\n              Add Question\n            </button>\n          </div>\n        </div>\n\n        {/* Content Section */}\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\n          {isloading ? (\n            <div className=\"flex items-center justify-center h-64\">\n              <div className=\"text-center\">\n                <Loading />\n                <p className=\"text-gray-600 mt-4\">Loading questions...</p>\n              </div>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              {!questionsList || questionsList.length === 0 ? (\n                <div className=\"flex items-center justify-center h-64\">\n                  <div className=\"text-center\">\n                    <i className=\"fa-solid fa-inbox text-4xl text-gray-400 mb-4\"></i>\n                    <p className=\"text-gray-600 text-lg font-medium\">No questions found</p>\n                    <p className=\"text-gray-500 mt-1\">Get started by adding your first question</p>\n                  </div>\n                </div>\n              ) : (\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Question Title\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Difficulty\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Category\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Right Answer\n                      </th>\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Actions\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {questionsList.map((question: Question, idx: number) => (\n                      <tr\n                        key={idx}\n                        className=\"hover:bg-gray-50 transition-colors duration-150\"\n                      >\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm font-medium text-gray-900 max-w-xs truncate\" title={question?.title}>\n                            {question?.title}\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium border ${getDifficultyColor(question?.difficulty)}`}>\n                            {question?.difficulty}\n                          </span>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                          {question?.type}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm text-gray-900 max-w-xs truncate\" title={question?.answer}>\n                            {question?.answer}\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                          <div className=\"flex items-center space-x-3\">\n                            <button\n                              onClick={() => handleUpdateModal(question)}\n                              className=\"text-blue-600 hover:text-blue-900 transition-colors duration-150 p-1 rounded-md hover:bg-blue-50\"\n                              title=\"Edit question\"\n                            >\n                              <i className=\"fa-solid fa-pen-to-square text-lg\"></i>\n                            </button>\n                            <button\n                              onClick={() => handleDeleteModal(question?._id, question?.title)}\n                              className=\"text-red-600 hover:text-red-900 transition-colors duration-150 p-1 rounded-md hover:bg-red-50\"\n                              title=\"Delete question\"\n                            >\n                              <i className=\"fa-solid fa-trash-can text-lg\"></i>\n                            </button>\n                          </div>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              )}\n            </div>\n          )}\n        </div>\n\n        {/* Stats Section */}\n        {questionsList && questionsList.length > 0 && (\n          <div className=\"mt-6 bg-white rounded-lg shadow-sm border border-gray-200 p-4\">\n            <div className=\"flex flex-wrap gap-4 text-sm text-gray-600\">\n              <div className=\"flex items-center\">\n                <i className=\"fa-solid fa-list mr-2 text-blue-500\"></i>\n                <span>Total Questions: <span className=\"font-semibold text-gray-900\">{questionsList.length}</span></span>\n              </div>\n              <div className=\"flex items-center\">\n                <i className=\"fa-solid fa-chart-bar mr-2 text-green-500\"></i>\n                <span>Categories: <span className=\"font-semibold text-gray-900\">\n                  {new Set(questionsList.map((q: Question) => q.type)).size}\n                </span></span>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Modals */}\n      {modalState === \"add\" && (\n        <AddQuestionModal\n          getAllQuestions={getAllQuestions}\n          isOpen={isOpen}\n          onClose={handleCloseModal}\n        />\n      )}\n      {modalState === \"update\" && (\n        <UpdateQuestionModal\n          getAllQuestions={getAllQuestions}\n          isOpen={isOpen}\n          onClose={handleCloseModal}\n          question={question}\n        />\n      )}\n      {modalState === \"delete\" && id && (\n        <DeleteQuestionModal\n          getAllQuestions={getAllQuestions}\n          isOpen={isOpen}\n          onClose={handleCloseModal}\n          id={id}\n          questionTitle={questionTitle}\n        />\n      )}\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\r\nimport { Quiz } from \"../../../types\";\r\n\r\ninterface CompletedQuizzes {\r\n  completedQuizzes: Quiz[];\r\n}\r\n\r\nexport default function CompletedQuizzes({\r\n  completedQuizzes,\r\n}: CompletedQuizzes) {\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\r\n      {/* Header */}\r\n      <div className=\"px-6 py-4 border-b border-gray-200\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">Completed Quizzes</h3>\r\n            <p className=\"text-sm text-gray-500\">Recently completed quizzes</p>\r\n          </div>\r\n          <div className=\"w-8 h-8 bg-green-100 rounded-full flex items-center justify-center\">\r\n            <i className=\"fa-solid fa-check text-green-600\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"p-6\">\r\n        {!completedQuizzes || completedQuizzes.length === 0 ? (\r\n          <div className=\"text-center py-12\">\r\n            <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n              <i className=\"fa-solid fa-clipboard-check text-gray-400 text-xl\"></i>\r\n            </div>\r\n            <p className=\"text-gray-500 text-lg font-medium\">No completed quizzes</p>\r\n            <p className=\"text-gray-400 text-sm mt-1\">Completed quizzes will appear here</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"overflow-hidden\">\r\n            {/* Desktop Table */}\r\n            <div className=\"hidden md:block\">\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full divide-y divide-gray-200\">\r\n                  <thead>\r\n                    <tr className=\"bg-gray-50\">\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Title\r\n                      </th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Category Type\r\n                      </th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Participants\r\n                      </th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Date\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {completedQuizzes\r\n                      .slice(0, 3)\r\n                      .map((result: Quiz, idx: number) => (\r\n                        <tr key={idx} className=\"hover:bg-gray-50 transition-colors duration-150\">\r\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                            <div className=\"text-sm font-medium text-gray-900\">{result.title}</div>\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                            <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\r\n                              {result.type}\r\n                            </span>\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                            17\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                            {result.closed_at?.split(\"T\")[0]}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Mobile Cards */}\r\n            <div className=\"md:hidden space-y-4\">\r\n              {completedQuizzes\r\n                .slice(0, 3)\r\n                .map((result: Quiz, idx: number) => (\r\n                  <div key={idx} className=\"bg-gray-50 rounded-lg p-4 border border-gray-200\">\r\n                    <div className=\"flex justify-between items-start mb-2\">\r\n                      <h4 className=\"text-sm font-medium text-gray-900 line-clamp-1\">{result.title}</h4>\r\n                      <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\r\n                        {result.type}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-sm text-gray-500\">\r\n                      <span>17 participants</span>\r\n                      <span>{result.closed_at?.split(\"T\")[0]}</span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Show more link if there are more quizzes */}\r\n            {completedQuizzes.length > 3 && (\r\n              <div className=\"text-center pt-6 border-t border-gray-100 mt-6\">\r\n                <Link\r\n                  to=\"/dashboard/results\"\r\n                  className=\"text-green-600 hover:text-green-700 font-medium text-sm transition-colors duration-200\"\r\n                >\r\n                  View all {completedQuizzes.length} completed quizzes\r\n                  <i className=\"fa-solid fa-arrow-right ml-2\"></i>\r\n                </Link>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\nimport SharedModal from \"../../Shared/Modal/Modal\";\nimport IncomingQuizzes from \"./IncomingQuizzes/IncomingQuizzes\";\nimport CodeModal from \"./CodeModal/CodeModal\";\nimport CompletedQuizzes from \"./CompletedQuizzes/CompletedQuizzes\";\nimport QuizModal from \"./QuizModal/QuizModal\";\nimport { useSelector } from \"react-redux\";\nimport Loading from \"../../Shared/Loading/Loading\";\nimport \"./Quizzes.css\";\nimport { RootState } from \"../../Redux/Store\";\n\nexport default function Quizzes() {\n  const { incomingQuizzes, loading, error } = useSelector((state: RootState) => state.incomingQuizzes);\n  const { completedQuizzes } = useSelector((state: RootState) => state.CompletedQuizzes);\n  \n\n\n  const [modalState, setModalState] = useState(\"close\");\n  const [code, setCode] = useState<string>(\"\");\n  \n  const handleClose = () => {\n    setModalState(\"close\");\n  };\n  \n  const showAddModal = () => {\n    setModalState(\"add\");\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-8\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">\n              Quizzes\n            </h1>\n            <p className=\"text-gray-600 dark:text-gray-400\">\n              Manage and create quizzes for your students\n            </p>\n          </div>\n          <button\n            onClick={showAddModal}\n            className=\"mt-4 sm:mt-0 bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-6 rounded-lg transition-colors duration-200 flex items-center space-x-2\"\n          >\n            <i className=\"fa-solid fa-plus text-sm\"></i>\n            <span>Create Quiz</span>\n          </button>\n        </div>\n\n        {/* Error Display */}\n        {error && (\n          <div className=\"mb-6 bg-red-50 border border-red-200 rounded-lg p-4\">\n            <div className=\"flex items-center\">\n              <i className=\"fa-solid fa-exclamation-triangle text-red-500 mr-3\"></i>\n              <p className=\"text-red-700 font-medium\">{error}</p>\n            </div>\n          </div>\n        )}\n\n        {/* Quiz Content */}\n        <div className=\"space-y-6\">\n          {loading ? (\n            // Loading state\n            <div className=\"flex items-center justify-center h-64 bg-white dark:bg-gray-800 rounded-xl border-2 border-dashed border-gray-300 dark:border-gray-600\">\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 mx-auto mb-4\">\n                  <Loading />\n                </div>\n                <p className=\"text-gray-500 dark:text-gray-400 text-lg\">Loading quizzes...</p>\n              </div>\n            </div>\n          ) : (\n            // Data loaded - show content\n            <>\n              <IncomingQuizzes incomingQuizzes={incomingQuizzes || []} />\n              <CompletedQuizzes completedQuizzes={completedQuizzes || []}/>\n            </>\n          )}\n        </div>\n      </div>\n\n      {/* Modals */}\n      <SharedModal\n        show={modalState === \"add\"}\n        title=\"Create New Quiz\"\n        description=\"Fill in the details below to create a new quiz\"\n        customIcon=\"fa-solid fa-file-circle-plus text-blue-600\"\n        onClose={handleClose}\n        body={\n          modalState ==\"add\"?<QuizModal setCode={setCode} setModalState={setModalState} handleClose={handleClose}/>:\"\"\n        }\n      />\n      <SharedModal\n        show={modalState === \"quiz-code\"}\n        title=\"\"\n        onSave={() => {\n          // Save action\n        }}\n        omitHeader={true}\n        onClose={handleClose}\n        modalType=\"success\"\n        body={\n          <CodeModal handleClose={handleClose} code={code}/>\n        }\n      />\n    </div>\n  );\n}\n","import { getData } from \"../../ApiUtils/ApiUtils\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect, useState, useCallback, Dispatch } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../../Shared/Loading/Loading\";\r\nimport { RootState } from \"../../types\";\r\n\r\ninterface QuizResult {\r\n  quiz: {\r\n    _id: string;\r\n    title: string;\r\n    type: string;\r\n    status: string;\r\n  };\r\n  participants: Array<{\r\n    _id: string;\r\n    first_name: string;\r\n    last_name: string;\r\n    email: string;\r\n    score: number;\r\n  }>;\r\n}\r\n\r\nexport default function Results() {\r\n  const { headers } = useSelector((state: RootState) => state.userData);\r\n  const [getResults, setGetResults] = useState<QuizResult[]>();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const getAllResults = useCallback(() => {\r\n    try {\r\n      setIsLoading(true);\r\n      getData({ path: 'quiz/result', headers, setState: setGetResults as Dispatch<unknown> });\r\n    } catch (error) {\r\n      console.error('Error fetching results:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [headers]);\r\n\r\n  useEffect(() => {\r\n    getAllResults();\r\n  }, [getAllResults]);\r\n\r\n  // Helper function to get status color\r\n  const getStatusColor = (status: string) => {\r\n    switch (status?.toLowerCase()) {\r\n      case 'completed':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'active':\r\n        return 'bg-blue-100 text-blue-800';\r\n      case 'pending':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {/* Header Section */}\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\r\n            <div>\r\n              <h1 className=\"text-2xl font-bold text-gray-900 sm:text-3xl\">\r\n                Quiz Results\r\n              </h1>\r\n              <p className=\"mt-2 text-sm text-gray-600 sm:text-base\">\r\n                View and analyze quiz performance results\r\n              </p>\r\n            </div>\r\n            \r\n            {/* Stats Section */}\r\n            {getResults && getResults.length > 0 && (\r\n              <div className=\"mt-4 sm:mt-0\">\r\n                <div className=\"flex flex-wrap gap-4 text-sm text-gray-600\">\r\n                  <div className=\"flex items-center\">\r\n                    <i className=\"fa-solid fa-chart-bar mr-2 text-blue-500\"></i>\r\n                    <span>Total Results: <span className=\"font-semibold text-gray-900\">{getResults.length}</span></span>\r\n                  </div>\r\n                  <div className=\"flex items-center\">\r\n                    <i className=\"fa-solid fa-users mr-2 text-green-500\"></i>\r\n                    <span>Total Participants: <span className=\"font-semibold text-gray-900\">\r\n                      {getResults.reduce((acc: number, result: QuizResult) => acc + (result.participants?.length || 0), 0)}\r\n                    </span></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\r\n          {/* Table Header */}\r\n          <div className=\"px-6 py-4 border-b border-gray-200 bg-gray-50\">\r\n            <h2 className=\"text-lg font-semibold text-gray-900\">Results Overview</h2>\r\n          </div>\r\n\r\n          {/* Loading State */}\r\n          {isLoading && (\r\n            <div className=\"flex items-center justify-center py-12\">\r\n              <div className=\"text-center\">\r\n                <Loading />\r\n                <p className=\"mt-4 text-sm text-gray-500\">Loading quiz results...</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Results Table */}\r\n          {!isLoading && (\r\n            <div className=\"overflow-x-auto\">\r\n              {!getResults || getResults.length === 0 ? (\r\n                <div className=\"text-center py-12\">\r\n                  <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                    <i className=\"fa-solid fa-chart-line text-gray-400 text-xl\"></i>\r\n                  </div>\r\n                  <p className=\"text-gray-500 text-lg font-medium\">No results available</p>\r\n                  <p className=\"text-gray-400 text-sm mt-1\">Quiz results will appear here once quizzes are completed</p>\r\n                </div>\r\n              ) : (\r\n                <table className=\"min-w-full divide-y divide-gray-200\">\r\n                  <thead className=\"bg-gray-50\">\r\n                    <tr>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Quiz Title\r\n                      </th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Category Type\r\n                      </th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Status\r\n                      </th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Participants\r\n                      </th>\r\n                      <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Actions\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {getResults.map((result: QuizResult, index: number) => (\r\n                      <tr \r\n                        key={index}\r\n                        className=\"hover:bg-gray-50 transition-colors duration-200\"\r\n                      >\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <div className=\"flex items-center\">\r\n                            <div className=\"flex-shrink-0 h-10 w-10\">\r\n                              <div className=\"h-10 w-10 rounded-full bg-blue-100 flex items-center justify-center\">\r\n                                <i className=\"fa-solid fa-question text-blue-600\"></i>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"ml-4\">\r\n                              <div className=\"text-sm font-medium text-gray-900\">\r\n                                {result.quiz?.title || 'Untitled Quiz'}\r\n                              </div>\r\n                              <div className=\"text-sm text-gray-500\">\r\n                                ID: {result.quiz?._id?.slice(-8) || 'N/A'}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <div className=\"text-sm text-gray-900\">\r\n                            {result.quiz?.type || 'N/A'}\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(result.quiz?.status)}`}>\r\n                            {result.quiz?.status || 'Unknown'}\r\n                          </span>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                          <div className=\"flex items-center\">\r\n                            <i className=\"fa-solid fa-users mr-2 text-gray-400\"></i>\r\n                            <span className=\"text-sm text-gray-900 font-medium\">\r\n                              {result.participants?.length || 0}\r\n                            </span>\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                          <Link \r\n                            to={`/dashboard/results/${encodeURIComponent(result.quiz?.title || '')}`}\r\n                            className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200 shadow-sm hover:shadow-md\"\r\n                          >\r\n                            <i className=\"fa-solid fa-eye mr-2\"></i>\r\n                            View Details\r\n                          </Link>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Mobile Card View (Hidden on desktop) */}\r\n        {!isLoading && getResults && getResults.length > 0 && (\r\n          <div className=\"md:hidden mt-6 space-y-4\">\r\n            {getResults.map((result: QuizResult, index: number) => (\r\n              <div \r\n                key={index}\r\n                className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-4 hover:shadow-md transition-shadow duration-200\"\r\n              >\r\n                <div className=\"flex items-start justify-between mb-3\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"h-10 w-10 rounded-full bg-blue-100 flex items-center justify-center mr-3\">\r\n                      <i className=\"fa-solid fa-question text-blue-600\"></i>\r\n                    </div>\r\n                    <div>\r\n                      <h3 className=\"text-sm font-medium text-gray-900\">\r\n                        {result.quiz?.title || 'Untitled Quiz'}\r\n                      </h3>\r\n                      <p className=\"text-xs text-gray-500\">\r\n                        {result.quiz?.type || 'N/A'}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(result.quiz?.status)}`}>\r\n                    {result.quiz?.status || 'Unknown'}\r\n                  </span>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex items-center text-sm text-gray-600\">\r\n                    <i className=\"fa-solid fa-users mr-1\"></i>\r\n                    <span>{result.participants?.length || 0} participants</span>\r\n                  </div>\r\n                  <Link \r\n                    to={`/dashboard/results/${encodeURIComponent(result.quiz?.title || '')}`}\r\n                    className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200\"\r\n                  >\r\n                    <i className=\"fa-solid fa-eye mr-1\"></i>\r\n                    View\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["deselectCurrent","selection","document","getSelection","rangeCount","active","activeElement","ranges","i","push","getRangeAt","tagName","toUpperCase","blur","removeAllRanges","type","forEach","range","addRange","focus","clipboardToIE11Formatting","default","text","options","message","reselectPrevious","mark","success","debug","createRange","createElement","textContent","ariaHidden","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","format","preventDefault","clipboardData","window","clearData","setData","onCopy","body","appendChild","selectNodeContents","execCommand","Error","err","copyKey","test","navigator","userAgent","replace","prompt","removeRange","removeChild","CodeModal","handleClose","code","codeRef","useRef","isCopied","setIsCopied","useState","copyToClipboard","copyText","_a","current","value","copy","toast","setTimeout","error","jsx","className","children","jsxRuntimeExports","jsxs","htmlFor","id","ref","defaultValue","readOnly","onClick","onKeyDown","event","key","title","baseUrl","getData","path","headers","setState","axios","get","then","response","data","catch","_b","fetchDataForSlice","fn","Authorization","Cookies","JSON","parse","String","accessToken","QuizModal","setModalState","setCode","quiz","groups","useSelector","state","userData","isLoading","setIsLoading","durationAndQuestionNumber","register","handleSubmit","formState","errors","setValue","useForm","useEffect","Object","prototype","hasOwnProperty","call","postData","post","res","B","finally","updateData","put","quiz2","_id","Loading","onSubmit","__v","updatedAt","time","status","questions","instructor","date","createdAt","questions_number","score_per_question","difficulty","schadule","schedule","required","placeholder","rows","description","duration","map","_c","valueAsNumber","number","_d","score","_e","_f","_g","level","charAt","slice","_h","cat","_i","group","name","_j","SharedModal","show","customIcon","onClose","onSave","omitHeader","modalType","saveButtonText","closeButtonText","modalRef","handleOutsideClick","contains","target","handleEscapeKey","overflow","removeEventListener","role","getModalStyling","getHeaderIcon","QuizCard","memo","onEdit","onDelete","onView","onShare","showActions","formatDate","calculateTimeRemaining","filterAndSortQuizzes","useCallback","quizzes","searchTerm","sortBy","sortOrder","filtered","filter","toLowerCase","includes","sort","a","b","aValue","bValue","normalizedA","normalizeQuizData","normalizedB","Date","filterAndSortStudents","students","student","first_name","last_name","email","avg_score","filterAndSortQuestions","difficultyFilter","typeFilter","question","calculateQuizStats","total","length","completed","q","published","draft","averageQuestions","Math","round","reduce","sum","difficultyDistribution","acc","completionRate","calculateStudentPerformance","totalStudents","studentsWithScores","s","averageScore","topPerformers","lowPerformers","scoreDistribution","sortedByScore","reverse","dateString","trim","isNaN","getTime","Intl","DateTimeFormat","year","month","day","hour","minute","endTime","expired","display","now","end","remaining","days","floor","hours","minutes","normalizedQuiz","useMemo","formattedDate","timeRemaining","statusStyle","baseClasses","difficultyStyle","handleEdit","handleDelete","handleView","handleShare","progressPercentage","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","width","displayName","QuizCard$1","IncomingQuizzes","incomingQuizzes","location","useLocation","pathname","AddQuestionModal","isOpen","getAllQuestions","reset","errorMessage","option","answer","form","disabled","Fragment","DeleteQuestionModal","questionTitle","reqHeaders","handleKeyDown","async","delete","UpdateQuestionModal","A","C","D","questionsList","setQuestionsList","isloading","modalState","setIsOpen","setId","setQuestion","setQuestionTitle","handleCloseModal","getDifficultyColor","idx","question2","handleUpdateModal","handleDeleteModal","Set","size","CompletedQuizzes","completedQuizzes","result","closed_at","split","Link","to","loading","getResults","setGetResults","getAllResults","getStatusColor","participants","index","encodeURIComponent"],"mappings":"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","x_google_ignoreList":[0,1]}